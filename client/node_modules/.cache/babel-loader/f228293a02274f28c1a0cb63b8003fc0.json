{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HSONNL\\\\Desktop\\\\myProject\\\\NCOV-19\\\\Repo\\\\NCOV-19Manager\\\\client\\\\src\\\\component\\\\NavBar\\\\index.tsx\";\nimport React, { Component } from \"react\"; //style importer\n\nimport * as s__ from \"./style\";\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport List from '@material-ui/core/List';\nconst initState = {\n  open: true\n};\n\nclass NavBar extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = initState;\n\n    this.handleDrawerOpen = () => {\n      this.setState({\n        open: true\n      });\n    };\n\n    this.handleDrawerClose = () => {\n      this.setState({\n        open: false\n      });\n    };\n\n    this.renderNavBarDoctor = () => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(ListItem, {\n        button: true,\n        style: {\n          width: \"250px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(ListItemIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(DashboardIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      })), React.createElement(ListItemText, {\n        primary: \"Get Room\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      })));\n    };\n\n    this.renderSeccondNavBar = () => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(ListItem, {\n        button: true,\n        style: {\n          width: \"250px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(ListItemIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(DashboardIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      })), React.createElement(ListItemText, {\n        primary: \"Get Shift\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      })));\n    };\n\n    this.renderPatientManager = () => {\n      return React.createElement(React.Fragment, null, React.createElement(ListItem, {\n        button: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(ListItemIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(DashboardIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      })), React.createElement(ListItemText, {\n        disableTypography: true,\n        primary: \"Rooms\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      })), React.createElement(ListItem, {\n        button: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, React.createElement(ListItemIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(ShoppingCartIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      })), React.createElement(ListItemText, {\n        primary: \"Shifts\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      })), React.createElement(ListItem, {\n        button: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(ListItemIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, React.createElement(ShoppingCartIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      })), React.createElement(ListItemText, {\n        primary: \"Patients\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      })));\n    };\n\n    this.renderToolbar = () => {\n      return React.createElement(React.Fragment, null, React.createElement(List, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, this.renderPatientManager()));\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      style: {\n        height: \"100%\",\n        width: \"auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, React.createElement(s__.Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, this.renderToolbar()));\n  }\n\n}\n\nexport default NavBar;","map":{"version":3,"sources":["C:/Users/HSONNL/Desktop/myProject/NCOV-19/Repo/NCOV-19Manager/client/src/component/NavBar/index.tsx"],"names":["React","Component","s__","ListItem","ListItemIcon","ListItemText","DashboardIcon","ShoppingCartIcon","List","initState","open","NavBar","state","handleDrawerOpen","setState","handleDrawerClose","renderNavBarDoctor","width","renderSeccondNavBar","renderPatientManager","renderToolbar","render","height"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\n//style importer\r\nimport * as s__ from \"./style\";\r\n\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport BarChartIcon from '@material-ui/icons/BarChart';\r\nimport LayersIcon from '@material-ui/icons/Layers';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\n\r\n//\r\nimport { ExpansionPanel, ExpansionPanelSummary, ExpansionPanelDetails } from '@material-ui/core';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n//\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Box from '@material-ui/core/Box';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Link from '@material-ui/core/Link';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\n// import { mainListItems, secondaryListItems } from './listItems';\r\n//component importer\r\n//utils importer\r\n// import { Link } from \"react-router-dom\";\r\n\r\n// const drawerWidth = 240;\r\n// const useStyles = makeStyles((theme) => ({\r\n//   root: {\r\n//     display: 'flex',\r\n//   },\r\n//   toolbar: {\r\n//     paddingRight: 24, // keep right padding when drawer closed\r\n//   },\r\n//   toolbarIcon: {\r\n//     display: 'flex',\r\n//     alignItems: 'center',\r\n//     justifyContent: 'flex-end',\r\n//     padding: '0 8px',\r\n//     ...theme.mixins.toolbar,\r\n//   },\r\n//   appBar: {\r\n//     zIndex: theme.zIndex.drawer + 1,\r\n//     transition: theme.transitions.create(['width', 'margin'], {\r\n//       easing: theme.transitions.easing.sharp,\r\n//       duration: theme.transitions.duration.leavingScreen,\r\n//     }),\r\n//   },\r\n//   appBarShift: {\r\n//     marginLeft: drawerWidth,\r\n//     width: `calc(100% - ${drawerWidth}px)`,\r\n//     transition: theme.transitions.create(['width', 'margin'], {\r\n//       easing: theme.transitions.easing.sharp,\r\n//       duration: theme.transitions.duration.enteringScreen,\r\n//     }),\r\n//   },\r\n//   menuButton: {\r\n//     marginRight: 36,\r\n//   },\r\n//   menuButtonHidden: {\r\n//     display: 'none',\r\n//   },\r\n//   title: {\r\n//     flexGrow: 1,\r\n//   },\r\n//   drawerPaper: {\r\n//     position: 'relative',\r\n//     whiteSpace: 'nowrap',\r\n//     width: drawerWidth,\r\n//     transition: theme.transitions.create('width', {\r\n//       easing: theme.transitions.easing.sharp,\r\n//       duration: theme.transitions.duration.enteringScreen,\r\n//     }),\r\n//   },\r\n//   drawerPaperClose: {\r\n//     overflowX: 'hidden',\r\n//     transition: theme.transitions.create('width', {\r\n//       easing: theme.transitions.easing.sharp,\r\n//       duration: theme.transitions.duration.leavingScreen,\r\n//     }),\r\n//     width: theme.spacing(7),\r\n//     [theme.breakpoints.up('sm')]: {\r\n//       width: theme.spacing(9),\r\n//     },\r\n//   },\r\n//   appBarSpacer: theme.mixins.toolbar,\r\n//   content: {\r\n//     flexGrow: 1,\r\n//     height: '100vh',\r\n//     overflow: 'auto',\r\n//   },\r\n//   container: {\r\n//     paddingTop: theme.spacing(4),\r\n//     paddingBottom: theme.spacing(4),\r\n//   },\r\n//   paper: {\r\n//     padding: theme.spacing(2),\r\n//     display: 'flex',\r\n//     overflow: 'auto',\r\n//     flexDirection: 'column',\r\n//   },\r\n//   fixedHeight: {\r\n//     height: 240,\r\n//   },\r\n// }));\r\n\r\ntype State = typeof initState;\r\n\r\nconst initState = {\r\n  open: true\r\n};\r\n\r\nclass NavBar extends Component<{}, State> {\r\n  state = initState;\r\n\r\n  // classes = useStyles();\r\n\r\n  handleDrawerOpen = () => {\r\n    this.setState({\r\n      open:true\r\n    });\r\n  };\r\n  handleDrawerClose = () => {\r\n    this.setState({\r\n      open:false\r\n    });\r\n  };\r\n  // fixedHeightPaper = clsx(this.classes.paper, this.classes.fixedHeight);\r\n\r\n  renderNavBarDoctor = () => {\r\n    return (\r\n      <div>\r\n      <ListItem \r\n        button\r\n        style={{width:\"250px\"}}\r\n        >\r\n        <ListItemIcon>\r\n          <DashboardIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Get Room\" />\r\n      </ListItem>\r\n    </div>\r\n    );\r\n  };\r\n\r\n  renderSeccondNavBar = () => {\r\n    return (\r\n      <div>\r\n      <ListItem button style={{width:\"250px\"}}>\r\n        <ListItemIcon>\r\n          <DashboardIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Get Shift\" />\r\n      </ListItem>\r\n    </div>\r\n    )\r\n  }\r\n\r\n  renderPatientManager=()=>{\r\n    return (\r\n      <>\r\n              <ListItem button>\r\n                <ListItemIcon>\r\n                  <DashboardIcon />\r\n                </ListItemIcon>\r\n                <ListItemText disableTypography={true} primary=\"Rooms\" />\r\n              </ListItem>\r\n              <ListItem button>\r\n                <ListItemIcon>\r\n                  <ShoppingCartIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Shifts\" />\r\n              </ListItem>\r\n              <ListItem button>\r\n                <ListItemIcon>\r\n                  <ShoppingCartIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Patients\" />\r\n              </ListItem>\r\n            </>\r\n    )\r\n  }\r\n\r\n  renderToolbar = () =>{\r\n    return (\r\n      <\r\n        // variant=\"permanent\"\r\n        // style={{position:\"relative\",width:\"40px\"}}\r\n        // classes={{\r\n        //   paper: clsx(this.classes.drawerPaper, !this.state.open && this.classes.drawerPaperClose),\r\n        // }}\r\n        // open={true}\r\n      >\r\n        <List>{this.renderPatientManager()}</List>\r\n      </>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return  <div style={{\r\n              height:\"100%\",\r\n              width:\"auto\"\r\n            }}\r\n            >\r\n              <s__.Container>\r\n              {this.renderToolbar()}\r\n              </s__.Container>\r\n            </div>;\r\n  }\r\n}\r\n\r\nexport default NavBar;\r\n"]},"metadata":{},"sourceType":"module"}