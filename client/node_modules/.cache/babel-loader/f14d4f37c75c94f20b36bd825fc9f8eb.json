{"ast":null,"code":"import axios from 'axios';\nconst GET = \"/api/shift/\";\nconst UPDATE = \"/api/shift/\";\nconst DELETE = \"/api/shift/\";\nconst GETALL = \"/api/shift\";\nconst CREATE = \"/api/shift\";\nexport default class ShiftAPI {\n  constructor() {\n    this.get = (token, idShift, response, error) => {\n      axios.get(GET + idShift, {\n        headers: {\n          Authorization: token\n        }\n      }).then(response).catch(error);\n    };\n\n    this.upDate = (token, idShift, formData, response, error) => {\n      const data = {\n        \"startTime\": formData.get(\"startTime\")\n      };\n      axios.put(UPDATE + idShift, data, {\n        headers: {\n          Authorization: token\n        }\n      }).then(response).catch(error);\n    };\n\n    this.delete = (token, idShift, response, error) => {\n      axios({\n        method: 'DELETE',\n        url: DELETE + idShift,\n        headers: {\n          Authorization: token\n        }\n      }).then(response).catch(error);\n    };\n\n    this.getAll = (token, response, error) => {\n      axios.get(GETALL, {\n        headers: {\n          Authorization: token\n        }\n      }).then(response).catch(error);\n    };\n\n    this.create = (token, formData, response, error) => {\n      const data = {\n        \"startTime\": formData.get(\"startTime\"),\n        \"endTime\": formData.get(\"endTime\")\n      };\n      axios.post(CREATE, data, {\n        headers: {\n          Authorization: token\n        }\n      }).then(response).catch(error);\n    };\n  }\n\n}","map":{"version":3,"sources":["C:/Users/HSONNL/Desktop/myProject/NCOV-19/Repo/NCOV-19Manager/client/src/modules/api/shift.ts"],"names":["axios","GET","UPDATE","DELETE","GETALL","CREATE","ShiftAPI","get","token","idShift","response","error","headers","Authorization","then","catch","upDate","formData","data","put","delete","method","url","getAll","create","post"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,GAAW,GAAG,aAApB;AACA,MAAMC,MAAc,GAAG,aAAvB;AACA,MAAMC,MAAc,GAAG,aAAvB;AACA,MAAMC,MAAc,GAAG,YAAvB;AACA,MAAMC,MAAc,GAAG,YAAvB;AAEA,eAAe,MAAMC,QAAN,CAAe;AAAA;AAAA,SAE5BC,GAF4B,GAEtB,CAACC,KAAD,EAAgBC,OAAhB,EAAiCC,QAAjC,EAAgDC,KAAhD,KAA+D;AACnEX,MAAAA,KAAK,CAACO,GAAN,CAAUN,GAAG,GAAGQ,OAAhB,EAAyB;AAAEG,QAAAA,OAAO,EAAE;AAAEC,UAAAA,aAAa,EAAEL;AAAjB;AAAX,OAAzB,EACGM,IADH,CACQJ,QADR,EAEGK,KAFH,CAESJ,KAFT;AAGD,KAN2B;;AAAA,SAS5BK,MAT4B,GASnB,CAACR,KAAD,EAAgBC,OAAhB,EAAiCQ,QAAjC,EAAqDP,QAArD,EAAoEC,KAApE,KAAmF;AAC1F,YAAMO,IAAI,GAAG;AACX,qBAAaD,QAAQ,CAACV,GAAT,CAAa,WAAb;AADF,OAAb;AAGAP,MAAAA,KAAK,CAACmB,GAAN,CAAUjB,MAAM,GAAGO,OAAnB,EAA4BS,IAA5B,EAAkC;AAAEN,QAAAA,OAAO,EAAE;AAAEC,UAAAA,aAAa,EAAEL;AAAjB;AAAX,OAAlC,EACGM,IADH,CACQJ,QADR,EAEGK,KAFH,CAESJ,KAFT;AAGD,KAhB2B;;AAAA,SAkB5BS,MAlB4B,GAkBnB,CAACZ,KAAD,EAAgBC,OAAhB,EAAiCC,QAAjC,EAAgDC,KAAhD,KAA+D;AACtEX,MAAAA,KAAK,CAAC;AACJqB,QAAAA,MAAM,EAAE,QADJ;AAEJC,QAAAA,GAAG,EAAEnB,MAAM,GAAGM,OAFV;AAGJG,QAAAA,OAAO,EAAE;AACPC,UAAAA,aAAa,EAAEL;AADR;AAHL,OAAD,CAAL,CAQGM,IARH,CAQQJ,QARR,EASGK,KATH,CASSJ,KATT;AAUD,KA7B2B;;AAAA,SA+B5BY,MA/B4B,GA+BnB,CAACf,KAAD,EAAgBE,QAAhB,EAA+BC,KAA/B,KAA8C;AACrDX,MAAAA,KAAK,CAACO,GAAN,CAAUH,MAAV,EAAkB;AAAEQ,QAAAA,OAAO,EAAE;AAAEC,UAAAA,aAAa,EAAEL;AAAjB;AAAX,OAAlB,EACGM,IADH,CACQJ,QADR,EAEGK,KAFH,CAESJ,KAFT;AAGD,KAnC2B;;AAAA,SAqC5Ba,MArC4B,GAqCnB,CAAChB,KAAD,EAAgBS,QAAhB,EAAoCP,QAApC,EAAmDC,KAAnD,KAAkE;AACzE,YAAMO,IAAI,GAAG;AACX,qBAAaD,QAAQ,CAACV,GAAT,CAAa,WAAb,CADF;AAEX,mBAAWU,QAAQ,CAACV,GAAT,CAAa,SAAb;AAFA,OAAb;AAIAP,MAAAA,KAAK,CAACyB,IAAN,CAAWpB,MAAX,EAAmBa,IAAnB,EAAyB;AAAEN,QAAAA,OAAO,EAAE;AAAEC,UAAAA,aAAa,EAAEL;AAAjB;AAAX,OAAzB,EACGM,IADH,CACQJ,QADR,EAEGK,KAFH,CAESJ,KAFT;AAGD,KA7C2B;AAAA;;AAAA","sourcesContent":["import axios from 'axios'\r\n\r\nconst GET: string = \"/api/shift/\";\r\nconst UPDATE: string = \"/api/shift/\"\r\nconst DELETE: string = \"/api/shift/\";\r\nconst GETALL: string = \"/api/shift\";\r\nconst CREATE: string = \"/api/shift\";\r\n\r\nexport default class ShiftAPI {\r\n\r\n  get = (token: string, idShift: string, response: any, error: any) => {\r\n    axios.get(GET + idShift, { headers: { Authorization: token } })\r\n      .then(response)\r\n      .catch(error);\r\n  };\r\n\r\n\r\n  upDate = (token: string, idShift: string, formData: FormData, response: any, error: any) => {\r\n    const data = {\r\n      \"startTime\": formData.get(\"startTime\")\r\n    }\r\n    axios.put(UPDATE + idShift, data, { headers: { Authorization: token } })\r\n      .then(response)\r\n      .catch(error);\r\n  };\r\n\r\n  delete = (token: string, idShift: string, response: any, error: any) => {\r\n    axios({\r\n      method: 'DELETE',\r\n      url: DELETE + idShift,\r\n      headers: {\r\n        Authorization: token\r\n      }\r\n    }\r\n    )\r\n      .then(response)\r\n      .catch(error);\r\n  };\r\n\r\n  getAll = (token: string, response: any, error: any) => {\r\n    axios.get(GETALL, { headers: { Authorization: token } })\r\n      .then(response)\r\n      .catch(error);\r\n  };\r\n\r\n  create = (token: string, formData: FormData, response: any, error: any) => {\r\n    const data = {\r\n      \"startTime\": formData.get(\"startTime\"),\r\n      \"endTime\": formData.get(\"endTime\")\r\n    }\r\n    axios.post(CREATE, data, { headers: { Authorization: token } })\r\n      .then(response)\r\n      .catch(error);\r\n  };\r\n}"]},"metadata":{},"sourceType":"module"}