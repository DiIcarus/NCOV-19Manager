{"ast":null,"code":"export const ParseTime = (date, time = \"\") => {\n  let [yyyy, mm, dd] = date.split(\"-\");\n  let [h, m] = time.split(\":\"); // console.log(\"Date:\",date);\n  // console.log(\"Time00:\",new Date(Number(yyyy),Number(mm)-1,Number(dd)+1 -1).getTime())\n  // return new Date(Number(yyyy),(Number(mm)-1),Number(dd)).getTime();\n  // return new Date(Number(yyyy),(Number(mm)),Number(dd)+1,Number(h),Number(m)).getTime();\n\n  if (time === \"\") {\n    return new Date(Number(yyyy), Number(mm) - 1, Number(dd) + 1 - 1, Number(h), Number(m)).getTime();\n  } //server\n\n\n  return new Date(Number(yyyy), Number(mm), Number(dd) + 1).getTime();\n};\nexport const Timestamp2Time = unixTimestamp => {\n  var a = new Date(Number(unixTimestamp));\n  var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n  var year = a.getFullYear();\n  var month = months[a.getMonth()];\n  var date = a.getDate();\n  var hour = a.getHours();\n  var min = a.getMinutes();\n  var sec = a.getSeconds();\n  var time = date + ' ' + month + ' ' + year + ' ' + hour + ':' + min + '\\''; // console.log(\"TIME:\",time,unixTimestamp)\n\n  return time;\n};","map":{"version":3,"sources":["C:/Users/HSONNL/Desktop/myProject/NCOV-19/Repo/NCOV-19Manager/client/src/modules/time.ts"],"names":["ParseTime","date","time","yyyy","mm","dd","split","h","m","Date","Number","getTime","Timestamp2Time","unixTimestamp","a","months","year","getFullYear","month","getMonth","getDate","hour","getHours","min","getMinutes","sec","getSeconds"],"mappings":"AAAA,OAAO,MAAMA,SAAS,GAAG,CAACC,IAAD,EAAaC,IAAW,GAAE,EAA1B,KAA+B;AACtD,MAAI,CAACC,IAAD,EAAMC,EAAN,EAASC,EAAT,IAAeJ,IAAI,CAACK,KAAL,CAAW,GAAX,CAAnB;AACA,MAAI,CAACC,CAAD,EAAGC,CAAH,IAAQN,IAAI,CAACI,KAAL,CAAW,GAAX,CAAZ,CAFsD,CAGtD;AACA;AACA;AACA;;AACA,MAAGJ,IAAI,KAAG,EAAV,EAAa;AACX,WAAO,IAAIO,IAAJ,CAASC,MAAM,CAACP,IAAD,CAAf,EAAsBO,MAAM,CAACN,EAAD,CAAN,GAAW,CAAjC,EAAmCM,MAAM,CAACL,EAAD,CAAN,GAAW,CAAX,GAAc,CAAjD,EAAmDK,MAAM,CAACH,CAAD,CAAzD,EAA6DG,MAAM,CAACF,CAAD,CAAnE,EAAwEG,OAAxE,EAAP;AACD,GATqD,CAUpD;;;AACF,SAAO,IAAIF,IAAJ,CAASC,MAAM,CAACP,IAAD,CAAf,EAAsBO,MAAM,CAACN,EAAD,CAA5B,EAAiCM,MAAM,CAACL,EAAD,CAAN,GAAW,CAA5C,EAAgDM,OAAhD,EAAP;AACD,CAZM;AAcP,OAAO,MAAMC,cAAc,GAAIC,aAAD,IAA0B;AACtD,MAAIC,CAAC,GAAG,IAAIL,IAAJ,CAASC,MAAM,CAACG,aAAD,CAAf,CAAR;AACA,MAAIE,MAAM,GAAG,CAAC,KAAD,EAAO,KAAP,EAAa,KAAb,EAAmB,KAAnB,EAAyB,KAAzB,EAA+B,KAA/B,EAAqC,KAArC,EAA2C,KAA3C,EAAiD,KAAjD,EAAuD,KAAvD,EAA6D,KAA7D,EAAmE,KAAnE,CAAb;AACA,MAAIC,IAAI,GAAGF,CAAC,CAACG,WAAF,EAAX;AACA,MAAIC,KAAK,GAAGH,MAAM,CAACD,CAAC,CAACK,QAAF,EAAD,CAAlB;AACA,MAAIlB,IAAI,GAAGa,CAAC,CAACM,OAAF,EAAX;AACA,MAAIC,IAAI,GAAGP,CAAC,CAACQ,QAAF,EAAX;AACA,MAAIC,GAAG,GAAGT,CAAC,CAACU,UAAF,EAAV;AACA,MAAIC,GAAG,GAAGX,CAAC,CAACY,UAAF,EAAV;AACA,MAAIxB,IAAI,GAAGD,IAAI,GAAG,GAAP,GAAaiB,KAAb,GAAqB,GAArB,GAA2BF,IAA3B,GAAkC,GAAlC,GAAwCK,IAAxC,GAA+C,GAA/C,GAAqDE,GAArD,GAA0D,IAArE,CATsD,CAUtD;;AACA,SAAOrB,IAAP;AACD,CAZM","sourcesContent":["export const ParseTime = (date:string,time:string =\"\")=>{\r\n  let [yyyy,mm,dd] = date.split(\"-\");\r\n  let [h,m] = time.split(\":\");\r\n  // console.log(\"Date:\",date);\r\n  // console.log(\"Time00:\",new Date(Number(yyyy),Number(mm)-1,Number(dd)+1 -1).getTime())\r\n  // return new Date(Number(yyyy),(Number(mm)-1),Number(dd)).getTime();\r\n  // return new Date(Number(yyyy),(Number(mm)),Number(dd)+1,Number(h),Number(m)).getTime();\r\n  if(time===\"\"){\r\n    return new Date(Number(yyyy),Number(mm)-1,Number(dd)+1 -1,Number(h),Number(m)).getTime();\r\n  }\r\n    //server\r\n  return new Date(Number(yyyy),Number(mm),Number(dd)+1 ).getTime();\r\n}\r\n\r\nexport const Timestamp2Time = (unixTimestamp:string) => {\r\n  var a = new Date(Number(unixTimestamp));\r\n  var months = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];\r\n  var year = a.getFullYear();\r\n  var month = months[a.getMonth()];\r\n  var date = a.getDate();\r\n  var hour = a.getHours();\r\n  var min = a.getMinutes();\r\n  var sec = a.getSeconds();\r\n  var time = date + ' ' + month + ' ' + year + ' ' + hour + ':' + min +'\\'';\r\n  // console.log(\"TIME:\",time,unixTimestamp)\r\n  return time; \r\n}"]},"metadata":{},"sourceType":"module"}