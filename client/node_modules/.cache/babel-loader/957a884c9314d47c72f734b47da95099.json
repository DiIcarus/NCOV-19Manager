{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HSONNL\\\\Desktop\\\\myProject\\\\NCOV-19\\\\Repo\\\\NCOV-19Manager\\\\client\\\\src\\\\component\\\\InfoTableUser\\\\index.tsx\";\nimport React, { Component } from \"react\"; //style importer\n\nimport * as s__ from \"./style\";\nimport SaveIcon from '@material-ui/icons/Save';\nimport CloseIcon from '@material-ui/icons/Close'; // import Button from '@material-ui/core/Button';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete'; //component importer\n// import MainMenu from \"../MainMenu/index\";\n//utils importer\n\nimport AdminAPI from \"../../modules/api/admin\";\nimport DoctorAPI from \"../../modules/api/doctor\";\nimport RoomAPI from \"../../modules/api/room\";\nimport ShiftAPI from \"../../modules/api/shift\";\nimport UserAPI from \"../../modules/api/user\";\nimport { Timestamp2Time } from \"../../modules/time\"; //config importer\n\n//global store\nimport { connect } from 'react-redux';\nconst initState = {\n  shift: [],\n  patient: [],\n  users: [],\n  deletemode: false,\n  updatemode: false,\n  insertmode: false,\n  showPopup: false,\n  numberPaper: 0,\n  featureType: \"get\",\n  delAll: false,\n  listDell: [],\n  valueInputSearch: '',\n  usersRequest: {\n    updateemail: '',\n    addshiftidShift: ''\n  },\n  currentId: '',\n  currentUsers: {\n    avatars: [],\n    gender: -1,\n    isActive: true,\n    gps: [],\n    _id: '',\n    address: '',\n    password: '',\n    phoneNumber: '',\n    dateOfBirth: '',\n    identityCard: '',\n    fullName: '',\n    email: '',\n    idRole: {\n      __id: '',\n      name: '',\n      __v: -1\n    },\n    __v: -1\n  }\n};\n\nclass InfoTableUser extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = initState;\n    this.adminApi = new AdminAPI();\n    this.token = window.sessionStorage.accessToken;\n    this.doctorApi = new DoctorAPI();\n    this.roomApi = new RoomAPI();\n    this.shiftApi = new ShiftAPI();\n    this.userApi = new UserAPI();\n\n    this.AddShiftToDoctor = (formData, idDoctor) => {\n      if (this.token) {\n        this.adminApi.addShiftToDoctor(this.token, idDoctor, formData, res => {\n          console.log(res.data);\n        }, err => {\n          console.log(err);\n          console.log(err);\n        });\n      }\n    };\n\n    this.SearchValueInputSearch = () => {\n      console.log('SearchValueInputSearch', +this.state.valueInputSearch + \"[[[[\");\n      this.GetList('?search=' + this.state.valueInputSearch.trim());\n    };\n\n    this.DeleteCurrent = currentId => {\n      if (this.token) {\n        this.adminApi.deleteUser(this.token, currentId, res => {\n          console.log(res.data);\n        }, err => {\n          console.log(err);\n        });\n      }\n    };\n\n    this.UpdateCurrent = (idUsers, formData) => {\n      if (this.token) {\n        this.adminApi.updateUser(this.token, idUsers, formData, res => {\n          console.log(\"Successful\");\n        }, err => {\n          console.log(err);\n        });\n      }\n    };\n\n    this.GETAll = () => {\n      if (this.token) {\n        this.adminApi.getAll(this.token, res => {\n          console.log(\"Get all\", res.data);\n          this.setState({\n            users: res.data.users,\n            numberPaper: Math.floor(Number.parseInt(res.data.total) / Number.parseInt(res.data.amount)) + 1\n          });\n        }, err => {\n          console.log(err);\n          console.log(err);\n        });\n      }\n    };\n\n    this.GETAllShift = () => {\n      if (this.token) {\n        this.shiftApi.getAll(this.token, res => {\n          console.log(\"catruc\", res.data.caTruc);\n          this.setState({\n            shift: res.data.caTruc\n          });\n        }, err => {\n          console.log(err);\n          console.log(err);\n        });\n      }\n    };\n\n    this.GetList = params => {\n      this.adminApi.getList(this.token, params, res => {\n        console.log(res);\n        this.setState({\n          users: res.data.users\n        });\n      }, err => {\n        console.log(err);\n      });\n    };\n\n    this.getIdRow = (users, featureType) => {\n      switch (featureType) {\n        case \"update\":\n          this.setState({\n            currentUsers: users,\n            currentId: users._id,\n            showPopup: true,\n            featureType\n          });\n          break;\n\n        case \"insert\":\n          this.setState({\n            currentUsers: users,\n            currentId: users._id,\n            showPopup: true,\n            featureType\n          });\n          break;\n      }\n    };\n\n    this.addShiftToDoctor = () => {\n      let formdata = new FormData();\n      formdata.append('idShift', this.state.usersRequest.addshiftidShift);\n      this.AddShiftToDoctor(formdata, this.state.currentId);\n      let obj = this.state.usersRequest;\n      obj.addshiftidShift = \"\";\n      this.setState({\n        usersRequest: obj\n      });\n      this.cancelPopup();\n      this.GETAll();\n    };\n\n    this.renderInsertForm = () => {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, React.createElement(Autocomplete, {\n        id: \"country-select-demo\",\n        style: {\n          width: 300\n        },\n        options: this.state.shift,\n        autoHighlight: true,\n        getOptionLabel: option => \"Start:\" + Timestamp2Time(option.startTime) + \"- End:\" + Timestamp2Time(option.endTime),\n        renderOption: option => React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 241\n          },\n          __self: this\n        }, \"Start:(\", Timestamp2Time(option.startTime), \") - End:(\", Timestamp2Time(option.endTime), \")\"),\n        renderInput: params => React.createElement(TextField, Object.assign({}, params, {\n          label: \"Choose a Shift\",\n          variant: \"outlined\",\n          inputProps: { ...params.inputProps,\n            autoComplete: 'new-password'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 246\n          },\n          __self: this\n        })),\n        onChange: (event, value, reason) => {\n          console.log(\"need\", value);\n          this.onchangIdShiftAdmin(value._id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }), React.createElement(s__.TextFieldArea, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, React.createElement(s__.ButtonSubmit, {\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"large\",\n        startIcon: React.createElement(SaveIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 266\n          },\n          __self: this\n        }),\n        onClick: this.addShiftToDoctor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, \"Save\")), React.createElement(s__.TextFieldArea, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, React.createElement(s__.ButtonSubmit, {\n        variant: \"contained\",\n        color: \"default\",\n        size: \"large\",\n        startIcon: React.createElement(CloseIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 275\n          },\n          __self: this\n        }),\n        onClick: this.cancelPopup,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }, \"Cancel\")));\n    };\n\n    this.saveUpdatePopup = () => {\n      let formdata = new FormData();\n      formdata.append('email', this.state.usersRequest.updateemail.toString());\n      console.log(this.state.currentId);\n      this.UpdateCurrent(this.state.currentId, formdata);\n      let obj = this.state.usersRequest;\n      obj.updateemail = \"\";\n      this.setState({\n        usersRequest: obj\n      });\n      this.cancelPopup();\n      this.GETAll();\n    };\n\n    this.renderUpdateForm = () => {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }, React.createElement(s__.TextFieldArea, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }, React.createElement(s__.TextInput, {\n        variant: \"outlined\",\n        label: \"Email\",\n        id: \"Email\",\n        type: \"text\",\n        value: this.state.usersRequest.updateemail,\n        onChange: this.onchangEmailAdmin,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      })), React.createElement(s__.TextFieldArea, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      }, React.createElement(s__.ButtonSubmit, {\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"large\",\n        startIcon: React.createElement(SaveIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 315\n          },\n          __self: this\n        }),\n        onClick: this.saveUpdatePopup,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        },\n        __self: this\n      }, \"Save\")), React.createElement(s__.TextFieldArea, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      }, React.createElement(s__.ButtonSubmit, {\n        variant: \"contained\",\n        color: \"default\",\n        size: \"large\",\n        startIcon: React.createElement(CloseIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 324\n          },\n          __self: this\n        }),\n        onClick: this.cancelPopup,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320\n        },\n        __self: this\n      }, \"Cancel\")));\n    };\n\n    this.renderPopupInput = type => {\n      switch (type) {\n        case \"get\":\n          break;\n\n        case \"update\":\n          return React.createElement(React.Fragment, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 338\n            },\n            __self: this\n          }, this.renderUpdateForm());\n\n        case \"delete\":\n          break;\n\n        case \"insert\":\n          return React.createElement(React.Fragment, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 346\n            },\n            __self: this\n          }, this.renderInsertForm());\n      }\n    };\n\n    this.renderPopupInfo = type => {\n      switch (type) {\n        case \"get\":\n          break;\n\n        case \"update\":\n          return React.createElement(React.Fragment, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 360\n            },\n            __self: this\n          }, React.createElement(\"h1\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 361\n            },\n            __self: this\n          }, \"Update Room \", this.state.currentUsers.fullName), React.createElement(\"h4\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 362\n            },\n            __self: this\n          }, \"Input and click on submit button to update number person on room, or click cancel to exist\"), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 363\n            },\n            __self: this\n          }, \"Current number is \", this.state.currentUsers.email), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 364\n            },\n            __self: this\n          }, \"Max number is \", this.state.currentUsers.fullName));\n\n        case \"delete\":\n          break;\n\n        case \"insert\":\n          return React.createElement(React.Fragment, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 371\n            },\n            __self: this\n          }, React.createElement(\"h1\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 372\n            },\n            __self: this\n          }, \"Create Room\"), React.createElement(\"h4\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 373\n            },\n            __self: this\n          }, \"Input and click on submit button to create a new one, else click cancel to exist\"));\n      }\n    };\n\n    this.showPopup = type => {\n      return React.createElement(React.Fragment, null, React.createElement(s__.PopupBackground, {\n        onClick: this.cancelPopup,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383\n        },\n        __self: this\n      }), React.createElement(s__.PopupContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385\n        },\n        __self: this\n      }, React.createElement(s__.PopupInfo, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386\n        },\n        __self: this\n      }, this.renderPopupInfo(type)), React.createElement(s__.PopupInput, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389\n        },\n        __self: this\n      }, this.renderPopupInput(type))));\n    };\n\n    this.cancelPopup = () => {\n      this.setState({\n        showPopup: false\n      });\n    };\n\n    this.setShowPopupByType = type => {\n      switch (type) {\n        case \"update\":\n          this.setState({\n            updatemode: true,\n            featureType: type\n          });\n          break;\n\n        case \"delete\":\n          break;\n\n        case \"insert\":\n          this.setState({\n            featureType: type,\n            showPopup: true\n          });\n      }\n    };\n\n    this.setInsertMode = () => {\n      this.setState({\n        insertmode: !this.state.insertmode,\n        featureType: 'insert',\n        deletemode: false,\n        updatemode: false\n      });\n    };\n\n    this.setDeleteMode = () => {\n      this.setState({\n        deletemode: !this.state.deletemode,\n        featureType: 'delete',\n        insertmode: false,\n        updatemode: false\n      });\n    };\n\n    this.setUpdateMode = () => {\n      this.setState({\n        updatemode: !this.state.updatemode,\n        featureType: 'update',\n        deletemode: false,\n        insertmode: false\n      });\n    };\n\n    this.setShowPopup = () => {\n      this.setState({\n        showPopup: !this.state.showPopup\n      });\n    };\n\n    this.donotthing = () => {\n      console.log(\"success\");\n    };\n\n    this.setDelAll = () => {\n      this.setState({\n        delAll: !this.state.delAll\n      });\n      console.log(this.state.delAll);\n    };\n\n    this.setInputSearch = event => {\n      this.setState({\n        valueInputSearch: event.target.value\n      });\n    };\n\n    this.onchangEmailAdmin = event => {\n      let obj = this.state.usersRequest;\n      obj.updateemail = event.target.value;\n      this.setState({\n        usersRequest: obj\n      });\n    };\n\n    this.onchangIdShiftAdmin = idShift => {\n      let obj = this.state.usersRequest;\n      obj.addshiftidShift = idShift;\n      this.setState({\n        usersRequest: obj\n      });\n    };\n\n    this.renderButton = () => {\n      return React.createElement(\"div\", {\n        style: {\n          backgroundColor: \"darkblue\",\n          height: \"auto\",\n          borderTopRightRadius: \"5px\",\n          borderTopLeftRadius: \"5px\",\n          padding: \"20px 0px 0px 20px\",\n          color: \"white\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 490\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        style: {\n          marginTop: \"0px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 499\n        },\n        __self: this\n      }, \"User Manager\"), React.createElement(s__.FeatureArea, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 500\n        },\n        __self: this\n      }, React.createElement(s__.FeatureButton, {\n        onClick: this.GETAll,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 501\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 501\n        },\n        __self: this\n      }, \"Refresh\")), React.createElement(s__.FeatureButton, {\n        style: {\n          backgroundColor: this.state.insertmode ? \"tomato\" : \"\"\n        },\n        onClick: this.setInsertMode,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 503\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 503\n        },\n        __self: this\n      }, this.state.insertmode ? \"Cancel\" : \"Shift Register\")), React.createElement(s__.FeatureButton, {\n        style: {\n          backgroundColor: this.state.updatemode ? \"tomato\" : \"\"\n        },\n        onClick: this.setUpdateMode,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 504\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 504\n        },\n        __self: this\n      }, this.state.updatemode ? \"Cancel\" : \"Update User\")), React.createElement(s__.SearchInput, {\n        id: \"maxNumber\",\n        type: \"text\",\n        value: this.state.valueInputSearch,\n        placeholder: \"Search Room By Name\",\n        onChange: this.setInputSearch,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 505\n        },\n        __self: this\n      }), React.createElement(s__.FeatureButton, {\n        onClick: this.SearchValueInputSearch,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 512\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 512\n        },\n        __self: this\n      }, \"Search\")), React.createElement(s__.FeatureButton, {\n        style: {\n          backgroundColor: this.state.deletemode ? \"mediumspringgreen\" : \"\",\n          display: this.state.deletemode ? \"\" : \"none\"\n        },\n        onClick: this.deleteAllCheckd,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 513\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 513\n        },\n        __self: this\n      }, \"Save\")), React.createElement(s__.FeatureButton, {\n        style: {\n          backgroundColor: this.state.deletemode ? \"tomato\" : \"\"\n        },\n        onClick: this.setDeleteMode,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 514\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 514\n        },\n        __self: this\n      }, this.state.deletemode ? \"Cancel\" : \"Delete\"))));\n    };\n\n    this.deleteAllCheckd = () => {\n      console.log('deleteAllCheckd');\n      this.state.listDell.map(value => {\n        this.DeleteCurrent(value);\n      });\n      this.setState({\n        listDell: [],\n        deletemode: false\n      });\n      this.GETAll();\n    };\n\n    this.setIdCurrent = currentId => {\n      this.setState({\n        currentId\n      });\n    };\n\n    this.setListDel = () => {\n      let arr = this.state.listDell;\n\n      if (arr.indexOf(this.state.currentId) === -1) {\n        arr.push(this.state.currentId);\n        this.setState({\n          listDell: arr\n        });\n      } else {\n        arr.splice(arr.indexOf(this.state.currentId), 1);\n        this.setState({\n          listDell: arr\n        });\n      }\n    };\n\n    this.ActiveIdUser = id => {\n      console.log(id);\n      this.adminApi.activeDoctor(this.token, id, res => {\n        console.log(\"succesful\", res);\n      }, err => {\n        console.log(\"fail\", err);\n      });\n      this.GETAll();\n    };\n\n    this.renderChildTableRoom = () => {\n      console.log(\"showinfo\", this.state.users);\n      return this.state.users.map(row => React.createElement(s__.TableRowInfo, {\n        key: row._id,\n        onClick: this.state.updatemode || this.state.insertmode ? () => this.getIdRow(row, this.state.featureType) : () => this.setIdCurrent(row._id),\n        onFocus: () => this.setIdCurrent(row._id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 568\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 570\n        },\n        __self: this\n      }, row.fullName), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 571\n        },\n        __self: this\n      }, row.idRole.name), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 572\n        },\n        __self: this\n      }, row.identityCard), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 573\n        },\n        __self: this\n      }, row.isActive.toString()), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 574\n        },\n        __self: this\n      }, row.phoneNumber), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 575\n        },\n        __self: this\n      }, row.dateOfBirth), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 576\n        },\n        __self: this\n      }, row.email), React.createElement(TableCell, {\n        style: {\n          color: row.isActive ? \"green\" : \"tomato\",\n          cursor: \"pointer\"\n        },\n        onClick: () => this.ActiveIdUser(row._id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 577\n        },\n        __self: this\n      }, row.isActive ? \"active\" : \"deactive\"), React.createElement(TableCell, {\n        align: \"right\",\n        style: {\n          display: this.state.deletemode ? \"\" : \"none\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 578\n        },\n        __self: this\n      }, React.createElement(Checkbox, {\n        size: \"small\",\n        onChange: this.setListDel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 579\n        },\n        __self: this\n      }))));\n    };\n\n    this.renderGrid = () => {\n      return React.createElement(\"div\", {\n        style: {\n          backgroundColor: \"lightcyan\",\n          overflow: \"auto\",\n          height: \"400px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 590\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 591\n        },\n        __self: this\n      }, React.createElement(Table, {\n        size: \"small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 592\n        },\n        __self: this\n      }, React.createElement(TableHead, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 593\n        },\n        __self: this\n      }, React.createElement(s__.TableRowHead, {\n        style: {\n          height: \"50px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 594\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 595\n        },\n        __self: this\n      }, \"Full Name\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 596\n        },\n        __self: this\n      }, \"Role\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 597\n        },\n        __self: this\n      }, \"IdentityCard\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 598\n        },\n        __self: this\n      }, \"Active\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 599\n        },\n        __self: this\n      }, \"PhoneNumber\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 600\n        },\n        __self: this\n      }, \"DateOfBirth\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 601\n        },\n        __self: this\n      }, \"Email\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 602\n        },\n        __self: this\n      }, \"isActive\"), React.createElement(TableCell, {\n        align: \"right\",\n        style: {\n          display: this.state.deletemode ? \"\" : \"none\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 603\n        },\n        __self: this\n      }, React.createElement(Checkbox, {\n        size: \"small\",\n        onChange: this.setDelAll,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 604\n        },\n        __self: this\n      })))), React.createElement(TableBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 610\n        },\n        __self: this\n      }, this.renderChildTableRoom()))));\n    };\n\n    this.renderPaper = () => {\n      let arr = new Array(this.state.numberPaper);\n      console.log(\"Number\", this.state.numberPaper);\n      return React.createElement(s__.PaperDiv, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 623\n        },\n        __self: this\n      }, [...Array(this.state.numberPaper).keys()].map((value, index) => {\n        return React.createElement(s__.PaperDivNumber, {\n          onClick: () => {\n            this.GetList('?page=' + value);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 626\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 626\n          },\n          __self: this\n        }, value + 1));\n      }));\n    };\n  }\n\n  //circle\n  componentDidMount() {\n    // console.log(this.state);\n    this.GETAll();\n    this.GETAllShift(); // setInterval(()=>{\n    //   console.log(\"state\",this.state);\n    //   // console.log(this.props.UserssignedState.token);\n    // },2000)\n  } //API\n\n\n  //Main render\n  render() {\n    return React.createElement(s__.Container, {\n      style: {\n        paddingBottom: \"0px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 637\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 638\n      },\n      __self: this\n    }, this.state.showPopup ? this.showPopup(this.state.featureType) : React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 639\n      },\n      __self: this\n    }), this.renderButton(), this.renderGrid(), this.renderPaper()));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  UsersState: state.UsersState,\n  UserssignedState: state.UserssignedState\n});\n\nexport default connect(mapStateToProps, {})(InfoTableUser);","map":{"version":3,"sources":["C:/Users/HSONNL/Desktop/myProject/NCOV-19/Repo/NCOV-19Manager/client/src/component/InfoTableUser/index.tsx"],"names":["React","Component","s__","SaveIcon","CloseIcon","Table","TableBody","TableCell","TableHead","Checkbox","TextField","Autocomplete","AdminAPI","DoctorAPI","RoomAPI","ShiftAPI","UserAPI","Timestamp2Time","connect","initState","shift","patient","users","deletemode","updatemode","insertmode","showPopup","numberPaper","featureType","delAll","listDell","valueInputSearch","usersRequest","updateemail","addshiftidShift","currentId","currentUsers","avatars","gender","isActive","gps","_id","address","password","phoneNumber","dateOfBirth","identityCard","fullName","email","idRole","__id","name","__v","InfoTableUser","state","adminApi","token","window","sessionStorage","accessToken","doctorApi","roomApi","shiftApi","userApi","AddShiftToDoctor","formData","idDoctor","addShiftToDoctor","res","console","log","data","err","SearchValueInputSearch","GetList","trim","DeleteCurrent","deleteUser","UpdateCurrent","idUsers","updateUser","GETAll","getAll","setState","Math","floor","Number","parseInt","total","amount","GETAllShift","caTruc","params","getList","getIdRow","formdata","FormData","append","obj","cancelPopup","renderInsertForm","width","option","startTime","endTime","inputProps","autoComplete","event","value","reason","onchangIdShiftAdmin","saveUpdatePopup","toString","renderUpdateForm","onchangEmailAdmin","renderPopupInput","type","renderPopupInfo","setShowPopupByType","setInsertMode","setDeleteMode","setUpdateMode","setShowPopup","donotthing","setDelAll","setInputSearch","target","idShift","renderButton","backgroundColor","height","borderTopRightRadius","borderTopLeftRadius","padding","color","marginTop","display","deleteAllCheckd","map","setIdCurrent","setListDel","arr","indexOf","push","splice","ActiveIdUser","id","activeDoctor","renderChildTableRoom","row","cursor","renderGrid","overflow","renderPaper","Array","keys","index","componentDidMount","render","paddingBottom","mapStateToProps","UsersState","UserssignedState"],"mappings":"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","sourcesContent":["import React, { Component, ChangeEvent } from \"react\";\r\n//style importer\r\nimport * as s__ from \"./style\";\r\nimport {Redirect} from 'react-router-dom'\r\n// import Link from '@material-ui/core/Link';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n// import Button from '@material-ui/core/Button';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport ClearAllIcon from '@material-ui/icons/ClearAll';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n//component importer\r\n// import MainMenu from \"../MainMenu/index\";\r\n//utils importer\r\nimport AdminAPI from \"../../modules/api/admin\";\r\nimport DoctorAPI from \"../../modules/api/doctor\";\r\nimport RoomAPI from \"../../modules/api/room\";\r\nimport ShiftAPI from \"../../modules/api/shift\";\r\nimport UserAPI from \"../../modules/api/user\";\r\nimport {Timestamp2Time} from \"../../modules/time\";\r\n//config importer\r\nimport {AdminRequest,DoctorRequest,RoomRequest,ShiftRequest,UserRequest} from \"../../config/requesttype\";\r\nimport * as api__ from \"../../config/apireturntype\";\r\nimport { Button } from \"@material-ui/core\";\r\n//global store\r\nimport { connect } from 'react-redux';\r\nimport {MainState} from '../../store/index';\r\n//type\r\nimport {UsersState} from '../../store/User/type';\r\nimport {UserssignedState} from \"../../store/UsersSigned/type\";\r\n//typeInput\r\n\r\ninterface Props {\r\n  UsersState: UsersState,\r\n  UserssignedState: UserssignedState\r\n}\r\n\r\ntype State =  typeof initState;\r\n\r\nconst initState = {\r\n  shift: [] as api__.Shift[],\r\n  patient: [] as api__.Patient[],\r\n  users:[] as api__.Users[],\r\n\r\n  deletemode:false,\r\n  updatemode:false,\r\n  insertmode:false,\r\n  showPopup:false,\r\n  numberPaper:0,\r\n  featureType:\"get\" as \"update\" | \"delete\" | \"insert\",\r\n  delAll: false,\r\n  listDell:[] as string[],\r\n  valueInputSearch: '' as string,\r\n  usersRequest:{\r\n    updateemail:'' as string,\r\n    addshiftidShift:'' as string\r\n  } as AdminRequest,\r\n  currentId: '',\r\n  currentUsers: {\r\n    avatars: [] as any[],\r\n    gender: -1 as number,\r\n    isActive: true as boolean,\r\n    gps:[] as number[],\r\n    _id:'' as string,\r\n    address:''as string,\r\n    password:'' as string,\r\n    phoneNumber:'' as string,\r\n    dateOfBirth:'' as string,\r\n    identityCard:'' as string,\r\n    fullName:'' as string,\r\n    email:'' as string,\r\n    idRole:{\r\n      __id:'' as string,\r\n      name:'' as string,\r\n      __v:-1 as number\r\n    },\r\n    __v:-1 as number\r\n  } as api__.Users\r\n}\r\n\r\nclass InfoTableUser extends Component<Props, State> {\r\n  state = initState;\r\n  adminApi = new AdminAPI();\r\n  token = window.sessionStorage.accessToken;\r\n  doctorApi = new DoctorAPI();\r\n  roomApi = new RoomAPI();\r\n  shiftApi = new ShiftAPI();\r\n  userApi = new UserAPI();\r\n\r\n  //circle\r\n  componentDidMount(){\r\n    // console.log(this.state);\r\n    this.GETAll();\r\n    this.GETAllShift();\r\n    // setInterval(()=>{\r\n    //   console.log(\"state\",this.state);\r\n    //   // console.log(this.props.UserssignedState.token);\r\n    // },2000)\r\n  }\r\n\r\n  \r\n\r\n  //API\r\n  AddShiftToDoctor = (formData:FormData,idDoctor:string) => {\r\n    if(this.token){\r\n      this.adminApi.addShiftToDoctor(this.token,idDoctor,formData,(res:any)=>{\r\n        console.log(res.data);\r\n      }, \r\n      (err:string)=>{\r\n        console.log(err);\r\n        console.log(err);\r\n      })\r\n    }\r\n  }\r\n\r\n  SearchValueInputSearch = () => {\r\n    console.log('SearchValueInputSearch',+this.state.valueInputSearch+\"[[[[\")\r\n    this.GetList('?search='+this.state.valueInputSearch.trim());\r\n  }\r\n\r\n  DeleteCurrent = (currentId:string) => {\r\n    if(this.token){\r\n      this.adminApi.deleteUser(this.token,currentId,(res:any)=>{\r\n        console.log(res.data);\r\n      }, \r\n      (err:string)=>{\r\n        console.log(err);\r\n      })\r\n    }\r\n  }\r\n\r\n  UpdateCurrent = (idUsers:string,formData:FormData) => {\r\n    if(this.token){\r\n      this.adminApi.updateUser(this.token,idUsers,formData,(res:any)=>{\r\n        console.log(\"Successful\");\r\n      }, \r\n      (err:string)=>{\r\n        console.log(err);\r\n      })\r\n    }\r\n  }\r\n\r\n  GETAll = () =>{\r\n    if(this.token){\r\n      this.adminApi.getAll(this.token,(res:any)=>{\r\n        console.log(\"Get all\",res.data);\r\n        this.setState({\r\n          users:res.data.users,\r\n          numberPaper:(Math.floor(Number.parseInt(res.data.total)/Number.parseInt(res.data.amount))) +1,\r\n        })\r\n      }, \r\n      (err:string)=>{\r\n        console.log(err);\r\n        console.log(err);\r\n      })\r\n    }\r\n  }\r\n\r\n  GETAllShift = () =>{\r\n    if(this.token){\r\n      this.shiftApi.getAll(this.token,(res:any)=>{\r\n        console.log(\"catruc\",res.data.caTruc);\r\n        this.setState({\r\n          shift:res.data.caTruc\r\n        })\r\n      }, \r\n      (err:string)=>{\r\n        console.log(err);\r\n        console.log(err);\r\n      })\r\n    }\r\n  }\r\n\r\n  GetList = (params:string) => {\r\n    this.adminApi.getList(this.token,params,\r\n      (res:any)=>{\r\n        console.log(res)\r\n        this.setState({\r\n          users:res.data.users\r\n        })\r\n      },(err:any)=>{\r\n        console.log(err)\r\n      }\r\n    )\r\n  }\r\n  ////\r\n  getIdRow=(users:api__.Users,featureType: \"update\" | \"delete\" | \"insert\")=>{\r\n    switch(featureType){\r\n      case \"update\":\r\n        this.setState({\r\n          currentUsers:users,\r\n          currentId:users._id,\r\n          showPopup:true,\r\n          featureType\r\n        })\r\n        break;\r\n      case \"insert\":\r\n        this.setState({\r\n          currentUsers:users,\r\n          currentId:users._id,\r\n          showPopup:true,\r\n          featureType\r\n        })\r\n        break;\r\n    }\r\n  }\r\n\r\n\r\n\r\n  addShiftToDoctor = () => {\r\n    let formdata = new FormData();\r\n    formdata.append('idShift',this.state.usersRequest.addshiftidShift);\r\n    this.AddShiftToDoctor(formdata,this.state.currentId);\r\n    let obj = this.state.usersRequest;\r\n    obj.addshiftidShift = \"\";\r\n    this.setState({\r\n      usersRequest:obj\r\n    })\r\n    this.cancelPopup();\r\n    this.GETAll();\r\n  }\r\n\r\n  renderInsertForm = () => {\r\n    return (\r\n      <React.Fragment>\r\n        <Autocomplete\r\n            id=\"country-select-demo\"\r\n            style={{ width: 300 }}\r\n            options={this.state.shift}\r\n            autoHighlight\r\n            getOptionLabel={(option:api__.Shift) => \"Start:\"+Timestamp2Time(option.startTime)+\"- End:\"+ Timestamp2Time(option.endTime)}\r\n            renderOption={(option:api__.Shift) => (\r\n              <React.Fragment>\r\n                Start:({Timestamp2Time(option.startTime)}) - End:({Timestamp2Time(option.endTime)})\r\n              </React.Fragment>\r\n            )}\r\n            renderInput={(params:any) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Choose a Shift\"\r\n                variant=\"outlined\"\r\n                inputProps={{\r\n                  ...params.inputProps,\r\n                  autoComplete: 'new-password',\r\n                }}\r\n              />\r\n            )}\r\n            onChange={(event:any, value: any, reason: string) => {\r\n              console.log(\"need\",value);\r\n              this.onchangIdShiftAdmin(value._id);\r\n            }}\r\n          />\r\n          <s__.TextFieldArea>\r\n            <s__.ButtonSubmit\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              size=\"large\"\r\n              startIcon={<SaveIcon />}\r\n              onClick={this.addShiftToDoctor}\r\n            >Save</s__.ButtonSubmit>\r\n          </s__.TextFieldArea>\r\n          <s__.TextFieldArea>\r\n            <s__.ButtonSubmit\r\n              variant=\"contained\"\r\n              color=\"default\"\r\n              size=\"large\"\r\n              startIcon={<CloseIcon />}\r\n              onClick={this.cancelPopup}\r\n            >Cancel</s__.ButtonSubmit>\r\n          </s__.TextFieldArea>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n\r\n  saveUpdatePopup = () => {\r\n    let formdata = new FormData();\r\n    formdata.append('email',this.state.usersRequest.updateemail.toString());\r\n    console.log(this.state.currentId);\r\n    this.UpdateCurrent(this.state.currentId,formdata);\r\n    let obj = this.state.usersRequest;\r\n    obj.updateemail = \"\";\r\n    this.setState({\r\n      usersRequest:obj\r\n    })\r\n    this.cancelPopup();\r\n    this.GETAll();\r\n  }\r\n\r\n  renderUpdateForm = () => {\r\n    return (\r\n      <React.Fragment>\r\n          <s__.TextFieldArea>\r\n            <s__.TextInput\r\n              variant=\"outlined\"\r\n              label=\"Email\"\r\n              id=\"Email\"\r\n              type=\"text\"\r\n              value={this.state.usersRequest.updateemail}\r\n              onChange={this.onchangEmailAdmin}\r\n            />\r\n          </s__.TextFieldArea>\r\n          <s__.TextFieldArea>\r\n            <s__.ButtonSubmit\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              size=\"large\"\r\n              startIcon={<SaveIcon />}\r\n              onClick={this.saveUpdatePopup}\r\n            >Save</s__.ButtonSubmit>\r\n          </s__.TextFieldArea>\r\n          <s__.TextFieldArea>\r\n            <s__.ButtonSubmit\r\n              variant=\"contained\"\r\n              color=\"default\"\r\n              size=\"large\"\r\n              startIcon={<CloseIcon />}\r\n              onClick={this.cancelPopup}\r\n            >Cancel</s__.ButtonSubmit>\r\n          </s__.TextFieldArea>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n\r\n  renderPopupInput = (type:string) => {\r\n    switch(type){\r\n      case \"get\":\r\n        break;\r\n      case \"update\":\r\n        return (\r\n          <React.Fragment>\r\n            {this.renderUpdateForm()}\r\n          </React.Fragment>\r\n        )\r\n      case \"delete\":\r\n        break;\r\n      case \"insert\":\r\n        return (\r\n          <React.Fragment>\r\n            {this.renderInsertForm()}\r\n          </React.Fragment>\r\n        )\r\n    }\r\n    \r\n  }\r\n\r\n  renderPopupInfo = (type:string) => {\r\n    switch(type){\r\n      case \"get\":\r\n        break;\r\n      case \"update\":\r\n        return (\r\n          <React.Fragment>\r\n            <h1>Update Room {this.state.currentUsers.fullName}</h1>\r\n            <h4>Input and click on submit button to update number person on room, or click cancel to exist</h4>\r\n            <p>Current number is {this.state.currentUsers.email}</p>\r\n            <p>Max number is {this.state.currentUsers.fullName}</p>\r\n          </React.Fragment>\r\n        )\r\n      case \"delete\":\r\n        break;\r\n      case \"insert\":\r\n        return (\r\n          <React.Fragment>\r\n            <h1>Create Room</h1>\r\n            <h4>Input and click on submit button to create a new one, else click cancel to exist</h4>\r\n          </React.Fragment>\r\n        )\r\n    }\r\n  }\r\n\r\n  showPopup = (type:string) => {\r\n    \r\n    return (\r\n      <>\r\n        <s__.PopupBackground onClick={this.cancelPopup}>\r\n        </s__.PopupBackground>\r\n        <s__.PopupContainer>\r\n          <s__.PopupInfo>\r\n            {this.renderPopupInfo(type)}\r\n          </s__.PopupInfo>\r\n          <s__.PopupInput>\r\n            {this.renderPopupInput(type)}\r\n          </s__.PopupInput>\r\n        </s__.PopupContainer>\r\n      </>\r\n    )\r\n  }\r\n\r\n  cancelPopup=()=>{\r\n    this.setState({\r\n      showPopup:false\r\n    })\r\n  }\r\n\r\n  setShowPopupByType = (type:\"update\" | \"delete\" | \"insert\") => {\r\n    switch(type){\r\n      case \"update\":\r\n        this.setState({\r\n          updatemode:true,\r\n          featureType:type\r\n        })\r\n        break;\r\n      case \"delete\":\r\n        break;\r\n      case \"insert\":\r\n        this.setState({\r\n          featureType:type,\r\n          showPopup: true\r\n        })\r\n    }\r\n    \r\n  }\r\n\r\n  setInsertMode = () =>{\r\n    this.setState({\r\n      insertmode:!this.state.insertmode,\r\n      featureType: 'insert',\r\n      deletemode: false,\r\n      updatemode:false\r\n    })\r\n  }\r\n  setDeleteMode = () => {\r\n    this.setState({\r\n      deletemode:!this.state.deletemode,\r\n      featureType: 'delete',\r\n      insertmode:false,\r\n      updatemode:false\r\n    })\r\n  }\r\n\r\n  setUpdateMode = () => {\r\n    this.setState({\r\n      updatemode:!this.state.updatemode,\r\n      featureType:'update',\r\n      deletemode:false,\r\n      insertmode:false\r\n    })\r\n  }\r\n\r\n  setShowPopup = () => {\r\n    this.setState({\r\n      showPopup:!this.state.showPopup\r\n    })\r\n  }\r\n\r\n  donotthing = () => {\r\n    console.log(\"success\");\r\n  }\r\n\r\n  setDelAll = () => {\r\n    this.setState({\r\n      delAll:!this.state.delAll,\r\n    })\r\n    console.log(this.state.delAll);\r\n  }\r\n\r\n  setInputSearch = (event: ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({\r\n      valueInputSearch: event.target.value\r\n    })\r\n  }\r\n\r\n  onchangEmailAdmin = (event: ChangeEvent<HTMLInputElement>) => {\r\n    let obj = this.state.usersRequest;\r\n    obj.updateemail = event.target.value;\r\n    this.setState({\r\n      usersRequest:obj\r\n    })\r\n  }\r\n\r\n  onchangIdShiftAdmin = (idShift:string) => {\r\n    let obj = this.state.usersRequest;\r\n    obj.addshiftidShift = idShift;\r\n    this.setState({\r\n      usersRequest:obj\r\n    })\r\n  }\r\n\r\n  //Render\r\n  renderButton= () =>{\r\n    return (\r\n      <div style={{\r\n        backgroundColor:\"darkblue\",\r\n        height:\"auto\",\r\n        borderTopRightRadius:\"5px\", \r\n        borderTopLeftRadius:\"5px\",\r\n        padding:\"20px 0px 0px 20px\",\r\n        color:\"white\"\r\n        }}\r\n      >\r\n        <h1 style={{marginTop:\"0px\"}}>User Manager</h1>\r\n        <s__.FeatureArea>\r\n          <s__.FeatureButton onClick={this.GETAll}><p>Refresh</p></s__.FeatureButton>\r\n          {/* <s__.FeatureButton onClick={()=>this.setShowPopupByType(\"insert\")}><p>Add Shift To Doctor</p></s__.FeatureButton> */}\r\n          <s__.FeatureButton style={{backgroundColor:this.state.insertmode?\"tomato\":\"\"}} onClick={this.setInsertMode}><p>{this.state.insertmode?\"Cancel\":\"Shift Register\"}</p></s__.FeatureButton>\r\n          <s__.FeatureButton style={{backgroundColor:this.state.updatemode?\"tomato\":\"\"}} onClick={this.setUpdateMode}><p>{this.state.updatemode?\"Cancel\":\"Update User\"}</p></s__.FeatureButton>\r\n          <s__.SearchInput\r\n            id=\"maxNumber\"\r\n            type=\"text\"\r\n            value={this.state.valueInputSearch}\r\n            placeholder=\"Search Room By Name\"\r\n            onChange={this.setInputSearch}\r\n          />\r\n          <s__.FeatureButton onClick={this.SearchValueInputSearch}><p>Search</p></s__.FeatureButton>\r\n          <s__.FeatureButton style={{backgroundColor:this.state.deletemode?\"mediumspringgreen\":\"\",display:this.state.deletemode?\"\":\"none\"}} onClick={this.deleteAllCheckd}><p>Save</p></s__.FeatureButton>\r\n          <s__.FeatureButton style={{backgroundColor:this.state.deletemode?\"tomato\":\"\"}} onClick={this.setDeleteMode}><p>{this.state.deletemode?\"Cancel\":\"Delete\"}</p></s__.FeatureButton>\r\n        </s__.FeatureArea>\r\n        \r\n      </div>\r\n      \r\n    )\r\n  }\r\n\r\n  deleteAllCheckd= () =>{\r\n    console.log('deleteAllCheckd');\r\n    this.state.listDell.map(value => {\r\n      this.DeleteCurrent(value);\r\n    })\r\n    this.setState({\r\n      listDell:[],\r\n      deletemode:false\r\n    })\r\n    this.GETAll();\r\n  }\r\n\r\n  setIdCurrent = (currentId:string) => {\r\n    this.setState({\r\n      currentId\r\n    })\r\n  }\r\n\r\n  setListDel = () => {\r\n    let arr = this.state.listDell;\r\n    if(arr.indexOf(this.state.currentId)===-1){\r\n      arr.push(this.state.currentId)\r\n      this.setState({\r\n        listDell:arr\r\n      })\r\n    }else{\r\n      arr.splice(arr.indexOf(this.state.currentId),1)\r\n      this.setState({\r\n        listDell:arr\r\n      })\r\n    }\r\n  }\r\n\r\n  ActiveIdUser = (id:string) =>{\r\n    console.log(id);\r\n    this.adminApi.activeDoctor(this.token,id,(res:any)=>{\r\n      console.log(\"succesful\",res);\r\n    },(err:any)=>{\r\n      console.log(\"fail\",err);\r\n    })\r\n    this.GETAll()\r\n  }\r\n\r\n  renderChildTableRoom = () => {\r\n    console.log(\"showinfo\",this.state.users);\r\n    return this.state.users.map((row) => (\r\n      <s__.TableRowInfo key={row._id} onClick={(this.state.updatemode || this.state.insertmode)?()=>this.getIdRow(row,this.state.featureType):()=>this.setIdCurrent(row._id)}\r\n      onFocus={()=>this.setIdCurrent(row._id)}>\r\n        <TableCell>{row.fullName}</TableCell>\r\n        <TableCell>{row.idRole.name}</TableCell>\r\n        <TableCell>{row.identityCard}</TableCell>\r\n        <TableCell >{row.isActive.toString()}</TableCell>\r\n        <TableCell >{row.phoneNumber}</TableCell>\r\n        <TableCell >{row.dateOfBirth}</TableCell>\r\n        <TableCell >{row.email}</TableCell>\r\n        <TableCell style={{color:row.isActive?\"green\":\"tomato\",cursor:\"pointer\"}} onClick={()=>this.ActiveIdUser(row._id)}>{row.isActive?\"active\":\"deactive\"}</TableCell>\r\n        <TableCell align=\"right\" style={{display:this.state.deletemode?\"\":\"none\"}} >\r\n          <Checkbox \r\n            size=\"small\"\r\n            onChange={this.setListDel}  \r\n          />\r\n        </TableCell>\r\n      </s__.TableRowInfo>\r\n    ))\r\n  }\r\n\r\n  renderGrid = () =>{\r\n    return (\r\n    <div style={{backgroundColor:\"lightcyan\",overflow:\"auto\",height:\"400px\"}}>\r\n      <div >\r\n        <Table size=\"small\">\r\n          <TableHead >\r\n            <s__.TableRowHead style={{height:\"50px\"}}>\r\n              <TableCell>Full Name</TableCell>\r\n              <TableCell>Role</TableCell>\r\n              <TableCell>IdentityCard</TableCell>\r\n              <TableCell>Active</TableCell>\r\n              <TableCell>PhoneNumber</TableCell>\r\n              <TableCell>DateOfBirth</TableCell>\r\n              <TableCell>Email</TableCell>\r\n              <TableCell>isActive</TableCell>\r\n              <TableCell align=\"right\" style={{display:this.state.deletemode?\"\":\"none\"}}>\r\n                <Checkbox\r\n                  size=\"small\"\r\n                  onChange={this.setDelAll}/>\r\n              </TableCell>\r\n            </s__.TableRowHead>\r\n          </TableHead>\r\n          <TableBody>\r\n            {this.renderChildTableRoom()}\r\n          </TableBody>\r\n        </Table>\r\n      </div>\r\n    </div>\r\n  )\r\n  }\r\n\r\n  renderPaper = () =>{\r\n    let arr = new Array(this.state.numberPaper);\r\n    console.log(\"Number\",this.state.numberPaper)\r\n    return (\r\n        <s__.PaperDiv>\r\n          {\r\n          [...Array(this.state.numberPaper).keys()].map((value,index)=>{\r\n            return <s__.PaperDivNumber onClick={()=>{this.GetList('?page='+value)}}><p>{value+1}</p></s__.PaperDivNumber>\r\n          })\r\n          }\r\n          \r\n        </s__.PaperDiv>\r\n    )\r\n  }\r\n\r\n  //Main render\r\n  render() {\r\n    return (\r\n      <s__.Container style={{paddingBottom:\"0px\"}}>\r\n        <div>\r\n          {this.state.showPopup?this.showPopup(this.state.featureType):<React.Fragment/>}\r\n          {this.renderButton()}\r\n          {this.renderGrid()}\r\n          {this.renderPaper()}\r\n        </div>\r\n      </s__.Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state:MainState) =>({\r\n  UsersState: state.UsersState,\r\n  UserssignedState: state.UserssignedState\r\n});\r\nexport default connect(mapStateToProps,{})(InfoTableUser);\r\n"]},"metadata":{},"sourceType":"module"}