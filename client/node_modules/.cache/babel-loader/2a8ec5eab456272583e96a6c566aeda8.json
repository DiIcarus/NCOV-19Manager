{"ast":null,"code":"(function (global_, factory) {\n  if (typeof exports === 'object') {\n    module.exports = factory;\n  } else if (typeof define === 'function' && define.amd) {\n    define([], function () {\n      return factory(global_);\n    });\n  } else {\n    window.JWT = factory(global_);\n  }\n})(this, function (_global) {\n  var JWT = {};\n  JWT.defaults = {\n    // The key used to store the token\n    key: 'JWT_TOKEN',\n    // This is the official token to use for JWT but feel free to use another one if you want\n    tokenPrefix: 'Bearer ',\n    // Where to store the token, by default localStorage\n    storage: _global.localStorage,\n    // In Base64 url-safe mode, padding isn't mandatory, so we will disable it by default\n    // but you can force it by setting this param to true if you want\n    padding: false\n  };\n\n  JWT.encode64 = function encode64(value) {\n    var encoded = _global.btoa(_global.unescape(_global.encodeURIComponent(value)));\n\n    if (!JWT.defaults.padding) {\n      return encoded.replace(/=+$/, '');\n    } else {\n      return encoded;\n    }\n  };\n\n  JWT.decode64 = function decode64(value) {\n    return _global.decodeURIComponent(_global.escape(_global.atob(value)));\n  };\n\n  JWT.write = function write(value) {\n    return JWT.defaults.tokenPrefix + JWT.encode64(JSON.stringify(value.header)) + '.' + JWT.encode64(JSON.stringify(value.claim)) + '.' + (value.signature || '');\n  };\n\n  JWT.read = function read(header) {\n    if (header.indexOf(JWT.defaults.tokenPrefix) === 0) {\n      header = header.substring(JWT.defaults.tokenPrefix.length);\n    }\n\n    var parts = header.split('.');\n    return {\n      header: JSON.parse(JWT.decode64(parts[0])),\n      claim: JSON.parse(JWT.decode64(parts[1])),\n      signature: parts[2] || ''\n    };\n  };\n\n  JWT.validateClaim = function validateClaim(claim, issuer, audience) {\n    var now = Date.now() / 1000;\n    return claim && (!claim.exp || claim.exp > now) && (!claim.nbf || claim.nbf < now) && (issuer === undefined || issuer === claim.iss) && (audience === undefined || audience === claim.aud);\n  };\n\n  JWT.validate = function validate(value, issuer, audience) {\n    if (isString(value)) {\n      value = JWT.read(value);\n    }\n\n    return value && value.claim && JWT.validateClaim(value.claim, issuer, audience);\n  };\n\n  JWT.set = function set(value, key, storage) {\n    var normalized = normalize(key, storage);\n    return normalized.storage.setItem(normalized.key, value);\n  };\n\n  JWT.get = function get(key, storage) {\n    var normalized = normalize(key, storage);\n    return normalized.storage.getItem(normalized.key);\n  };\n\n  JWT.remove = function forget(key, storage) {\n    var normalized = normalize(key, storage);\n    return normalized.storage.removeItem(normalized.key);\n  };\n\n  JWT.keep = function keep(value, key, storage) {\n    return JWT.set(isString(value) ? value : JWT.write(value), key, storage);\n  };\n\n  JWT.remember = function remember(key, storage) {\n    var memory = JWT.get(key, storage);\n    return memory && JWT.read(memory);\n  };\n\n  JWT.forget = JWT.remove; // Private functions\n  // Just a little bit copy/pasted from Lodash\n\n  function isString(value) {\n    return typeof value == 'string' || value && typeof value == 'object' && Object.prototype.toString.call(value) == '[object String]' || false;\n  }\n\n  function normalize(key, storage) {\n    if (key && !isString(key)) {\n      storage = key;\n      key = undefined;\n    }\n\n    return {\n      key: key || JWT.defaults.key,\n      storage: storage || JWT.defaults.storage\n    };\n  }\n\n  return JWT;\n});","map":{"version":3,"sources":["C:/Users/HSONNL/Desktop/myProject/NCOV-19/Repo/NCOV-19Manager/client/node_modules/jwt-client/jwt-client.js"],"names":["global_","factory","exports","module","define","amd","window","JWT","_global","defaults","key","tokenPrefix","storage","localStorage","padding","encode64","value","encoded","btoa","unescape","encodeURIComponent","replace","decode64","decodeURIComponent","escape","atob","write","JSON","stringify","header","claim","signature","read","indexOf","substring","length","parts","split","parse","validateClaim","issuer","audience","now","Date","exp","nbf","undefined","iss","aud","validate","isString","set","normalized","normalize","setItem","get","getItem","remove","forget","removeItem","keep","remember","memory","Object","prototype","toString","call"],"mappings":"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","sourcesContent":["(function (global_, factory) {\n  if (typeof exports === 'object') {\n    module.exports = factory;\n  }\n  else if (typeof define === 'function' && define.amd) {\n    define([], function () {\n      return factory(global_);\n    });\n  }\n  else {\n    window.JWT = factory(global_);\n  }\n})(this, function (_global) {\n  var JWT = {};\n\n  JWT.defaults = {\n    // The key used to store the token\n    key: 'JWT_TOKEN',\n    // This is the official token to use for JWT but feel free to use another one if you want\n    tokenPrefix: 'Bearer ',\n    // Where to store the token, by default localStorage\n    storage: _global.localStorage,\n    // In Base64 url-safe mode, padding isn't mandatory, so we will disable it by default\n    // but you can force it by setting this param to true if you want\n    padding: false\n  };\n\n  JWT.encode64 = function encode64(value) {\n    var encoded = _global.btoa(_global.unescape(_global.encodeURIComponent(value)));\n    if (!JWT.defaults.padding) { return encoded.replace(/=+$/, ''); }\n    else { return encoded; }\n  };\n\n  JWT.decode64 = function decode64(value) {\n    return _global.decodeURIComponent(_global.escape(_global.atob(value)));\n  };\n\n  JWT.write = function write(value) {\n    return JWT.defaults.tokenPrefix +\n            JWT.encode64(JSON.stringify(value.header)) + '.' +\n            JWT.encode64(JSON.stringify(value.claim)) + '.' +\n            (value.signature || '');\n  };\n\n  JWT.read = function read(header) {\n    if (header.indexOf(JWT.defaults.tokenPrefix) === 0) {\n      header = header.substring(JWT.defaults.tokenPrefix.length);\n    }\n\n    var parts = header.split('.');\n    return {\n      header: JSON.parse(JWT.decode64(parts[0])),\n      claim: JSON.parse(JWT.decode64(parts[1])),\n      signature: (parts[2] || '')\n    };\n  };\n\n  JWT.validateClaim = function validateClaim(claim, issuer, audience) {\n    var now = Date.now() / 1000;\n    return claim &&\n      (!claim.exp || claim.exp > now) &&\n      (!claim.nbf || claim.nbf < now) &&\n      (issuer === undefined || issuer === claim.iss) &&\n      (audience === undefined || audience === claim.aud);\n  };\n\n  JWT.validate = function validate(value, issuer, audience) {\n    if (isString(value)) { value = JWT.read(value); }\n    return value && value.claim && JWT.validateClaim(value.claim, issuer, audience);\n  };\n\n  JWT.set = function set(value, key, storage) {\n    var normalized = normalize(key, storage);\n    return normalized.storage.setItem(normalized.key, value);\n  };\n\n  JWT.get = function get(key, storage) {\n    var normalized = normalize(key, storage);\n    return normalized.storage.getItem(normalized.key);\n  };\n\n  JWT.remove = function forget(key, storage) {\n    var normalized = normalize(key, storage);\n    return normalized.storage.removeItem(normalized.key);\n  };\n\n  JWT.keep = function keep(value, key, storage) {\n    return JWT.set(isString(value) ? value : JWT.write(value), key, storage);\n  };\n\n  JWT.remember = function remember(key, storage) {\n    var memory = JWT.get(key, storage);\n    return memory && JWT.read(memory);\n  };\n\n  JWT.forget = JWT.remove;\n\n  // Private functions\n  // Just a little bit copy/pasted from Lodash\n  function isString(value) {\n    return typeof value == 'string' ||\n      (value && typeof value == 'object' && Object.prototype.toString.call(value) == '[object String]') || false;\n  }\n\n  function normalize(key, storage) {\n    if (key && !isString(key)) {\n      storage = key;\n      key = undefined;\n    }\n    return {\n      key: key || JWT.defaults.key,\n      storage: storage || JWT.defaults.storage\n    };\n  }\n\n  return JWT;\n});\n"]},"metadata":{},"sourceType":"script"}