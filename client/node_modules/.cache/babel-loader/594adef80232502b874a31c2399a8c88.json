{"ast":null,"code":"import io from \"socket.io-client\";\nimport * as config__ from \"./../config\";\nexport class SocketIOClient {\n  constructor() {\n    this.socket = io(config__.HOST);\n\n    this.demoOn = () => {\n      this.socket.on('data-vn', data => {\n        console.log(data);\n      });\n      this.socket.on('data-global', data => {\n        console.log(\"GLO\");\n      });\n      this.socket.on('data-all', () => {\n        console.log(\"ALL\");\n      });\n    };\n\n    this.demoEmit = () => {\n      this.socket.emit('', () => {\n        console.log(\"EMIT_CLIENT\");\n      });\n    };\n  }\n\n}","map":{"version":3,"sources":["C:/Users/HSONNL/Desktop/myProject/NCOV-19/Repo/NCOV-19Manager/client/src/modules/socketio-client/socketio-client.ts"],"names":["io","config__","SocketIOClient","socket","HOST","demoOn","on","data","console","log","demoEmit","emit"],"mappings":"AAAA,OAAOA,EAAP,MAAe,kBAAf;AACA,OAAO,KAAKC,QAAZ,MAA0B,aAA1B;AAMA,OAAO,MAAMC,cAAN,CAAoB;AAAA;AAAA,SACzBC,MADyB,GAChBH,EAAE,CAACC,QAAQ,CAACG,IAAV,CADc;;AAAA,SAEzBC,MAFyB,GAEhB,MAAK;AACZ,WAAKF,MAAL,CAAYG,EAAZ,CAAe,SAAf,EAA2BC,IAAD,IAAc;AAACC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AAAkB,OAA3D;AACA,WAAKJ,MAAL,CAAYG,EAAZ,CAAe,aAAf,EAA+BC,IAAD,IAAc;AAACC,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AAAmB,OAAhE;AACA,WAAKN,MAAL,CAAYG,EAAZ,CAAe,UAAf,EAA2B,MAAM;AAACE,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AAAmB,OAArD;AACD,KANwB;;AAAA,SAQzBC,QARyB,GAQd,MAAI;AACb,WAAKP,MAAL,CAAYQ,IAAZ,CAAiB,EAAjB,EAAoB,MAAI;AACtBH,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACD,OAFD;AAGD,KAZwB;AAAA;;AAAA","sourcesContent":["import io from \"socket.io-client\";\r\nimport * as config__ from \"./../config\";\r\ninterface config {\r\n  URI_Scheme: string,\r\n  host:string,\r\n  port:string,\r\n}\r\nexport class SocketIOClient{\r\n  socket = io(config__.HOST);\r\n  demoOn = () =>{\r\n    this.socket.on('data-vn', (data:any) => {console.log(data)});\r\n    this.socket.on('data-global', (data:any) => {console.log(\"GLO\")});\r\n    this.socket.on('data-all', () => {console.log(\"ALL\")});\r\n  }\r\n\r\n  demoEmit = ()=>{\r\n    this.socket.emit('',()=>{\r\n      console.log(\"EMIT_CLIENT\")\r\n    })\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}