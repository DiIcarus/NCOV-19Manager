{"ast":null,"code":"// import GoogleMapReact, { BootstrapURLKeys, MapOptions } from 'google-map-react';\n// import React , {Component}from 'react'\n// const center = { lat: 0, lng: 0 };\n// const key: BootstrapURLKeys = { key: 'AIzaSyBDGR6kCXWTIGF3zKlp9JQRqvoUC2-Ti-Y', libraries: \"places\" };\n// const client: BootstrapURLKeys = { client: 'AIzaSyBDGR6kCXWTIGF3zKlp9JQRqvoUC2-Ti-Y', v: '3.28' , language: 'en', libraries: \"places\", region: \"PR\" };\n// const options: MapOptions = {\n//     zoomControl: false,\n//     gestureHandling: 'cooperative',\n//     styles: [\n//         {\n//             featureType: \"administrative\",\n//             elementType: \"all\",\n//             stylers: [ {saturation: \"-100\"} ]\n//         },\n//         {\n//             featureType: \"administrative.neighborhood\",\n//             stylers: [ {visibility: \"off\" } ]\n//         },\n//         {\n//             elementType: \"labels.text.stroke\",\n//             stylers: [ {color: \"#242f3e\"} ]\n//         },\n//         {\n//             stylers: [ {color: \"#fcfffd\"} ]\n//         }\n//     ],\n// };\n// export default class MyComponent extends Component<{},{}>{\n//   render(){\n//     return(\n//       <GoogleMapReact key='AIzaSyBDGR6kCXWTIGF3zKlp9JQRqvoUC2-Ti-Y' center={center} heatmapLibrary={true} zoom={3} bootstrapURLKeys={client} options={options} />\n//     )\n//   }\n// }\nimport 'ol/ol.css';\nimport { Map, View } from 'ol';\nimport TileLayer from 'ol/layer/Tile';\nimport OSM from 'ol/source/OSM';\nconst map = new Map({\n  target: 'map',\n  layers: [new TileLayer({\n    source: new OSM()\n  })],\n  view: new View({\n    center: [0, 0],\n    zoom: 0\n  })\n});","map":{"version":3,"sources":["C:/Users/HSONNL/Desktop/myProject/NCOV-19/Repo/NCOV-19Manager/client/src/component/GoogleMapReact/index.tsx"],"names":["Map","View","TileLayer","OSM","map","target","layers","source","view","center","zoom"],"mappings":"AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAO,WAAP;AACA,SAAQA,GAAR,EAAaC,IAAb,QAAwB,IAAxB;AACA,OAAOC,SAAP,MAAsB,eAAtB;AACA,OAAOC,GAAP,MAAgB,eAAhB;AAEA,MAAMC,GAAG,GAAG,IAAIJ,GAAJ,CAAQ;AAClBK,EAAAA,MAAM,EAAE,KADU;AAElBC,EAAAA,MAAM,EAAE,CACN,IAAIJ,SAAJ,CAAc;AACZK,IAAAA,MAAM,EAAE,IAAIJ,GAAJ;AADI,GAAd,CADM,CAFU;AAOlBK,EAAAA,IAAI,EAAE,IAAIP,IAAJ,CAAS;AACbQ,IAAAA,MAAM,EAAE,CAAC,CAAD,EAAI,CAAJ,CADK;AAEbC,IAAAA,IAAI,EAAE;AAFO,GAAT;AAPY,CAAR,CAAZ","sourcesContent":["\r\n// import GoogleMapReact, { BootstrapURLKeys, MapOptions } from 'google-map-react';\r\n// import React , {Component}from 'react'\r\n// const center = { lat: 0, lng: 0 };\r\n\r\n// const key: BootstrapURLKeys = { key: 'AIzaSyBDGR6kCXWTIGF3zKlp9JQRqvoUC2-Ti-Y', libraries: \"places\" };\r\n// const client: BootstrapURLKeys = { client: 'AIzaSyBDGR6kCXWTIGF3zKlp9JQRqvoUC2-Ti-Y', v: '3.28' , language: 'en', libraries: \"places\", region: \"PR\" };\r\n// const options: MapOptions = {\r\n//     zoomControl: false,\r\n//     gestureHandling: 'cooperative',\r\n//     styles: [\r\n//         {\r\n//             featureType: \"administrative\",\r\n//             elementType: \"all\",\r\n//             stylers: [ {saturation: \"-100\"} ]\r\n//         },\r\n//         {\r\n//             featureType: \"administrative.neighborhood\",\r\n//             stylers: [ {visibility: \"off\" } ]\r\n//         },\r\n//         {\r\n//             elementType: \"labels.text.stroke\",\r\n//             stylers: [ {color: \"#242f3e\"} ]\r\n//         },\r\n//         {\r\n//             stylers: [ {color: \"#fcfffd\"} ]\r\n//         }\r\n//     ],\r\n// };\r\n// export default class MyComponent extends Component<{},{}>{\r\n//   render(){\r\n//     return(\r\n//       <GoogleMapReact key='AIzaSyBDGR6kCXWTIGF3zKlp9JQRqvoUC2-Ti-Y' center={center} heatmapLibrary={true} zoom={3} bootstrapURLKeys={client} options={options} />\r\n//     )\r\n//   }\r\n// }\r\n\r\nimport 'ol/ol.css';\r\nimport {Map, View} from 'ol';\r\nimport TileLayer from 'ol/layer/Tile';\r\nimport OSM from 'ol/source/OSM';\r\n\r\nconst map = new Map({\r\n  target: 'map',\r\n  layers: [\r\n    new TileLayer({\r\n      source: new OSM()\r\n    })\r\n  ],\r\n  view: new View({\r\n    center: [0, 0],\r\n    zoom: 0\r\n  })\r\n});\r\n"]},"metadata":{},"sourceType":"module"}