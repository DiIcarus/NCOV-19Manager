{"ast":null,"code":"import io from \"socket.io-client\";\nimport * as config__ from \"./../config\";\nexport class SocketIOClient {\n  constructor() {\n    this.socket = io(config__.HOST);\n\n    this.getDataVN = res => {\n      this.socket.on('data-vn', res);\n    };\n\n    this.getDataGlobal = res => {\n      this.socket.on('data-global', data => {\n        DATA = JSON.parse(data);\n      });\n    };\n\n    this.getDataAll = () => {\n      this.socket.on('data-all', data => JSON.parse(data));\n    };\n\n    this.getDataLocation = () => {\n      this.socket.on('data-location', data => JSON.parse(data));\n    };\n  }\n\n}","map":{"version":3,"sources":["C:/Users/HSONNL/Desktop/myProject/NCOV-19/Repo/NCOV-19Manager/client/src/modules/socketio-client/socketio-client.ts"],"names":["io","config__","SocketIOClient","socket","HOST","getDataVN","res","on","getDataGlobal","data","DATA","JSON","parse","getDataAll","getDataLocation"],"mappings":"AAAA,OAAOA,EAAP,MAAe,kBAAf;AACA,OAAO,KAAKC,QAAZ,MAA0B,aAA1B;AAMA,OAAO,MAAMC,cAAN,CAAoB;AAAA;AAAA,SACzBC,MADyB,GAChBH,EAAE,CAACC,QAAQ,CAACG,IAAV,CADc;;AAAA,SAEzBC,SAFyB,GAEZC,GAAD,IAAa;AACvB,WAAKH,MAAL,CAAYI,EAAZ,CAAe,SAAf,EAA0BD,GAA1B;AACD,KAJwB;;AAAA,SAMzBE,aANyB,GAMRF,GAAD,IAAa;AAC3B,WAAKH,MAAL,CAAYI,EAAZ,CAAe,aAAf,EAA+BE,IAAD,IAAc;AAACC,QAAAA,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWH,IAAX,CAAP;AAAwB,OAArE;AACD,KARwB;;AAAA,SAUzBI,UAVyB,GAUZ,MAAM;AACjB,WAAKV,MAAL,CAAYI,EAAZ,CAAe,UAAf,EAA4BE,IAAD,IAAcE,IAAI,CAACC,KAAL,CAAWH,IAAX,CAAzC;AACD,KAZwB;;AAAA,SAczBK,eAdyB,GAcP,MAAM;AACtB,WAAKX,MAAL,CAAYI,EAAZ,CAAe,eAAf,EAAiCE,IAAD,IAAcE,IAAI,CAACC,KAAL,CAAWH,IAAX,CAA9C;AACD,KAhBwB;AAAA;;AAAA","sourcesContent":["import io from \"socket.io-client\";\r\nimport * as config__ from \"./../config\";\r\ninterface config {\r\n  URI_Scheme: string,\r\n  host:string,\r\n  port:string,\r\n}\r\nexport class SocketIOClient{\r\n  socket = io(config__.HOST);\r\n  getDataVN = (res:any) => {\r\n    this.socket.on('data-vn', res);\r\n  }\r\n\r\n  getDataGlobal = (res:any) => {\r\n    this.socket.on('data-global', (data:any) => {DATA = JSON.parse(data)});\r\n  }\r\n\r\n  getDataAll = () => {\r\n    this.socket.on('data-all', (data:any) => JSON.parse(data));\r\n  }\r\n\r\n  getDataLocation = () => {\r\n    this.socket.on('data-location', (data:any) => JSON.parse(data));\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}