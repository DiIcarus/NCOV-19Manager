{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HSONNL\\\\Desktop\\\\myProject\\\\NCOV-19\\\\Repo\\\\NCOV-19Manager\\\\client\\\\src\\\\component\\\\InfoTableRoom\\\\index.tsx\";\nimport React, { Component } from \"react\"; //style importer\n\nimport * as s__ from \"./style\";\nimport SaveIcon from '@material-ui/icons/Save';\nimport CloseIcon from '@material-ui/icons/Close'; // import Button from '@material-ui/core/Button';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport JWT from 'jwt-client'; //component importer\n// import MainMenu from \"../MainMenu/index\";\n//utils importer\n\nimport AdminAPI from \"../../modules/api/admin\";\nimport DoctorAPI from \"../../modules/api/doctor\";\nimport RoomAPI from \"../../modules/api/room\";\nimport ShiftAPI from \"../../modules/api/shift\";\nimport UserAPI from \"../../modules/api/user\";\nimport * as time__ from \"./../../modules/time\"; //config importer\n\n//global store\nimport { connect } from 'react-redux';\nconst initState = {\n  childtable: [],\n  checkedPatien: [],\n  patientInRoom: [],\n  room: [],\n  patient: [],\n  shift: [],\n  role: '',\n  currentId: '',\n  historyDate: '',\n  currentRoom: {\n    currentNumber: 1,\n    idUser: [],\n    _id: '',\n    maxNumber: 1,\n    address: '',\n    name: '',\n    __v: 1\n  },\n  demo: true,\n  deletemode: false,\n  updatemode: false,\n  historymode: false,\n  showPopup: false,\n  numberPaper: 0,\n  featureType: \"get\",\n  delAll: false,\n  listDell: [],\n  valueInputSearch: '',\n  roomRequest: {\n    updateCurrentNumber: '',\n    insertMaxNumber: '',\n    insertAddress: '',\n    insertName: '',\n    getallpage: '0',\n    getalltypesort: '1',\n    getallsearch: 'A200'\n  }\n};\n\nclass InfoTableRoom extends Component {\n  constructor(...args) {\n    super(...args);\n    this.token = window.sessionStorage.accessToken;\n    this.state = initState;\n    this.chekedRoom = [];\n    this.adminApi = new AdminAPI();\n    this.doctorApi = new DoctorAPI();\n    this.roomApi = new RoomAPI();\n    this.shiftApi = new ShiftAPI();\n    this.userApi = new UserAPI();\n\n    this.InsertCurrent = formData => {\n      if (this.token) {\n        this.roomApi.create(this.token, formData, res => {\n          console.log(res.data);\n        }, err => {\n          console.log(err);\n        });\n      }\n    };\n\n    this.SearchValueInputSearch = () => {\n      this.GetList('?search=' + this.state.valueInputSearch);\n    };\n\n    this.DeleteCurrent = currentId => {\n      if (this.token) {\n        this.roomApi.delete(this.token, currentId, res => {\n          console.log(res.data);\n        }, err => {\n          console.log(err);\n        });\n      }\n    };\n\n    this.UpdateCurrent = (idRoom, formData) => {\n      if (this.token) {\n        this.roomApi.upDate(this.token, idRoom, formData, res => {\n          console.log(res.data);\n        }, err => {\n          console.log(err);\n        });\n      }\n    };\n\n    this.GetUsers = userId => {\n      if (this.token) {\n        this.roomApi.get(this.token, userId, res => {\n          console.log(res.data);\n        }, err => {\n          console.log(err);\n          console.log(err);\n        });\n      }\n    };\n\n    this.GETAll = () => {\n      let formData = new FormData();\n      formData.append('page', this.state.roomRequest.getallpage);\n      formData.append('typesort', this.state.roomRequest.getalltypesort);\n      formData.append('search', this.state.roomRequest.getallsearch);\n\n      if (this.token) {\n        this.roomApi.getAll(this.token, formData, res => {\n          console.log(res.data);\n          this.setState({\n            room: res.data.room,\n            childtable: res.data.room,\n            numberPaper: Math.floor(Number.parseInt(res.data.total) / Number.parseInt(res.data.amount)) + 1,\n            featureType: \"insert\"\n          });\n        }, err => {\n          console.log(err);\n        });\n      }\n    };\n\n    this.GetList = params => {\n      this.roomApi.getList(this.token, params, res => {\n        console.log(\"RESULT\", res);\n        this.setState({\n          room: res.data.room,\n          childtable: res.data.room\n        });\n      }, err => {\n        console.log(err);\n      });\n    };\n\n    this.GetListHistory = params => {\n      this.roomApi.getListHistory(this.token, params, res => {\n        console.log(res.data.diemDanh.idUser);\n        console.log(res.data.diemDanh.listUser);\n        this.setState({\n          patient: res.data.diemDanh.listUser\n        });\n      }, err => {\n        console.log(err);\n      });\n    };\n\n    this.getIdRow = (room, featureType) => {\n      switch (featureType) {\n        case \"update\":\n          this.setState({\n            currentRoom: room,\n            currentId: room._id,\n            showPopup: true,\n            featureType\n          });\n          break;\n\n        case \"history\":\n          this.setState({\n            currentRoom: room,\n            currentId: room._id,\n            showPopup: true,\n            featureType\n          });\n          break;\n      }\n    };\n\n    this.saveInsertPopup = () => {\n      //room\n      let formdata = new FormData();\n      formdata.append('maxNumber', this.state.roomRequest.insertMaxNumber);\n      formdata.append('address', this.state.roomRequest.insertAddress);\n      formdata.append('name', this.state.roomRequest.insertName);\n      this.InsertCurrent(formdata);\n      let obj = this.state.roomRequest;\n      obj.insertMaxNumber = \"\";\n      obj.insertAddress = \"\";\n      obj.insertName = \"\";\n      this.setState({\n        roomRequest: obj\n      });\n      this.cancelPopup();\n      this.GETAll();\n    };\n\n    this.renderInsertForm = () => {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, React.createElement(s__.TextFieldArea, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, React.createElement(s__.TextInput, {\n        variant: \"outlined\",\n        label: \"maxNumber\",\n        id: \"maxNumber\",\n        type: \"text\",\n        value: this.state.roomRequest.insertMaxNumber,\n        placeholder: \"\",\n        onChange: this.onchangMaxNumberRoom,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      })), React.createElement(s__.TextFieldArea, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, React.createElement(s__.TextInput, {\n        variant: \"outlined\",\n        label: \"address\",\n        id: \"address\",\n        type: \"text\",\n        value: this.state.roomRequest.insertAddress,\n        onChange: this.onchangAddressRoom,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      })), React.createElement(s__.TextFieldArea, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }, React.createElement(s__.TextInput, {\n        variant: \"outlined\",\n        label: \"name\",\n        id: \"name\",\n        type: \"text\",\n        value: this.state.roomRequest.insertName,\n        onChange: this.onchangNameRoom,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      })), React.createElement(s__.TextFieldArea, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }, React.createElement(s__.ButtonSubmit, {\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"large\",\n        startIcon: React.createElement(SaveIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 291\n          },\n          __self: this\n        }),\n        onClick: this.saveInsertPopup,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }, \"Save\")), React.createElement(s__.TextFieldArea, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }, React.createElement(s__.ButtonSubmit, {\n        variant: \"contained\",\n        color: \"default\",\n        size: \"large\",\n        startIcon: React.createElement(CloseIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 300\n          },\n          __self: this\n        }),\n        onClick: this.cancelPopup,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }, \"Cancel\")));\n    };\n\n    this.renderGetHistoryForm = () => {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }, React.createElement(s__.TextFieldArea, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      }, React.createElement(s__.TextInput, {\n        variant: \"outlined\" // label=\"history date\"\n        ,\n        id: \"history_date\",\n        type: \"date\",\n        value: this.state.historyDate,\n        onChange: this.onchangHistoryDate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        },\n        __self: this\n      })), React.createElement(s__.TextFieldArea, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320\n        },\n        __self: this\n      }, React.createElement(s__.ButtonSubmit, {\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"large\",\n        startIcon: React.createElement(SaveIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 325\n          },\n          __self: this\n        }),\n        onClick: this.saveHistoryPopup,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321\n        },\n        __self: this\n      }, \"Save\")), React.createElement(s__.TextFieldArea, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        },\n        __self: this\n      }, React.createElement(s__.ButtonSubmit, {\n        variant: \"contained\",\n        color: \"default\",\n        size: \"large\",\n        startIcon: React.createElement(CloseIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 334\n          },\n          __self: this\n        }),\n        onClick: this.cancelPopup,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330\n        },\n        __self: this\n      }, \"Cancel\")));\n    };\n\n    this.saveUpdatePopup = () => {\n      let formdata = new FormData();\n      formdata.append('currentNumber', this.state.roomRequest.updateCurrentNumber.toString());\n      this.UpdateCurrent(this.state.currentId, formdata);\n      let obj = this.state.roomRequest;\n      obj.updateCurrentNumber = \"\";\n      this.setState({\n        roomRequest: obj\n      });\n      this.cancelPopup();\n      this.GETAll();\n    };\n\n    this.saveHistoryPopup = () => {\n      const time = time__.ParseTime(String(this.state.historyDate)); // console.log(\"Time:\",time__.ParseTime(String(this.state.historyDate)));\n\n      this.roomApi.getListHistory(this.token, \"?idRoom=\" + this.state.currentId + \"&date=\" + time, res => {\n        console.log(\"aaaaa:\", res.data.diemDanh);\n        this.setState({\n          patientInRoom: res.data.diemDanh.idRoom.idUser,\n          checkedPatien: res.data.diemDanh.listUser // childtable: \n\n        });\n        this.doctorApi.getListPatient(this.token, ress => {\n          console.log(\"AA\", ress);\n          this.setState({// patient: res.data.\n          });\n        }, err => {\n          console.log(err);\n        });\n      }, err => {\n        console.log(err);\n      });\n    };\n\n    this.renderUpdateForm = () => {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 480\n        },\n        __self: this\n      }, React.createElement(s__.TextFieldArea, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 481\n        },\n        __self: this\n      }, React.createElement(s__.TextInput, {\n        variant: \"outlined\",\n        label: \"currentNumber\",\n        id: \"currentNumber\",\n        type: \"text\",\n        value: this.state.roomRequest.updateCurrentNumber,\n        onChange: this.onchangCurrentNumberRoom,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 482\n        },\n        __self: this\n      })), React.createElement(s__.TextFieldArea, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 491\n        },\n        __self: this\n      }, React.createElement(s__.ButtonSubmit, {\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"large\",\n        startIcon: React.createElement(SaveIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 496\n          },\n          __self: this\n        }),\n        onClick: this.saveUpdatePopup,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 492\n        },\n        __self: this\n      }, \"Save\")), React.createElement(s__.TextFieldArea, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 500\n        },\n        __self: this\n      }, React.createElement(s__.ButtonSubmit, {\n        variant: \"contained\",\n        color: \"default\",\n        size: \"large\",\n        startIcon: React.createElement(CloseIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 505\n          },\n          __self: this\n        }),\n        onClick: this.cancelPopup,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 501\n        },\n        __self: this\n      }, \"Cancel\")));\n    };\n\n    this.renderPopupInput = type => {\n      switch (type) {\n        case \"get\":\n          break;\n\n        case \"update\":\n          return React.createElement(React.Fragment, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 519\n            },\n            __self: this\n          }, this.renderUpdateForm());\n\n        case \"delete\":\n          break;\n\n        case \"insert\":\n          return React.createElement(React.Fragment, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 527\n            },\n            __self: this\n          }, this.renderInsertForm());\n\n        case \"history\":\n          return React.createElement(React.Fragment, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 533\n            },\n            __self: this\n          }, this.renderGetHistoryForm());\n      }\n    };\n\n    this.renderPopupInfo = type => {\n      switch (type) {\n        case \"get\":\n          break;\n\n        case \"update\":\n          return React.createElement(React.Fragment, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 547\n            },\n            __self: this\n          }, React.createElement(\"h1\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 548\n            },\n            __self: this\n          }, \"Update Room \", this.state.currentRoom.name), React.createElement(\"h4\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 549\n            },\n            __self: this\n          }, \"Input and click on submit button to update number person on room, or click cancel to exist\"), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 550\n            },\n            __self: this\n          }, \"Current number is \", this.state.currentRoom.currentNumber), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 551\n            },\n            __self: this\n          }, \"Max number is \", this.state.currentRoom.maxNumber));\n\n        case \"delete\":\n          break;\n\n        case \"insert\":\n          return React.createElement(React.Fragment, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 558\n            },\n            __self: this\n          }, React.createElement(\"h1\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 559\n            },\n            __self: this\n          }, \"Create Room\"), React.createElement(\"h4\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 560\n            },\n            __self: this\n          }, \"Input and click on submit button to create a new one, else click cancel to exist\"));\n\n        case \"history\":\n          return React.createElement(React.Fragment, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 565\n            },\n            __self: this\n          }, React.createElement(\"h1\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 566\n            },\n            __self: this\n          }, \"Get History Room\"), React.createElement(\"h4\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 567\n            },\n            __self: this\n          }, \"Input and click on submit button to get history, else click cancel to exist\"));\n      }\n    };\n\n    this.showPopup = type => {\n      return React.createElement(React.Fragment, null, React.createElement(s__.PopupBackground, {\n        onClick: this.cancelPopup,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 576\n        },\n        __self: this\n      }), React.createElement(s__.PopupContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 578\n        },\n        __self: this\n      }, React.createElement(s__.PopupInfo, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 579\n        },\n        __self: this\n      }, this.renderPopupInfo(type)), React.createElement(s__.PopupInput, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 582\n        },\n        __self: this\n      }, this.renderPopupInput(type))));\n    };\n\n    this.cancelPopup = () => {\n      this.setState({\n        showPopup: false\n      });\n    };\n\n    this.setShowPopupByType = type => {\n      switch (type) {\n        case \"update\":\n          this.setState({\n            updatemode: true,\n            featureType: type\n          });\n          break;\n\n        case \"delete\":\n          break;\n\n        case \"insert\":\n          this.setState({\n            featureType: type,\n            showPopup: true\n          });\n          break;\n\n        case \"history\":\n          this.setState({\n            featureType: type,\n            showPopup: true\n          });\n          break;\n      }\n    };\n\n    this.setDeleteMode = () => {\n      this.setState({\n        deletemode: !this.state.deletemode,\n        updatemode: false\n      });\n    };\n\n    this.setUpdateMode = () => {\n      this.setState({\n        updatemode: !this.state.updatemode,\n        deletemode: false\n      });\n    };\n\n    this.setHistoryMode = () => {\n      this.setState({\n        historymode: !this.state.historymode,\n        deletemode: false\n      });\n    };\n\n    this.setShowPopup = () => {\n      this.setState({\n        showPopup: !this.state.showPopup\n      });\n    };\n\n    this.donotthing = () => {\n      console.log(\"success\");\n    };\n\n    this.setDelAll = () => {\n      this.setState({\n        delAll: !this.state.delAll\n      });\n      console.log(this.state.delAll);\n    };\n\n    this.setInputSearch = event => {\n      this.setState({\n        valueInputSearch: event.target.value\n      });\n    };\n\n    this.onchangCurrentNumberRoom = event => {\n      let obj = this.state.roomRequest;\n      obj.updateCurrentNumber = event.target.value;\n      this.setState({\n        roomRequest: obj\n      });\n    };\n\n    this.onchangHistoryDate = event => {\n      let obj = this.state.historyDate;\n      console.log(\"HIS\", event.target.value);\n      this.setState({\n        historyDate: event.target.value\n      });\n    };\n\n    this.onchangMaxNumberRoom = event => {\n      let obj = this.state.roomRequest;\n      obj.insertMaxNumber = event.target.value;\n      this.setState({\n        roomRequest: obj\n      });\n    };\n\n    this.onchangAddressRoom = event => {\n      let obj = this.state.roomRequest;\n      obj.insertAddress = event.target.value;\n      this.setState({\n        roomRequest: obj\n      });\n    };\n\n    this.onchangNameRoom = event => {\n      let obj = this.state.roomRequest;\n      obj.insertName = event.target.value;\n      this.setState({\n        roomRequest: obj\n      });\n    };\n\n    this.renderButton = () => {\n      return React.createElement(\"div\", {\n        style: {\n          backgroundColor: \"darkblue\",\n          height: \"auto\",\n          borderTopRightRadius: \"5px\",\n          borderTopLeftRadius: \"5px\",\n          padding: \"20px 0px 0px 20px\",\n          color: \"white\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 708\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        style: {\n          marginTop: \"0px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 717\n        },\n        __self: this\n      }, \"Room\"), React.createElement(s__.FeatureArea, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 718\n        },\n        __self: this\n      }, React.createElement(s__.FeatureButton, {\n        onClick: this.GETAll,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 719\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 719\n        },\n        __self: this\n      }, \"Refresh\")), React.createElement(s__.FeatureButton, {\n        style: {\n          backgroundColor: this.state.historymode ? \"tomato\" : \"\"\n        },\n        onClick: this.setHistoryMode,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 720\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 720\n        },\n        __self: this\n      }, this.state.historymode ? \"Cancel\" : \"History\")), this.state.role === \"SUPER_ADMIN\" ? React.createElement(s__.FeatureButton, {\n        onClick: () => this.setShowPopupByType(\"insert\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 721\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 721\n        },\n        __self: this\n      }, \"Insert\")) : React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 721\n        },\n        __self: this\n      }), this.state.role === \"SUPER_ADMIN\" ? React.createElement(s__.FeatureButton, {\n        style: {\n          backgroundColor: this.state.updatemode ? \"tomato\" : \"\"\n        },\n        onClick: this.setUpdateMode,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 722\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 722\n        },\n        __self: this\n      }, this.state.updatemode ? \"Cancel\" : \"Update\")) : React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 722\n        },\n        __self: this\n      }), React.createElement(s__.SearchInput, {\n        id: \"maxNumber\",\n        type: \"text\",\n        value: this.state.valueInputSearch,\n        placeholder: \"Search Room By Name\",\n        onChange: this.setInputSearch,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 723\n        },\n        __self: this\n      }), React.createElement(s__.FeatureButton, {\n        onClick: this.SearchValueInputSearch,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 730\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 730\n        },\n        __self: this\n      }, \"Search\")), React.createElement(s__.FeatureButton, {\n        style: {\n          backgroundColor: this.state.deletemode ? \"mediumspringgreen\" : \"\",\n          display: this.state.deletemode ? \"\" : \"none\"\n        },\n        onClick: this.deleteAllCheckd,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 731\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 731\n        },\n        __self: this\n      }, \"Save\")), this.state.role === \"SUPER_ADMIN\" ? React.createElement(s__.FeatureButton, {\n        style: {\n          backgroundColor: this.state.deletemode ? \"tomato\" : \"\"\n        },\n        onClick: this.setDeleteMode,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 732\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 732\n        },\n        __self: this\n      }, this.state.deletemode ? \"Cancel\" : \"Delete\")) : React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 732\n        },\n        __self: this\n      })));\n    };\n\n    this.deleteAllCheckd = () => {\n      console.log('deleteAllCheckd');\n      this.state.listDell.map(value => {\n        this.DeleteCurrent(value);\n      });\n      this.setState({\n        listDell: [],\n        deletemode: false\n      });\n      this.GETAll();\n    };\n\n    this.setIdCurrent = currentId => {\n      this.setState({\n        currentId\n      });\n    };\n\n    this.setListDel = () => {\n      let arr = this.state.listDell;\n\n      if (arr.indexOf(this.state.currentId) === -1) {\n        arr.push(this.state.currentId);\n        this.setState({\n          listDell: arr\n        });\n      } else {\n        arr.splice(arr.indexOf(this.state.currentId), 1);\n        this.setState({\n          listDell: arr\n        });\n      }\n    };\n\n    this.renderChildTableRoom = () => {\n      switch (this.state.featureType) {\n        case \"history\":\n          return this.state.patient.map(row => React.createElement(s__.TableRowInfo, {\n            key: row._id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 776\n            },\n            __self: this\n          }, React.createElement(TableCell, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 777\n            },\n            __self: this\n          }, row.fullName), React.createElement(TableCell, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 778\n            },\n            __self: this\n          }, row.gender), React.createElement(TableCell, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 779\n            },\n            __self: this\n          }, row.identityCard), React.createElement(TableCell, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 780\n            },\n            __self: this\n          }, row.phoneNumber), React.createElement(TableCell, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 781\n            },\n            __self: this\n          }, row.dateOfBirth), React.createElement(TableCell, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 782\n            },\n            __self: this\n          }, row.address)));\n\n        default:\n          return this.state.childtable.map(row => React.createElement(s__.TableRowInfo, {\n            key: row._id,\n            onClick: this.state.updatemode || this.state.historymode ? this.state.historymode ? () => this.getIdRow(row, \"history\") : () => this.getIdRow(row, \"update\") : () => this.setIdCurrent(row._id),\n            onFocus: () => this.setIdCurrent(row._id),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 787\n            },\n            __self: this\n          }, React.createElement(TableCell, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 789\n            },\n            __self: this\n          }, row.name), React.createElement(TableCell, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 790\n            },\n            __self: this\n          }, row.currentNumber), React.createElement(TableCell, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 791\n            },\n            __self: this\n          }, row.maxNumber), React.createElement(TableCell, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 792\n            },\n            __self: this\n          }, row.address), React.createElement(TableCell, {\n            align: \"right\",\n            style: {\n              display: this.state.deletemode ? \"\" : \"none\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 793\n            },\n            __self: this\n          }, React.createElement(Checkbox, {\n            size: \"small\",\n            onChange: this.setListDel,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 794\n            },\n            __self: this\n          }))));\n      }\n    };\n\n    this.renderGrid = () => {\n      switch (this.state.featureType) {\n        case \"history\":\n          return React.createElement(\"div\", {\n            style: {\n              backgroundColor: \"lightcyan\",\n              overflow: \"auto\",\n              height: \"400px\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 808\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 809\n            },\n            __self: this\n          }, React.createElement(Table, {\n            size: \"small\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 810\n            },\n            __self: this\n          }, React.createElement(TableHead, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 811\n            },\n            __self: this\n          }, React.createElement(s__.TableRowHead, {\n            style: {\n              height: \"50px\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 812\n            },\n            __self: this\n          }, React.createElement(TableCell, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 813\n            },\n            __self: this\n          }, \"FullName\"), React.createElement(TableCell, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 814\n            },\n            __self: this\n          }, \"Gender\"), React.createElement(TableCell, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 815\n            },\n            __self: this\n          }, \"IdentityCard\"), React.createElement(TableCell, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 816\n            },\n            __self: this\n          }, \"PhoneNumber\"), React.createElement(TableCell, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 817\n            },\n            __self: this\n          }, \"DateOfBirth\"), React.createElement(TableCell, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 818\n            },\n            __self: this\n          }, \"Address\"))), React.createElement(TableBody, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 821\n            },\n            __self: this\n          }, this.renderChildTableRoom()))));\n\n        default:\n          return React.createElement(\"div\", {\n            style: {\n              backgroundColor: \"lightcyan\",\n              overflow: \"auto\",\n              height: \"400px\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 830\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 831\n            },\n            __self: this\n          }, React.createElement(Table, {\n            size: \"small\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 832\n            },\n            __self: this\n          }, React.createElement(TableHead, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 833\n            },\n            __self: this\n          }, React.createElement(s__.TableRowHead, {\n            style: {\n              height: \"50px\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 834\n            },\n            __self: this\n          }, React.createElement(TableCell, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 835\n            },\n            __self: this\n          }, \"Name\"), React.createElement(TableCell, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 836\n            },\n            __self: this\n          }, \"Ship To\"), React.createElement(TableCell, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 837\n            },\n            __self: this\n          }, \"Payment Method\"), React.createElement(TableCell, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 838\n            },\n            __self: this\n          }, \"Address\"), React.createElement(TableCell, {\n            align: \"right\",\n            style: {\n              display: this.state.deletemode ? \"\" : \"none\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 839\n            },\n            __self: this\n          }, React.createElement(Checkbox, {\n            size: \"small\",\n            onChange: this.setDelAll,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 840\n            },\n            __self: this\n          })))), React.createElement(TableBody, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 846\n            },\n            __self: this\n          }, this.renderChildTableRoom()))));\n      }\n    };\n\n    this.renderPaper = () => {\n      let arr = new Array(this.state.numberPaper);\n      return React.createElement(s__.PaperDiv, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 860\n        },\n        __self: this\n      }, [...Array(this.state.numberPaper).keys()].map((value, index) => {\n        return React.createElement(s__.PaperDivNumber, {\n          onClick: () => {\n            this.GetList('?page=' + value);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 863\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 863\n          },\n          __self: this\n        }, value + 1));\n      }));\n    };\n  }\n\n  //circle\n  componentDidMount() {\n    this.GETAll();\n    this.setState({\n      role: JWT.read(window.sessionStorage.accessToken).claim.roleName\n    });\n    console.log(\"TOKEN:\", JWT.read(window.sessionStorage.accessToken).claim);\n    this.userApi.getProfile(this.token, res => {\n      this.setState({});\n    }, err => {});\n  } //API\n\n\n  //Main render\n  render() {\n    return React.createElement(s__.Container, {\n      style: {\n        paddingBottom: \"0px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 874\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 875\n      },\n      __self: this\n    }, this.state.showPopup ? this.showPopup(this.state.featureType) : React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 876\n      },\n      __self: this\n    }), this.renderButton(), this.renderGrid(), this.renderPaper()));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  UserssignedState: state.UserssignedState,\n  UsersState: state.UsersState\n});\n\nexport default connect(mapStateToProps, {})(InfoTableRoom); // demoClickRedirect = () => {\n//   this.setState({\n//     demo:false\n//   })\n// }\n// demoRedirect = ()=>{\n//   if(this.state.demo){\n//     return <React.Fragment/>\n//   }else{\n//     return <Redirect to=\"/about-us\"/>\n//   }\n// }","map":{"version":3,"sources":["C:/Users/HSONNL/Desktop/myProject/NCOV-19/Repo/NCOV-19Manager/client/src/component/InfoTableRoom/index.tsx"],"names":["React","Component","s__","SaveIcon","CloseIcon","Table","TableBody","TableCell","TableHead","Checkbox","JWT","AdminAPI","DoctorAPI","RoomAPI","ShiftAPI","UserAPI","time__","connect","initState","childtable","checkedPatien","patientInRoom","room","patient","shift","role","currentId","historyDate","currentRoom","currentNumber","idUser","_id","maxNumber","address","name","__v","demo","deletemode","updatemode","historymode","showPopup","numberPaper","featureType","delAll","listDell","valueInputSearch","roomRequest","updateCurrentNumber","insertMaxNumber","insertAddress","insertName","getallpage","getalltypesort","getallsearch","InfoTableRoom","token","window","sessionStorage","accessToken","state","chekedRoom","adminApi","doctorApi","roomApi","shiftApi","userApi","InsertCurrent","formData","create","res","console","log","data","err","SearchValueInputSearch","GetList","DeleteCurrent","delete","UpdateCurrent","idRoom","upDate","GetUsers","userId","get","GETAll","FormData","append","getAll","setState","Math","floor","Number","parseInt","total","amount","params","getList","GetListHistory","getListHistory","diemDanh","listUser","getIdRow","saveInsertPopup","formdata","obj","cancelPopup","renderInsertForm","onchangMaxNumberRoom","onchangAddressRoom","onchangNameRoom","renderGetHistoryForm","onchangHistoryDate","saveHistoryPopup","saveUpdatePopup","toString","time","ParseTime","String","getListPatient","ress","renderUpdateForm","onchangCurrentNumberRoom","renderPopupInput","type","renderPopupInfo","setShowPopupByType","setDeleteMode","setUpdateMode","setHistoryMode","setShowPopup","donotthing","setDelAll","setInputSearch","event","target","value","renderButton","backgroundColor","height","borderTopRightRadius","borderTopLeftRadius","padding","color","marginTop","display","deleteAllCheckd","map","setIdCurrent","setListDel","arr","indexOf","push","splice","renderChildTableRoom","row","fullName","gender","identityCard","phoneNumber","dateOfBirth","renderGrid","overflow","renderPaper","Array","keys","index","componentDidMount","read","claim","roleName","getProfile","render","paddingBottom","mapStateToProps","UserssignedState","UsersState"],"mappings":"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","sourcesContent":["import React, { Component, ChangeEvent } from \"react\";\r\n//style importer\r\nimport * as s__ from \"./style\";\r\nimport {Redirect} from 'react-router-dom'\r\n// import Link from '@material-ui/core/Link';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n// import Button from '@material-ui/core/Button';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport ClearAllIcon from '@material-ui/icons/ClearAll';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport JWT from 'jwt-client';\r\n//component importer\r\n// import MainMenu from \"../MainMenu/index\";\r\n//utils importer\r\nimport AdminAPI from \"../../modules/api/admin\";\r\nimport DoctorAPI from \"../../modules/api/doctor\";\r\nimport RoomAPI from \"../../modules/api/room\";\r\nimport ShiftAPI from \"../../modules/api/shift\";\r\nimport UserAPI from \"../../modules/api/user\";\r\nimport * as time__ from \"./../../modules/time\";\r\n//config importer\r\nimport {AdminRequest,DoctorRequest,RoomRequest,ShiftRequest,UserRequest} from \"../../config/requesttype\";\r\nimport * as api__ from \"../../config/apireturntype\";\r\nimport { Button } from \"@material-ui/core\";\r\n//global store\r\nimport { connect } from 'react-redux';\r\nimport {MainState} from '../../store/index';\r\n//type\r\nimport {UsersState} from '../../store/User/type';\r\nimport {UserssignedState} from '../../store/UsersSigned/type';\r\n//typeInput\r\n\r\ninterface Props {\r\n  UsersState: UsersState,\r\n  UserssignedState: UserssignedState\r\n}\r\n\r\ntype State =  typeof initState;\r\n\r\nconst initState = {\r\n  childtable: [] as any[],\r\n  checkedPatien: [] as any[],\r\n  patientInRoom:[] as string[],\r\n  room: [] as api__.Room[],\r\n  patient: [] as api__.Patient[],\r\n  shift:[] as any[],\r\n  role:'',\r\n  currentId: '',\r\n  historyDate: '',\r\n  currentRoom: {\r\n    currentNumber: 1,\r\n    idUser: [],\r\n    _id:'',\r\n    maxNumber: 1,\r\n    address: '',\r\n    name: '',\r\n    __v: 1\r\n  } as api__.Room,\r\n  demo:true,\r\n  deletemode:false,\r\n  updatemode:false,\r\n  historymode:false,\r\n  showPopup:false,\r\n  numberPaper:0,\r\n  featureType:\"get\" as \"update\" | \"delete\" | \"insert\" | \"history\",\r\n  delAll: false,\r\n  listDell:[] as string[],\r\n  valueInputSearch: '' as string,\r\n  roomRequest:{\r\n    updateCurrentNumber:'',\r\n    insertMaxNumber:'',\r\n    insertAddress:'',\r\n    insertName:'',\r\n    getallpage:'0',\r\n    getalltypesort:'1',\r\n    getallsearch:'A200'\r\n  } as RoomRequest\r\n}\r\n\r\nclass InfoTableRoom extends Component<Props, State> {\r\n  token = window.sessionStorage.accessToken;\r\n  state = initState;\r\n  chekedRoom = [] as api__.Room[] ;\r\n  adminApi = new AdminAPI();\r\n  doctorApi = new DoctorAPI();\r\n  roomApi = new RoomAPI();\r\n  shiftApi = new ShiftAPI();\r\n  userApi = new UserAPI();\r\n\r\n  //circle\r\n  componentDidMount(){\r\n    this.GETAll();\r\n    this.setState({\r\n      role:JWT.read(window.sessionStorage.accessToken).claim.roleName\r\n    })\r\n    console.log(\"TOKEN:\",JWT.read(window.sessionStorage.accessToken).claim);\r\n    this.userApi.getProfile(this.token,(res:any) => {\r\n      this.setState({\r\n\r\n      })\r\n    },(err:any)=>{\r\n    })\r\n  }\r\n\r\n  //API\r\n  InsertCurrent = (formData:FormData) => {\r\n    if(this.token){\r\n      this.roomApi.create(this.token,formData,(res:any)=>{\r\n        console.log(res.data);\r\n      }, \r\n      (err:string)=>{\r\n        console.log(err);\r\n      })\r\n    }\r\n  }\r\n\r\n  SearchValueInputSearch = () => {\r\n    this.GetList('?search='+this.state.valueInputSearch);\r\n  }\r\n\r\n  DeleteCurrent = (currentId:string) => {\r\n    if(this.token){\r\n      this.roomApi.delete(this.token,currentId,(res:any)=>{\r\n        console.log(res.data);\r\n      }, \r\n      (err:string)=>{\r\n        console.log(err);\r\n      })\r\n    }\r\n  }\r\n\r\n  UpdateCurrent = (idRoom:string,formData:FormData) => {\r\n    if(this.token){\r\n      this.roomApi.upDate(this.token,idRoom,formData,(res:any)=>{\r\n        console.log(res.data);\r\n      },\r\n      (err:string)=>{\r\n        console.log(err);\r\n      })\r\n    }\r\n  }\r\n\r\n  GetUsers = (userId:string) => {\r\n    if(this.token){\r\n      this.roomApi.get(this.token,userId,(res:any)=>{\r\n        console.log(res.data);\r\n      },\r\n      (err:string)=>{\r\n        console.log(err);\r\n        console.log(err);\r\n      })\r\n    }\r\n  }\r\n\r\n  GETAll = () =>{\r\n    let formData = new FormData();\r\n    formData.append('page',this.state.roomRequest.getallpage);\r\n    formData.append('typesort',this.state.roomRequest.getalltypesort);\r\n    formData.append('search',this.state.roomRequest.getallsearch);\r\n    if(this.token){\r\n      this.roomApi.getAll(this.token,formData,(res:any)=>{\r\n        console.log(res.data);\r\n        this.setState({\r\n          room:res.data.room,\r\n          childtable: res.data.room,\r\n          numberPaper: (Math.floor(Number.parseInt(res.data.total)/Number.parseInt(res.data.amount))) +1,\r\n          featureType: \"insert\"\r\n        })\r\n      }, \r\n      (err:string)=>{\r\n        console.log(err);\r\n      })\r\n    }\r\n  }\r\n\r\n  GetList = (params:string) => {\r\n    this.roomApi.getList(this.token,params,\r\n      (res:any)=>{\r\n        console.log(\"RESULT\",res);\r\n        this.setState({\r\n          room:res.data.room,\r\n\r\n          childtable:res.data.room\r\n        })\r\n      },(err:any)=>{\r\n        console.log(err)\r\n      }\r\n    )\r\n  }\r\n\r\n  GetListHistory = (params:string) => {\r\n    this.roomApi.getListHistory(this.token,params,\r\n      (res:any)=>{\r\n        console.log(res.data.diemDanh.idUser);\r\n        console.log(res.data.diemDanh.listUser);\r\n        this.setState({\r\n          patient:res.data.diemDanh.listUser\r\n        })\r\n      },(err:any)=>{\r\n        console.log(err)\r\n      }\r\n    )\r\n  }\r\n\r\n  ////\r\n  getIdRow=(room:api__.Room,featureType: \"update\" | \"delete\" | \"insert\" | \"history\")=>{\r\n    switch(featureType){\r\n      case \"update\":\r\n        this.setState({\r\n          currentRoom:room,\r\n          currentId:room._id,\r\n          showPopup:true,\r\n          featureType\r\n        })\r\n        break;\r\n      case \"history\":\r\n        this.setState({\r\n          currentRoom:room,\r\n          currentId:room._id,\r\n          showPopup:true,\r\n          featureType\r\n        })\r\n        break;\r\n    }\r\n  }\r\n\r\n  saveInsertPopup = () => {\r\n    //room\r\n    let formdata = new FormData();\r\n    formdata.append('maxNumber',this.state.roomRequest.insertMaxNumber);\r\n    formdata.append('address',this.state.roomRequest.insertAddress);\r\n    formdata.append('name',this.state.roomRequest.insertName);\r\n    this.InsertCurrent(formdata);\r\n    let obj = this.state.roomRequest;\r\n    obj.insertMaxNumber = \"\";\r\n    obj.insertAddress = \"\";\r\n    obj.insertName = \"\";\r\n    this.setState({\r\n      roomRequest:obj\r\n    })\r\n    this.cancelPopup();\r\n    this.GETAll();\r\n  }\r\n\r\n  renderInsertForm = () => {\r\n    return (\r\n      <React.Fragment>\r\n        <s__.TextFieldArea>\r\n            <s__.TextInput\r\n              variant=\"outlined\"\r\n              label=\"maxNumber\"\r\n              id=\"maxNumber\"\r\n              type=\"text\"\r\n              value={this.state.roomRequest.insertMaxNumber}\r\n              placeholder=\"\"\r\n              onChange={this.onchangMaxNumberRoom}\r\n            />\r\n          </s__.TextFieldArea>\r\n          <s__.TextFieldArea>\r\n            <s__.TextInput\r\n              variant=\"outlined\"\r\n              label=\"address\"\r\n              id=\"address\"\r\n              type=\"text\"\r\n              value={this.state.roomRequest.insertAddress}\r\n              onChange={this.onchangAddressRoom}\r\n            />\r\n          </s__.TextFieldArea>\r\n          <s__.TextFieldArea>\r\n            <s__.TextInput\r\n              variant=\"outlined\"\r\n              label=\"name\"\r\n              id=\"name\"\r\n              type=\"text\"\r\n              value={this.state.roomRequest.insertName}\r\n              onChange={this.onchangNameRoom}\r\n            />\r\n          </s__.TextFieldArea>\r\n          <s__.TextFieldArea>\r\n            <s__.ButtonSubmit\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              size=\"large\"\r\n              startIcon={<SaveIcon />}\r\n              onClick={this.saveInsertPopup}\r\n            >Save</s__.ButtonSubmit>\r\n          </s__.TextFieldArea>\r\n          <s__.TextFieldArea>\r\n            <s__.ButtonSubmit\r\n              variant=\"contained\"\r\n              color=\"default\"\r\n              size=\"large\"\r\n              startIcon={<CloseIcon />}\r\n              onClick={this.cancelPopup}\r\n            >Cancel</s__.ButtonSubmit>\r\n          </s__.TextFieldArea>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n  renderGetHistoryForm = () => {\r\n    return(\r\n      <React.Fragment>\r\n          <s__.TextFieldArea>\r\n            <s__.TextInput\r\n              variant=\"outlined\"\r\n              // label=\"history date\"\r\n              id=\"history_date\"\r\n              type=\"date\"\r\n              value={(this.state.historyDate)}\r\n              onChange={this.onchangHistoryDate}\r\n            />\r\n          </s__.TextFieldArea>\r\n          <s__.TextFieldArea>\r\n            <s__.ButtonSubmit\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              size=\"large\"\r\n              startIcon={<SaveIcon />}\r\n              onClick={this.saveHistoryPopup}\r\n            >Save</s__.ButtonSubmit>\r\n          </s__.TextFieldArea>\r\n          <s__.TextFieldArea>\r\n            <s__.ButtonSubmit\r\n              variant=\"contained\"\r\n              color=\"default\"\r\n              size=\"large\"\r\n              startIcon={<CloseIcon />}\r\n              onClick={this.cancelPopup}\r\n            >Cancel</s__.ButtonSubmit>\r\n          </s__.TextFieldArea>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n\r\n  saveUpdatePopup = () => {\r\n    let formdata = new FormData();\r\n    formdata.append('currentNumber',this.state.roomRequest.updateCurrentNumber.toString());\r\n    this.UpdateCurrent(this.state.currentId,formdata);\r\n    let obj = this.state.roomRequest;\r\n    obj.updateCurrentNumber = \"\";\r\n    this.setState({\r\n      roomRequest:obj\r\n    })\r\n    this.cancelPopup();\r\n    this.GETAll();\r\n  }\r\n\r\n  saveHistoryPopup = () => {\r\n\r\n    const time = time__.ParseTime(String(this.state.historyDate));\r\n    // console.log(\"Time:\",time__.ParseTime(String(this.state.historyDate)));\r\n    this.roomApi.getListHistory(this.token,\"?idRoom=\"+this.state.currentId+\"&date=\"+time,\r\n    (res:any) => {\r\n      console.log(\"aaaaa:\",res.data.diemDanh);\r\n      this.setState({\r\n        patientInRoom: res.data.diemDanh.idRoom.idUser,\r\n        checkedPatien: res.data.diemDanh.listUser,\r\n        // childtable: \r\n      })\r\n      this.doctorApi.getListPatient(this.token,(ress:any)=>{\r\n        console.log(\"AA\",ress)\r\n        this.setState({\r\n          // patient: res.data.\r\n        })\r\n      },(err:any)=>{\r\n        console.log(err);\r\n      })\r\n    },\r\n    (err:any) => {\r\n      console.log(err);\r\n    })\r\n  }\r\n//   {\r\n//     \"diemDanh\": {\r\n//         \"listUser\": [\r\n//             {\r\n//                 \"avatars\": [\r\n//                     \"public/img/5ec0f66979444907d0b2704c_img0.jpg\",\r\n//                     \"public/img/5ec0f66979444907d0b2704c_img1.jpg\",\r\n//                     \"public/img/5ec0f66979444907d0b2704c_img2.jpg\",\r\n//                     \"public/img/5ec0f66979444907d0b2704c_img3.jpg\",\r\n//                     \"public/img/5ec0f66979444907d0b2704c_img4.jpg\",\r\n//                     \"public/img/5ec0f66979444907d0b2704c_img5.jpg\"\r\n//                 ],\r\n//                 \"gender\": 1,\r\n//                 \"isActive\": false,\r\n//                 \"gps\": [\r\n//                     {\r\n//                         \"x\": \"10.849069666964017\",\r\n//                         \"y\": \"106.79749281687133\"\r\n//                     }\r\n//                 ],\r\n//                 \"code\": null,\r\n//                 \"_id\": \"5ec0f66979444907d0b2704c\",\r\n//                 \"address\": \"TP Hồ Chí Minh\",\r\n//                 \"dateOfBirth\": \"01/01/1990\",\r\n//                 \"email\": \"BenhNhan00000003@gmail.com\",\r\n//                 \"fullName\": \"ha huu nhut\",\r\n//                 \"identityCard\": \"000000003\",\r\n//                 \"password\": \"$2b$10$I89p0AbmYHbpQxqoV504X.N4bg0cUYo.JXnLnvXbUpYiuZbLEryIm\",\r\n//                 \"phoneNumber\": \"09800000003\",\r\n//                 \"idRole\": \"5ea2cb1078e7c42110789d4d\",\r\n//                 \"__v\": 0\r\n//             }\r\n//         ],\r\n//         \"_id\": \"5ecb9e2fc3539629eca4f651\",\r\n//         \"idUser\": {\r\n//             \"avatars\": [],\r\n//             \"gender\": 3,\r\n//             \"isActive\": false,\r\n//             \"gps\": [],\r\n//             \"code\": null,\r\n//             \"_id\": \"5ec0f47879444907d0b2703a\",\r\n//             \"address\": \"Ha Tinh\",\r\n//             \"dateOfBirth\": \"20/04/1998\",\r\n//             \"email\": \"truongquoctai0498@gmail.com\",\r\n//             \"fullName\": \"Truong Quoc Tai\",\r\n//             \"identityCard\": \"184261922\",\r\n//             \"password\": \"$2b$10$UM2QhGkFsGdmj4c1EYZMyeSpUZ1ttJraI6HbSl/sDEmYIQLatwU.2\",\r\n//             \"phoneNumber\": \"0364124747\",\r\n//             \"idRole\": {\r\n//                 \"_id\": \"5ea2cb1078e7c42110789d4c\",\r\n//                 \"name\": \"BAC_SI\",\r\n//                 \"__v\": 0\r\n//             },\r\n//             \"__v\": 0\r\n//         },\r\n//         \"idRoom\": {\r\n//             \"currentNumber\": 1,\r\n//             \"idUser\": [\r\n//                 {\r\n//                     \"avatars\": [\r\n//                         \"public/img/5ec0f66979444907d0b2704c_img0.jpg\",\r\n//                         \"public/img/5ec0f66979444907d0b2704c_img1.jpg\",\r\n//                         \"public/img/5ec0f66979444907d0b2704c_img2.jpg\",\r\n//                         \"public/img/5ec0f66979444907d0b2704c_img3.jpg\",\r\n//                         \"public/img/5ec0f66979444907d0b2704c_img4.jpg\",\r\n//                         \"public/img/5ec0f66979444907d0b2704c_img5.jpg\"\r\n//                     ],\r\n//                     \"gender\": 1,\r\n//                     \"isActive\": false,\r\n//                     \"gps\": [\r\n//                         {\r\n//                             \"x\": \"10.849069666964017\",\r\n//                             \"y\": \"106.79749281687133\"\r\n//                         }\r\n//                     ],\r\n//                     \"code\": null,\r\n//                     \"_id\": \"5ec0f66979444907d0b2704c\",\r\n//                     \"address\": \"TP Hồ Chí Minh\",\r\n//                     \"dateOfBirth\": \"01/01/1990\",\r\n//                     \"email\": \"BenhNhan00000003@gmail.com\",\r\n//                     \"fullName\": \"ha huu nhut\",\r\n//                     \"identityCard\": \"000000003\",\r\n//                     \"password\": \"$2b$10$I89p0AbmYHbpQxqoV504X.N4bg0cUYo.JXnLnvXbUpYiuZbLEryIm\",\r\n//                     \"phoneNumber\": \"09800000003\",\r\n//                     \"idRole\": \"5ea2cb1078e7c42110789d4d\",\r\n//                     \"__v\": 0\r\n//                 }\r\n//             ],\r\n//             \"_id\": \"5ec0f5bd79444907d0b2703e\",\r\n//             \"maxNumber\": 10,\r\n//             \"address\": \"TP Hồ Chí Minh\",\r\n//             \"name\": \"A101\",\r\n//             \"__v\": 0\r\n//         },\r\n//         \"startTime\": 1590402607000,\r\n//         \"__v\": 0\r\n//     }\r\n// }\r\n  renderUpdateForm = () => {\r\n    return (\r\n      <React.Fragment>\r\n          <s__.TextFieldArea>\r\n            <s__.TextInput\r\n              variant=\"outlined\"\r\n              label=\"currentNumber\"\r\n              id=\"currentNumber\"\r\n              type=\"text\"\r\n              value={this.state.roomRequest.updateCurrentNumber}\r\n              onChange={this.onchangCurrentNumberRoom}\r\n            />\r\n          </s__.TextFieldArea>\r\n          <s__.TextFieldArea>\r\n            <s__.ButtonSubmit\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              size=\"large\"\r\n              startIcon={<SaveIcon />}\r\n              onClick={this.saveUpdatePopup}\r\n            >Save</s__.ButtonSubmit>\r\n          </s__.TextFieldArea>\r\n          <s__.TextFieldArea>\r\n            <s__.ButtonSubmit\r\n              variant=\"contained\"\r\n              color=\"default\"\r\n              size=\"large\"\r\n              startIcon={<CloseIcon />}\r\n              onClick={this.cancelPopup}\r\n            >Cancel</s__.ButtonSubmit>\r\n          </s__.TextFieldArea>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n\r\n  renderPopupInput = (type:string) => {\r\n    switch(type){\r\n      case \"get\":\r\n        break;\r\n      case \"update\":\r\n        return (\r\n          <React.Fragment>\r\n            {this.renderUpdateForm()}\r\n          </React.Fragment>\r\n        )\r\n      case \"delete\":\r\n        break;\r\n      case \"insert\":\r\n        return (\r\n          <React.Fragment>\r\n            {this.renderInsertForm()}\r\n          </React.Fragment>\r\n        )\r\n      case \"history\":\r\n        return (\r\n          <React.Fragment>\r\n            {this.renderGetHistoryForm()}\r\n          </React.Fragment>\r\n        )\r\n    }\r\n    \r\n  }\r\n\r\n  renderPopupInfo = (type:string) => {\r\n    switch(type){\r\n      case \"get\":\r\n        break;\r\n      case \"update\":\r\n        return (\r\n          <React.Fragment>\r\n            <h1>Update Room {this.state.currentRoom.name}</h1>\r\n            <h4>Input and click on submit button to update number person on room, or click cancel to exist</h4>\r\n            <p>Current number is {this.state.currentRoom.currentNumber}</p>\r\n            <p>Max number is {this.state.currentRoom.maxNumber}</p>\r\n          </React.Fragment>\r\n        )\r\n      case \"delete\":\r\n        break;\r\n      case \"insert\":\r\n        return (\r\n          <React.Fragment>\r\n            <h1>Create Room</h1>\r\n            <h4>Input and click on submit button to create a new one, else click cancel to exist</h4>\r\n          </React.Fragment>\r\n        )\r\n      case \"history\":\r\n        return(\r\n          <React.Fragment>\r\n            <h1>Get History Room</h1>\r\n            <h4>Input and click on submit button to get history, else click cancel to exist</h4>\r\n          </React.Fragment>\r\n        )\r\n    }\r\n  }\r\n\r\n  showPopup = (type:string) => {\r\n    return (\r\n      <>\r\n        <s__.PopupBackground onClick={this.cancelPopup}>\r\n        </s__.PopupBackground>\r\n        <s__.PopupContainer>\r\n          <s__.PopupInfo>\r\n            {this.renderPopupInfo(type)}\r\n          </s__.PopupInfo>\r\n          <s__.PopupInput>\r\n            {this.renderPopupInput(type)}\r\n          </s__.PopupInput>\r\n        </s__.PopupContainer>\r\n      </>\r\n    )\r\n  }\r\n\r\n  cancelPopup=()=>{\r\n    this.setState({\r\n      showPopup:false\r\n    })\r\n  }\r\n\r\n  setShowPopupByType = (type:\"update\" | \"delete\" | \"insert\" | \"history\") => {\r\n    switch(type){\r\n      case \"update\":\r\n        this.setState({\r\n          updatemode:true,\r\n          featureType:type\r\n        })\r\n        break;\r\n      case \"delete\":\r\n        break;\r\n      case \"insert\":\r\n        this.setState({\r\n          featureType:type,\r\n          showPopup: true\r\n        })\r\n        break;\r\n      case \"history\":\r\n        this.setState({\r\n          featureType:type,\r\n          showPopup: true\r\n        })\r\n        break;\r\n    }\r\n    \r\n  }\r\n\r\n  setDeleteMode = () => {\r\n    this.setState({\r\n      deletemode:!this.state.deletemode,\r\n      updatemode:false\r\n    })\r\n  }\r\n\r\n  setUpdateMode = () => {\r\n    this.setState({\r\n      updatemode:!this.state.updatemode,\r\n      deletemode:false\r\n    })\r\n  }\r\n\r\n  setHistoryMode = () => {\r\n    this.setState({\r\n      historymode:!this.state.historymode,\r\n      deletemode:false\r\n    })\r\n  }\r\n\r\n  setShowPopup = () => {\r\n    this.setState({\r\n      showPopup:!this.state.showPopup\r\n    })\r\n  }\r\n\r\n  donotthing = () => {\r\n    console.log(\"success\");\r\n  }\r\n\r\n  setDelAll = () => {\r\n    this.setState({\r\n      delAll:!this.state.delAll,\r\n    })\r\n    console.log(this.state.delAll);\r\n  }\r\n\r\n  setInputSearch = (event: ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({\r\n      valueInputSearch: event.target.value\r\n    })\r\n  }\r\n\r\n  onchangCurrentNumberRoom = (event: ChangeEvent<HTMLInputElement>) => {\r\n    let obj = this.state.roomRequest;\r\n    obj.updateCurrentNumber = event.target.value;\r\n    this.setState({\r\n      roomRequest:obj\r\n    })\r\n  }\r\n\r\n  onchangHistoryDate = (event: ChangeEvent<HTMLInputElement>) => {\r\n    let obj = this.state.historyDate;\r\n    console.log(\"HIS\",event.target.value);\r\n    this.setState({\r\n      historyDate:event.target.value\r\n    })\r\n  }\r\n  onchangMaxNumberRoom = (event: ChangeEvent<HTMLInputElement>) => {\r\n    let obj = this.state.roomRequest;\r\n    obj.insertMaxNumber = event.target.value;\r\n    this.setState({\r\n      roomRequest:obj\r\n    })\r\n  }\r\n\r\n  onchangAddressRoom = (event: ChangeEvent<HTMLInputElement>) => {\r\n    let obj = this.state.roomRequest;\r\n    obj.insertAddress = event.target.value;\r\n    this.setState({\r\n      roomRequest:obj\r\n    })\r\n  }\r\n\r\n  onchangNameRoom = (event: ChangeEvent<HTMLInputElement>) => {\r\n    let obj = this.state.roomRequest;\r\n    obj.insertName = event.target.value;\r\n    this.setState({\r\n      roomRequest:obj\r\n    })\r\n  }\r\n\r\n  //Render\r\n  renderButton= () =>{\r\n    return (\r\n      <div style={{\r\n        backgroundColor:\"darkblue\",\r\n        height:\"auto\",\r\n        borderTopRightRadius:\"5px\", \r\n        borderTopLeftRadius:\"5px\",\r\n        padding:\"20px 0px 0px 20px\",\r\n        color:\"white\"\r\n        }}\r\n      >\r\n        <h1 style={{marginTop:\"0px\"}}>Room</h1>\r\n        <s__.FeatureArea>\r\n          <s__.FeatureButton onClick={this.GETAll}><p>Refresh</p></s__.FeatureButton>\r\n          {<s__.FeatureButton style={{backgroundColor:this.state.historymode?\"tomato\":\"\"}} onClick={this.setHistoryMode}><p>{this.state.historymode?\"Cancel\":\"History\"}</p></s__.FeatureButton>}\r\n          {this.state.role===\"SUPER_ADMIN\"?<s__.FeatureButton onClick={()=>this.setShowPopupByType(\"insert\")}><p>Insert</p></s__.FeatureButton>:<React.Fragment/>}\r\n          {this.state.role===\"SUPER_ADMIN\"?<s__.FeatureButton style={{backgroundColor:this.state.updatemode?\"tomato\":\"\"}} onClick={this.setUpdateMode}><p>{this.state.updatemode?\"Cancel\":\"Update\"}</p></s__.FeatureButton>:<React.Fragment/>}\r\n          <s__.SearchInput\r\n            id=\"maxNumber\"\r\n            type=\"text\"\r\n            value={this.state.valueInputSearch}\r\n            placeholder=\"Search Room By Name\"\r\n            onChange={this.setInputSearch}\r\n          />\r\n          <s__.FeatureButton onClick={this.SearchValueInputSearch}><p>Search</p></s__.FeatureButton>\r\n          <s__.FeatureButton style={{backgroundColor:this.state.deletemode?\"mediumspringgreen\":\"\",display:this.state.deletemode?\"\":\"none\"}} onClick={this.deleteAllCheckd}><p>Save</p></s__.FeatureButton>\r\n          {this.state.role===\"SUPER_ADMIN\"?<s__.FeatureButton style={{backgroundColor:this.state.deletemode?\"tomato\":\"\"}} onClick={this.setDeleteMode}><p>{this.state.deletemode?\"Cancel\":\"Delete\"}</p></s__.FeatureButton>:<React.Fragment></React.Fragment>}\r\n        </s__.FeatureArea>\r\n      </div>\r\n      \r\n    )\r\n  }\r\n\r\n  deleteAllCheckd= () =>{\r\n    console.log('deleteAllCheckd');\r\n    this.state.listDell.map(value => {\r\n      this.DeleteCurrent(value);\r\n    })\r\n    this.setState({\r\n      listDell:[],\r\n      deletemode:false\r\n    })\r\n    this.GETAll();\r\n  }\r\n\r\n  setIdCurrent = (currentId:string) => {\r\n    this.setState({\r\n      currentId\r\n    })\r\n  }\r\n\r\n  setListDel = () => {\r\n    let arr = this.state.listDell;\r\n    if(arr.indexOf(this.state.currentId)===-1){\r\n      arr.push(this.state.currentId)\r\n      this.setState({\r\n        listDell:arr\r\n      })\r\n    }else{\r\n      arr.splice(arr.indexOf(this.state.currentId),1)\r\n      this.setState({\r\n        listDell:arr\r\n      })\r\n    }\r\n  }\r\n\r\n  renderChildTableRoom = () => {\r\n    switch(this.state.featureType){\r\n      case \"history\":\r\n        return this.state.patient.map((row) => (\r\n          <s__.TableRowInfo key={row._id}>\r\n            <TableCell>{row.fullName}</TableCell>\r\n            <TableCell>{row.gender}</TableCell>\r\n            <TableCell>{row.identityCard}</TableCell>\r\n            <TableCell >{row.phoneNumber}</TableCell>\r\n            <TableCell >{row.dateOfBirth}</TableCell>\r\n            <TableCell >{row.address}</TableCell>\r\n          </s__.TableRowInfo>\r\n        ))\r\n      default:\r\n        return this.state.childtable.map((row) => (\r\n      <s__.TableRowInfo key={row._id} onClick={(this.state.updatemode || this.state.historymode)?(this.state.historymode?()=>this.getIdRow(row,\"history\"):()=>this.getIdRow(row,\"update\")):()=>this.setIdCurrent(row._id)}\r\n      onFocus={()=>this.setIdCurrent(row._id)}>\r\n        <TableCell>{row.name}</TableCell>\r\n        <TableCell>{row.currentNumber}</TableCell>\r\n        <TableCell>{row.maxNumber}</TableCell>\r\n        <TableCell>{row.address}</TableCell>\r\n        <TableCell align=\"right\" style={{display:this.state.deletemode?\"\":\"none\"}} >\r\n          <Checkbox \r\n            size=\"small\"\r\n            onChange={this.setListDel}\r\n          />\r\n        </TableCell>\r\n      </s__.TableRowInfo>\r\n    ))\r\n    }\r\n  }\r\n\r\n  renderGrid = () =>{\r\n    switch(this.state.featureType){\r\n      case \"history\":\r\n        return (\r\n          <div style={{backgroundColor:\"lightcyan\",overflow:\"auto\",height:\"400px\"}}>\r\n            <div >\r\n              <Table size=\"small\">\r\n                <TableHead >\r\n                  <s__.TableRowHead style={{height:\"50px\"}}>\r\n                    <TableCell>FullName</TableCell>\r\n                    <TableCell>Gender</TableCell>\r\n                    <TableCell>IdentityCard</TableCell>\r\n                    <TableCell>PhoneNumber</TableCell>\r\n                    <TableCell>DateOfBirth</TableCell>\r\n                    <TableCell>Address</TableCell>\r\n                  </s__.TableRowHead>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {this.renderChildTableRoom()}\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          </div>\r\n        )\r\n      default:\r\n        return (\r\n          <div style={{backgroundColor:\"lightcyan\",overflow:\"auto\",height:\"400px\"}}>\r\n            <div >\r\n              <Table size=\"small\">\r\n                <TableHead >\r\n                  <s__.TableRowHead style={{height:\"50px\"}}>\r\n                    <TableCell>Name</TableCell>\r\n                    <TableCell>Ship To</TableCell>\r\n                    <TableCell>Payment Method</TableCell>\r\n                    <TableCell>Address</TableCell>\r\n                    <TableCell align=\"right\" style={{display:this.state.deletemode?\"\":\"none\"}}>\r\n                      <Checkbox \r\n                        size=\"small\"\r\n                        onChange={this.setDelAll}/>\r\n                    </TableCell>\r\n                  </s__.TableRowHead>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {this.renderChildTableRoom()}\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          </div>\r\n        )\r\n    }\r\n    \r\n  }\r\n\r\n  renderPaper = () =>{\r\n    let arr = new Array(this.state.numberPaper);\r\n    return (\r\n        <s__.PaperDiv>\r\n          {\r\n          [...Array(this.state.numberPaper).keys()].map((value,index)=>{\r\n            return <s__.PaperDivNumber onClick={()=>{this.GetList('?page='+value)}}><p>{value+1}</p></s__.PaperDivNumber>\r\n          })\r\n          }\r\n          \r\n        </s__.PaperDiv>\r\n    )\r\n  }\r\n\r\n  //Main render\r\n  render() {\r\n    return (\r\n      <s__.Container style={{paddingBottom:\"0px\"}}>\r\n        <div>\r\n          {this.state.showPopup?this.showPopup(this.state.featureType):<React.Fragment/>}\r\n          {this.renderButton()}\r\n          {this.renderGrid()}\r\n          {this.renderPaper()}\r\n        </div>\r\n      </s__.Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state:MainState) =>({\r\n  UserssignedState: state.UserssignedState,\r\n  UsersState: state.UsersState\r\n});\r\nexport default connect(mapStateToProps,{})(InfoTableRoom);\r\n\r\n\r\n// demoClickRedirect = () => {\r\n//   this.setState({\r\n//     demo:false\r\n//   })\r\n// }\r\n\r\n// demoRedirect = ()=>{\r\n//   if(this.state.demo){\r\n//     return <React.Fragment/>\r\n//   }else{\r\n//     return <Redirect to=\"/about-us\"/>\r\n//   }\r\n// }"]},"metadata":{},"sourceType":"module"}