{"ast":null,"code":"import axios from \"axios\";\nimport * as config__ from './../config';\nconst DOCTOR_REGISTER = config__.DOCTORREGISTER;\nconst DOCTOR_SIGNIN = config__.DOCTORSIGNIN;\nconst DOCTOR_REGISTER_PATIENT = config__.DOCTORREGISTERPATIENT;\nconst DOCTOR_GETLIST_PATIENT = config__.DOCTORGETLISTPATIENT;\nconst DOCTOR_ADDPATIENTOROOM = config__.DOCTORADDPATIENTTOROOM;\nexport default class DoctorAPI {\n  constructor() {\n    this.userRegister = (formData, response, error) => {\n      const data = {\n        'address': formData.get('address'),\n        'password': formData.get('password'),\n        'phoneNumber': formData.get('phoneNumber'),\n        'dateOfBirth': formData.get('dateOfBirth'),\n        'identityCard': formData.get('identityCard'),\n        'fullName': formData.get('fullName'),\n        'email': formData.get('email')\n      };\n      axios.post(DOCTOR_REGISTER, data).then(response).catch(error);\n    };\n\n    this.userLogin = (formData, response, error) => {\n      const data = {\n        \"identityCard\": formData.get(\"identityCard\"),\n        \"password\": formData.get(\"password\")\n      };\n      axios.post(DOCTOR_SIGNIN, data).then(response).catch(error);\n    };\n\n    this.registerPatient = (token, formData, response, error) => {\n      const data = {\n        'address': formData.get('address'),\n        'password': formData.get('password'),\n        'phoneNumber': formData.get('phoneNumber'),\n        'dateOfBirth': formData.get('dateOfBirth'),\n        'identityCard': formData.get('identityCard'),\n        'fullName': formData.get('fullName'),\n        'email': formData.get('email'),\n        'gender': formData.get('gender')\n      };\n      axios.post(DOCTOR_REGISTER_PATIENT, data, {\n        headers: {\n          Authorization: token\n        }\n      }).then(response).catch(error);\n    };\n\n    this.getListPatient = (token, response, error) => {\n      axios.get(DOCTOR_GETLIST_PATIENT, {\n        headers: {\n          Authorization: token\n        }\n      }).then(response).catch(error);\n    };\n\n    this.getList = (token, params, response, error) => {\n      axios.get(DOCTOR_GETLIST_PATIENT + params, {\n        headers: {\n          Authorization: token\n        }\n      }).then(response).catch(error);\n    };\n\n    this.addPatientToRoom = (token, idPatient, formData, response, error) => {\n      const data = {\n        \"idRoom\": formData.get(\"idRoom\")\n      };\n      axios.post(DOCTOR_ADDPATIENTOROOM + idPatient, data, {\n        headers: {\n          Authorization: token\n        }\n      }).then(response).catch(error);\n    };\n  }\n\n}","map":{"version":3,"sources":["C:/Users/HSONNL/Desktop/myProject/NCOV-19/Repo/NCOV-19Manager/client/src/modules/api/doctor.ts"],"names":["axios","config__","DOCTOR_REGISTER","DOCTORREGISTER","DOCTOR_SIGNIN","DOCTORSIGNIN","DOCTOR_REGISTER_PATIENT","DOCTORREGISTERPATIENT","DOCTOR_GETLIST_PATIENT","DOCTORGETLISTPATIENT","DOCTOR_ADDPATIENTOROOM","DOCTORADDPATIENTTOROOM","DoctorAPI","userRegister","formData","response","error","data","get","post","then","catch","userLogin","registerPatient","token","headers","Authorization","getListPatient","getList","params","addPatientToRoom","idPatient"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport * as config__ from './../config';\r\n\r\nconst DOCTOR_REGISTER: string = config__.DOCTORREGISTER;\r\nconst DOCTOR_SIGNIN: string = config__.DOCTORSIGNIN;\r\nconst DOCTOR_REGISTER_PATIENT: string = config__.DOCTORREGISTERPATIENT;\r\nconst DOCTOR_GETLIST_PATIENT: string = config__.DOCTORGETLISTPATIENT;\r\nconst DOCTOR_ADDPATIENTOROOM: string = config__.DOCTORADDPATIENTTOROOM;\r\n\r\nexport default class DoctorAPI {\r\n\r\n  userRegister = (formData: any, response: any, error: any) => {\r\n    const data = {\r\n      'address': formData.get('address'),\r\n      'password': formData.get('password'),\r\n      'phoneNumber': formData.get('phoneNumber'),\r\n      'dateOfBirth': formData.get('dateOfBirth'),\r\n      'identityCard': formData.get('identityCard'),\r\n      'fullName': formData.get('fullName'),\r\n      'email': formData.get('email'),\r\n    }\r\n    axios.post(DOCTOR_REGISTER, data)\r\n      .then(response)\r\n      .catch(error);\r\n  };\r\n\r\n  userLogin = (formData: any, response: any, error: any) => {\r\n    const data = {\r\n      \"identityCard\": formData.get(\"identityCard\"),\r\n      \"password\": formData.get(\"password\")\r\n    }\r\n    axios.post(DOCTOR_SIGNIN, data)\r\n      .then(response)\r\n      .catch(error);\r\n  };\r\n\r\n  registerPatient = (token: string, formData: any, response: any, error: any) => {\r\n    const data = {\r\n      'address': formData.get('address'),\r\n      'password': formData.get('password'),\r\n      'phoneNumber': formData.get('phoneNumber'),\r\n      'dateOfBirth': formData.get('dateOfBirth'),\r\n      'identityCard': formData.get('identityCard'),\r\n      'fullName': formData.get('fullName'),\r\n      'email': formData.get('email'),\r\n      'gender': formData.get('gender')\r\n    }\r\n    axios.post(DOCTOR_REGISTER_PATIENT, data, { headers: { Authorization: token } })\r\n      .then(response)\r\n      .catch(error);\r\n  };\r\n\r\n  getListPatient = (token: string, response: any, error: any) => {\r\n    axios.get(DOCTOR_GETLIST_PATIENT, { headers: { Authorization: token } })\r\n      .then(response)\r\n      .catch(error);\r\n  };\r\n  getList = (token: string,params:string, response: any, error: any) => {\r\n    axios.get(DOCTOR_GETLIST_PATIENT+params, { headers: { Authorization: token } })\r\n      .then(response)\r\n      .catch(error);\r\n  };\r\n\r\n  addPatientToRoom = (token: string, idPatient: string, formData: any, response: any, error: any) => {\r\n    const data = {\r\n      \"idRoom\": formData.get(\"idRoom\")\r\n    }\r\n    axios.post(DOCTOR_ADDPATIENTOROOM + idPatient, data, { headers: { Authorization: token } })\r\n      .then(response)\r\n      .catch(error);\r\n  };\r\n}"]},"metadata":{},"sourceType":"module"}