{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HSONNL\\\\Desktop\\\\myProject\\\\NCOV-19\\\\Repo\\\\NCOV-19Manager\\\\client\\\\src\\\\component\\\\ChartData\\\\index.tsx\";\nimport React, { Component } from \"react\"; //style importer\n\nimport * as s__ from \"./style\";\nimport { Line, Bar, Doughnut } from 'react-chartjs-2';\n// declare const ParentDataType : ParentDataType;  \n// interface \nconst initState = {\n  datasetBarDonut: {\n    header: \"this is header\",\n    datainfo: \"Population (millions)\",\n    label: [\"Africa\", \"Asia\", \"Europe\", \"Latin America\", \"North America\"],\n    datasets: [{\n      data: [2478, 5267, 734, 784, 432]\n    }]\n  },\n  datasetLineChart: {\n    header: \"This is header\",\n    xAsis: [\"1500\", 1600, 1700, 1750, 1800, 1850, 1900, 1950, 1999, 2050],\n    datas: [{\n      labelName: \"A\",\n      data: [86, 114, 106, 106, 107, 111, 133, 221, 783, 2478]\n    }, {\n      labelName: \"B\",\n      data: [282, 350, 411, 502, 635, 809, 947, 1402, 3700, 4267]\n    }, {\n      labelName: \"C\",\n      data: [168, 170, 178, 190, 203, 276, 408, 547, 675, 734]\n    }, {\n      labelName: \"D\",\n      data: [40, 20, 10, 16, 24, 38, 74, 167, 508, 784]\n    }]\n  }\n};\n\nclass ChartData extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = initState;\n\n    this.ojbectData = (data = [], LabelName = \"null\", Color = \"#333\") => {\n      return {\n        data: data,\n        label: LabelName,\n        borderColor: Color,\n        fill: false\n      };\n    };\n\n    this.objectData1 = data => {\n      return {\n        label: this.state.datasetBarDonut.datainfo,\n        backgroundColor: this.props.color,\n        data: data.data\n      };\n    };\n\n    this.getData = typeChart => {\n      switch (typeChart) {\n        case \"Line\":\n          return this.state.datasetLineChart.datas.map((value, index) => this.ojbectData(value.data, value.labelName, this.props.color[index]));\n\n        case \"Doughnut\":\n          return this.state.datasetBarDonut.datasets.map(value => this.objectData1(value));\n\n        case \"Bar\":\n          return this.state.datasetBarDonut.datasets.map(value => this.objectData1(value));\n      }\n    };\n\n    this.renderChart = typeChart => {\n      switch (typeChart) {\n        case \"Line\":\n          return React.createElement(Line, {\n            data: {\n              labels: this.state.datasetLineChart.xAsis,\n              datasets: this.getData(typeChart)\n            },\n            options: {\n              title: {\n                display: true,\n                text: this.state.datasetLineChart.header\n              },\n              legend: {\n                display: true,\n                position: \"bottom\"\n              }\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 110\n            },\n            __self: this\n          });\n\n        case \"Doughnut\":\n          return React.createElement(Doughnut, {\n            data: {\n              labels: this.state.datasetBarDonut.label,\n              datasets: this.getData(typeChart)\n            },\n            options: {\n              title: {\n                display: true,\n                text: this.state.datasetBarDonut.header\n              }\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 127\n            },\n            __self: this\n          });\n\n        case \"Bar\":\n          return React.createElement(Bar, {\n            data: {\n              labels: this.state.datasetBarDonut.label,\n              datasets: this.getData(typeChart)\n            },\n            options: {\n              legend: {\n                display: false\n              },\n              title: {\n                display: true,\n                text: this.state.datasetBarDonut.header\n              }\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 140\n            },\n            __self: this\n          });\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(s__.Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, this.renderChart(this.props.typeChart));\n  }\n\n}\n\nexport default ChartData;","map":{"version":3,"sources":["C:/Users/HSONNL/Desktop/myProject/NCOV-19/Repo/NCOV-19Manager/client/src/component/ChartData/index.tsx"],"names":["React","Component","s__","Line","Bar","Doughnut","initState","datasetBarDonut","header","datainfo","label","datasets","data","datasetLineChart","xAsis","datas","labelName","ChartData","state","ojbectData","LabelName","Color","borderColor","fill","objectData1","backgroundColor","props","color","getData","typeChart","map","value","index","renderChart","labels","title","display","text","legend","position","render"],"mappings":"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","sourcesContent":["import React, { Component, ComponentClass } from \"react\";\r\n//style importer\r\nimport * as s__ from \"./style\";\r\nimport { Line, Bar, Doughnut  } from 'react-chartjs-2';\r\n\r\ninterface Data {\r\n  labelName:string,\r\n  data:number[],\r\n}\r\ninterface DataTable{\r\n  header:string,\r\n  xAsis:number[],\r\n  datas:Data[]\r\n}\r\n\r\ninterface Data1 {\r\n  \r\n  data:number[],\r\n}\r\n\r\ninterface DataTable1{\r\n  header:string,\r\n  datainfo:string,\r\n  datasets:Data1[],\r\n  label:string[],\r\n}\r\n\r\ninterface ParentData{\r\n  dataBarDonut?:DataTable1,\r\n  dataLine?:DataTable\r\n}\r\n\r\ntype ParentDataType = ComponentClass<ParentData>;\r\n// declare const ParentDataType : ParentDataType;  \r\n\r\n// interface \r\nconst initState = {\r\n\r\n  datasetBarDonut:{\r\n    header:\"this is header\",\r\n    datainfo:\"Population (millions)\",\r\n    label: [\"Africa\",\"Asia\",\"Europe\",\"Latin America\",\"North America\"],\r\n    datasets:[{\r\n      data: [2478, 5267, 734, 784,432],\r\n    }]\r\n  } as DataTable1,\r\n\r\n  datasetLineChart:{\r\n    header:\"This is header\",\r\n    xAsis:[\"1500\", 1600, 1700, 1750, 1800, 1850, 1900, 1950, 1999, 2050],\r\n    datas:[{\r\n      labelName:\"A\",\r\n      data:[86, 114, 106, 106, 107, 111, 133, 221, 783, 2478],\r\n    },{\r\n      labelName:\"B\",\r\n      data:[282, 350, 411, 502, 635, 809, 947, 1402, 3700, 4267],\r\n    },{\r\n      labelName:\"C\",\r\n      data:[168, 170, 178, 190, 203, 276, 408, 547, 675, 734],\r\n    },{\r\n      labelName:\"D\",\r\n      data:[40, 20, 10, 16, 24, 38, 74, 167, 508, 784],\r\n    }]\r\n  } as DataTable\r\n}\r\ntype State = typeof initState;\r\ninterface Props{\r\n  typeChart: string,\r\n  color: string[],\r\n  data: any,\r\n  // dataBarDonut: DataTable1,\r\n  // dataLine: DataTable\r\n}\r\n\r\nclass ChartData extends Component<Props,State> {\r\n\r\n  state = initState;\r\n  \r\n  ojbectData = (data:number[] = [],LabelName:string = \"null\",Color:string = \"#333\")=>{\r\n    return {\r\n      data: data,\r\n      label: LabelName,\r\n      borderColor: Color,\r\n      fill: false\r\n    }\r\n  }\r\n\r\n  objectData1 = (data:Data1)=>{\r\n      return {\r\n      label: this.state.datasetBarDonut.datainfo,\r\n      backgroundColor: this.props.color,\r\n      data: data.data\r\n    }\r\n  }\r\n\r\n  getData=(typeChart:string)=>{\r\n    switch(typeChart){\r\n      case \"Line\":\r\n        return this.state.datasetLineChart.datas.map((value:any,index:any)=>this.ojbectData(value.data,value.labelName,this.props.color[index]))\r\n      case \"Doughnut\":\r\n        return this.state.datasetBarDonut.datasets.map((value:any)=>this.objectData1(value))\r\n      case \"Bar\":\r\n        return this.state.datasetBarDonut.datasets.map((value:any)=>this.objectData1(value))\r\n    }\r\n  }\r\n\r\n  renderChart=(typeChart:string)=>{\r\n    switch(typeChart){\r\n      case \"Line\":\r\n        return <Line \r\n        data={{\r\n          labels: this.state.datasetLineChart.xAsis,\r\n          datasets: this.getData(typeChart),\r\n        }}\r\n        options={{\r\n          title: {\r\n            display: true,\r\n            text: this.state.datasetLineChart.header,\r\n          },\r\n          legend: {\r\n            display: true,\r\n            position: \"bottom\"\r\n          }\r\n        }}\r\n        />;\r\n      case \"Doughnut\":\r\n        return <Doughnut\r\n        data={{\r\n          labels: this.state.datasetBarDonut.label,\r\n          datasets: this.getData(typeChart)\r\n        }}\r\n        options={{\r\n          title: {\r\n            display: true,\r\n            text: this.state.datasetBarDonut.header\r\n          }\r\n        }}\r\n        />;\r\n      case \"Bar\":\r\n        return <Bar\r\n          data={{\r\n            labels: this.state.datasetBarDonut.label,\r\n            datasets: this.getData(typeChart)\r\n          }}\r\n          options={{\r\n            legend: { display: false },\r\n            title: {\r\n              display: true,\r\n              text: this.state.datasetBarDonut.header\r\n            }\r\n          }}\r\n        />;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <s__.Container>\r\n        {this.renderChart(this.props.typeChart)}\r\n      </s__.Container>\r\n    )      \r\n  }\r\n}\r\n\r\nexport default ChartData;\r\n"]},"metadata":{},"sourceType":"module"}