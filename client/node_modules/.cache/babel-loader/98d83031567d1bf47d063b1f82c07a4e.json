{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HSONNL\\\\Desktop\\\\myProject\\\\NCOV-19\\\\Repo\\\\NCOV-19Manager\\\\client\\\\src\\\\component\\\\InfoTableShift\\\\index.tsx\";\nimport React, { Component } from \"react\"; //style importer\n\nimport * as s__ from \"./style\";\nimport SaveIcon from '@material-ui/icons/Save';\nimport CloseIcon from '@material-ui/icons/Close'; // import Button from '@material-ui/core/Button';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport * as time__ from \"./../../modules/time\"; //component importer\n// import MainMenu from \"../MainMenu/index\";\n//utils importer\n\nimport AdminAPI from \"../../modules/api/admin\";\nimport DoctorAPI from \"../../modules/api/doctor\";\nimport ShiftAPI from \"../../modules/api/shift\";\nimport UserAPI from \"../../modules/api/user\"; //config importer\n\n//global store\nimport { connect } from 'react-redux';\nconst initState = {\n  // room: [] as api__.Room[],\n  patient: [],\n  shift: [],\n  deletemode: false,\n  updatemode: false,\n  showPopup: false,\n  numberPaper: 0,\n  featureType: \"get\",\n  delAll: false,\n  listDell: [],\n  valueInputSearch: '',\n  shiftRequest: {\n    updatestartTime: '',\n    insertstartTime: '',\n    insertendTime: '',\n    getallpage: '0',\n    getalltypesort: '1',\n    getallsearch: 'A200'\n  },\n  currentId: '',\n  currentShift: {\n    idUser: [],\n    _id: '',\n    startTime: '',\n    endTime: '',\n    __v: 1\n  }\n};\n\nclass InfoTableShift extends Component {\n  constructor(...args) {\n    super(...args);\n    this.token = window.sessionStorage.accessToken;\n    this.state = initState;\n    this.adminApi = new AdminAPI();\n    this.doctorApi = new DoctorAPI();\n    this.shiftApi = new ShiftAPI();\n    this.userApi = new UserAPI();\n\n    this.InsertCurrent = formData => {\n      if (this.token) {\n        this.shiftApi.create(this.token, formData, res => {\n          console.log(res.data);\n        }, err => {\n          console.log(err);\n          console.log(err);\n        });\n      }\n    };\n\n    this.SearchValueInputSearch = () => {\n      console.log('SearchValueInputSearch');\n      this.GetList('?search=' + this.state.valueInputSearch);\n    };\n\n    this.DeleteCurrent = currentId => {\n      if (this.token) {\n        this.shiftApi.delete(this.token, currentId, res => {\n          console.log(res.data);\n        }, err => {\n          console.log(err);\n        });\n      }\n    };\n\n    this.UpdateCurrent = (idRoom, formData) => {\n      if (this.token) {\n        this.shiftApi.upDate(this.token, idRoom, formData, res => {\n          console.log(\"success update\", res.data);\n        }, err => {\n          console.log(err);\n        });\n      }\n    };\n\n    this.GetUsers = userId => {\n      if (this.token) {\n        this.shiftApi.get(this.token, userId, res => {\n          console.log(res.data);\n        }, err => {\n          console.log(err);\n          console.log(err);\n        });\n      }\n    };\n\n    this.GETAll = () => {\n      let formData = new FormData();\n      formData.append('page', this.state.shiftRequest.getallpage);\n      formData.append('typesort', this.state.shiftRequest.getalltypesort);\n      formData.append('search', this.state.shiftRequest.getallsearch);\n\n      if (this.token) {\n        this.shiftApi.getAll(this.token, res => {\n          console.log(\"catruc\", res.data.caTruc);\n          this.setState({\n            shift: res.data.caTruc\n          });\n        }, err => {\n          console.log(err);\n          console.log(err);\n        });\n      }\n    };\n\n    this.GetList = params => {\n      this.shiftApi.getList(this.token, params, res => {\n        console.log(res);\n        this.setState({\n          shift: res.data.caTruc\n        });\n      }, err => {\n        console.log(err);\n      });\n    };\n\n    this.getIdRow = (shift, featureType) => {\n      switch (featureType) {\n        case \"update\":\n          this.setState({\n            currentShift: shift,\n            currentId: shift._id,\n            showPopup: true,\n            featureType\n          });\n          break;\n      }\n    };\n\n    this.saveInsertPopup = () => {\n      //room\n      let formdata = new FormData();\n      formdata.append('startTime', time__.ParseTime(this.state.shiftRequest.insertendTime).toString());\n      formdata.append('endTime', time__.ParseTime(this.state.shiftRequest.insertendTime).toString());\n      this.InsertCurrent(formdata);\n      let obj = this.state.shiftRequest;\n      obj.insertstartTime = \"\";\n      obj.insertendTime = \"\";\n      this.setState({\n        shiftRequest: obj\n      });\n      this.GETAll();\n      this.cancelPopup();\n    };\n\n    this.renderInsertForm = () => {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, React.createElement(s__.TextFieldArea, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, React.createElement(s__.TextInput, {\n        variant: \"outlined\",\n        label: \"startTime\",\n        id: \"startTime\",\n        type: \"date\",\n        value: this.state.shiftRequest.insertstartTime,\n        placeholder: \"\",\n        onChange: this.onchangeInsertStartTime,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      })), React.createElement(s__.TextFieldArea, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, React.createElement(s__.TextInput, {\n        variant: \"outlined\",\n        label: \"endTime\",\n        id: \"endTime\",\n        type: \"date\",\n        value: this.state.shiftRequest.insertendTime,\n        onChange: this.onchangeInsertEndTime,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      })), React.createElement(s__.TextFieldArea, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, React.createElement(s__.ButtonSubmit, {\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"large\",\n        startIcon: React.createElement(SaveIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 237\n          },\n          __self: this\n        }),\n        onClick: this.saveInsertPopup,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, \"Save\")), React.createElement(s__.TextFieldArea, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, React.createElement(s__.ButtonSubmit, {\n        variant: \"contained\",\n        color: \"default\",\n        size: \"large\",\n        startIcon: React.createElement(CloseIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 246\n          },\n          __self: this\n        }),\n        onClick: this.cancelPopup,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, \"Cancel\")));\n    };\n\n    this.saveUpdatePopup = () => {\n      let formdata = new FormData();\n      formdata.append('startTime', this.state.shiftRequest.updatestartTime.toString());\n      this.UpdateCurrent(this.state.currentId, formdata);\n      let obj = this.state.shiftRequest;\n      obj.updatestartTime = \"\";\n      this.setState({\n        shiftRequest: obj\n      });\n      this.cancelPopup();\n      this.GETAll();\n    };\n\n    this.renderUpdateForm = () => {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }, React.createElement(s__.TextFieldArea, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, React.createElement(s__.TextInput, {\n        variant: \"outlined\",\n        label: \"currentNumber\",\n        id: \"currentNumber\",\n        type: \"text\",\n        value: this.state.shiftRequest.updatestartTime,\n        onChange: this.onchangUpdateStartTime,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      })), React.createElement(s__.TextFieldArea, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }, React.createElement(s__.ButtonSubmit, {\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"large\",\n        startIcon: React.createElement(SaveIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 285\n          },\n          __self: this\n        }),\n        onClick: this.saveUpdatePopup,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }, \"Save\")), React.createElement(s__.TextFieldArea, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }, React.createElement(s__.ButtonSubmit, {\n        variant: \"contained\",\n        color: \"default\",\n        size: \"large\",\n        startIcon: React.createElement(CloseIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 294\n          },\n          __self: this\n        }),\n        onClick: this.cancelPopup,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }, \"Cancel\")));\n    };\n\n    this.renderPopupInput = type => {\n      switch (type) {\n        case \"get\":\n          break;\n\n        case \"update\":\n          return React.createElement(React.Fragment, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 308\n            },\n            __self: this\n          }, this.renderUpdateForm());\n\n        case \"delete\":\n          break;\n\n        case \"insert\":\n          return React.createElement(React.Fragment, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 316\n            },\n            __self: this\n          }, this.renderInsertForm());\n      }\n    };\n\n    this.renderPopupInfo = type => {\n      switch (type) {\n        case \"get\":\n          break;\n\n        case \"update\":\n          return React.createElement(React.Fragment, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 330\n            },\n            __self: this\n          }, React.createElement(\"h1\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 331\n            },\n            __self: this\n          }, \"This Shift now have \", this.state.currentShift.idUser.length, \" person\"), React.createElement(\"h4\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 332\n            },\n            __self: this\n          }, \"Input and click on submit button to update number person on room, or click cancel to exist\"), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 333\n            },\n            __self: this\n          }, \"Start time: \", this.state.currentShift.startTime), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 334\n            },\n            __self: this\n          }, \"End time: \", this.state.currentShift.endTime));\n\n        case \"delete\":\n          break;\n\n        case \"insert\":\n          return React.createElement(React.Fragment, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 341\n            },\n            __self: this\n          }, React.createElement(\"h1\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 342\n            },\n            __self: this\n          }, \"Create Shift\"), React.createElement(\"h4\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 343\n            },\n            __self: this\n          }, \"Input Shift time and click on submit button to create a new one, else click cancel to exist\"));\n      }\n    };\n\n    this.showPopup = type => {\n      return React.createElement(React.Fragment, null, React.createElement(s__.PopupBackground, {\n        onClick: this.cancelPopup,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353\n        },\n        __self: this\n      }), React.createElement(s__.PopupContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355\n        },\n        __self: this\n      }, React.createElement(s__.PopupInfo, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356\n        },\n        __self: this\n      }, this.renderPopupInfo(type)), React.createElement(s__.PopupInput, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359\n        },\n        __self: this\n      }, this.renderPopupInput(type))));\n    };\n\n    this.cancelPopup = () => {\n      this.setState({\n        showPopup: false\n      });\n    };\n\n    this.setShowPopupByType = type => {\n      switch (type) {\n        case \"update\":\n          this.setState({\n            updatemode: true,\n            featureType: type\n          });\n          break;\n\n        case \"delete\":\n          break;\n\n        case \"insert\":\n          this.setState({\n            featureType: type,\n            showPopup: true\n          });\n      }\n    };\n\n    this.setDeleteMode = () => {\n      this.setState({\n        deletemode: !this.state.deletemode,\n        updatemode: false\n      });\n    };\n\n    this.setUpdateMode = () => {\n      this.setState({\n        updatemode: !this.state.updatemode,\n        deletemode: false\n      });\n    };\n\n    this.setShowPopup = () => {\n      this.setState({\n        showPopup: !this.state.showPopup\n      });\n    };\n\n    this.donotthing = () => {\n      console.log(\"success\");\n    };\n\n    this.setDelAll = () => {\n      this.setState({\n        delAll: !this.state.delAll\n      });\n      console.log(this.state.delAll);\n    };\n\n    this.setInputSearch = event => {\n      this.setState({\n        valueInputSearch: event.target.value\n      });\n    };\n\n    this.onchangUpdateStartTime = event => {\n      let obj = this.state.shiftRequest;\n      obj.updatestartTime = event.target.value;\n      this.setState({\n        shiftRequest: obj\n      });\n    };\n\n    this.onchangeInsertStartTime = event => {\n      let obj = this.state.shiftRequest;\n      obj.insertstartTime = event.target.value;\n      this.setState({\n        shiftRequest: obj\n      });\n    };\n\n    this.onchangeInsertEndTime = event => {\n      let obj = this.state.shiftRequest;\n      obj.insertendTime = event.target.value;\n      this.setState({\n        shiftRequest: obj\n      });\n    };\n\n    this.renderButton = () => {\n      return React.createElement(\"div\", {\n        style: {\n          backgroundColor: \"darkblue\",\n          height: \"auto\",\n          borderTopRightRadius: \"5px\",\n          borderTopLeftRadius: \"5px\",\n          padding: \"20px 0px 0px 20px\",\n          color: \"white\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 456\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        style: {\n          marginTop: \"0px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 465\n        },\n        __self: this\n      }, \"Shift\"), React.createElement(s__.FeatureArea, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 466\n        },\n        __self: this\n      }, React.createElement(s__.FeatureButton, {\n        onClick: () => this.setShowPopupByType(\"insert\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 468\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 468\n        },\n        __self: this\n      }, \"Insert\")), React.createElement(s__.FeatureButton, {\n        style: {\n          backgroundColor: this.state.updatemode ? \"tomato\" : \"\"\n        },\n        onClick: this.setUpdateMode,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 469\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 469\n        },\n        __self: this\n      }, this.state.updatemode ? \"Cancel\" : \"Update\")), React.createElement(s__.FeatureButton, {\n        style: {\n          backgroundColor: this.state.deletemode ? \"mediumspringgreen\" : \"\",\n          display: this.state.deletemode ? \"\" : \"none\"\n        },\n        onClick: this.deleteAllCheckd,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 478\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 478\n        },\n        __self: this\n      }, \"Save\")), React.createElement(s__.FeatureButton, {\n        style: {\n          backgroundColor: this.state.deletemode ? \"tomato\" : \"\"\n        },\n        onClick: this.setDeleteMode,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 479\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 479\n        },\n        __self: this\n      }, this.state.deletemode ? \"Cancel\" : \"Delete\"))));\n    };\n\n    this.deleteAllCheckd = () => {\n      console.log('deleteAllCheckd');\n      this.state.listDell.map(value => {\n        this.DeleteCurrent(value);\n      });\n      this.setState({\n        listDell: [],\n        deletemode: false\n      });\n      this.GETAll();\n    };\n\n    this.setIdCurrent = currentId => {\n      this.setState({\n        currentId\n      });\n    };\n\n    this.setListDel = () => {\n      let arr = this.state.listDell;\n\n      if (arr.indexOf(this.state.currentId) === -1) {\n        arr.push(this.state.currentId);\n        this.setState({\n          listDell: arr\n        });\n      } else {\n        arr.splice(arr.indexOf(this.state.currentId), 1);\n        this.setState({\n          listDell: arr\n        });\n      }\n    };\n\n    this.renderChildTableRoom = () => {\n      return this.state.shift.map(row => React.createElement(s__.TableRowInfo, {\n        key: row._id,\n        onClick: this.state.updatemode ? () => this.getIdRow(row, \"update\") : () => this.setIdCurrent(row._id),\n        onFocus: () => this.setIdCurrent(row._id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 522\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 524\n        },\n        __self: this\n      }, row.idUser.length), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 525\n        },\n        __self: this\n      }, row.startTime), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 526\n        },\n        __self: this\n      }, row.endTime), React.createElement(TableCell, {\n        align: \"right\",\n        style: {\n          display: this.state.deletemode ? \"\" : \"none\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 527\n        },\n        __self: this\n      }, React.createElement(Checkbox, {\n        size: \"small\",\n        onChange: this.setListDel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 528\n        },\n        __self: this\n      }))));\n    };\n\n    this.renderGrid = () => {\n      return React.createElement(\"div\", {\n        style: {\n          backgroundColor: \"lightcyan\",\n          overflow: \"auto\",\n          height: \"100vh\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 539\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 540\n        },\n        __self: this\n      }, React.createElement(Table, {\n        size: \"small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 541\n        },\n        __self: this\n      }, React.createElement(TableHead, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 542\n        },\n        __self: this\n      }, React.createElement(s__.TableRowHead, {\n        style: {\n          height: \"50px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 543\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 544\n        },\n        __self: this\n      }, \"Number person\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 545\n        },\n        __self: this\n      }, \"Start time\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 546\n        },\n        __self: this\n      }, \"End time\"), React.createElement(TableCell, {\n        align: \"right\",\n        style: {\n          display: this.state.deletemode ? \"\" : \"none\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 547\n        },\n        __self: this\n      }, React.createElement(Checkbox, {\n        size: \"small\",\n        onChange: this.setDelAll,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 548\n        },\n        __self: this\n      })))), React.createElement(TableBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 554\n        },\n        __self: this\n      }, this.renderChildTableRoom()))));\n    };\n\n    this.renderPaper = () => {\n      let arr = new Array(this.state.numberPaper);\n      return React.createElement(s__.PaperDiv, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 566\n        },\n        __self: this\n      }, [...Array(this.state.numberPaper).keys()].map((value, index) => {\n        return React.createElement(s__.PaperDivNumber, {\n          onClick: () => {\n            this.GetList('?page=' + value);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 569\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 569\n          },\n          __self: this\n        }, value + 1));\n      }));\n    };\n  }\n\n  //circle\n  componentDidMount() {\n    console.log(this.state);\n    this.GETAll();\n    setInterval(() => {\n      console.log(this.state);\n    }, 2000);\n  } //API\n\n\n  //Main render\n  render() {\n    return React.createElement(s__.Container, {\n      style: {\n        paddingBottom: \"0px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 580\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 581\n      },\n      __self: this\n    }, this.state.showPopup ? this.showPopup(this.state.featureType) : React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 582\n      },\n      __self: this\n    }), this.renderButton(), this.renderGrid(), this.renderPaper()));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  UsersState: state.UsersState,\n  UserssignedState: state.UserssignedState\n});\n\nexport default connect(mapStateToProps, {})(InfoTableShift); // demoClickRedirect = () => {\n//   this.setState({\n//     demo:false\n//   })\n// }\n// demoRedirect = ()=>{\n//   if(this.state.demo){\n//     return <React.Fragment/>\n//   }else{\n//     return <Redirect to=\"/about-us\"/>\n//   }\n// }","map":{"version":3,"sources":["C:/Users/HSONNL/Desktop/myProject/NCOV-19/Repo/NCOV-19Manager/client/src/component/InfoTableShift/index.tsx"],"names":["React","Component","s__","SaveIcon","CloseIcon","Table","TableBody","TableCell","TableHead","Checkbox","time__","AdminAPI","DoctorAPI","ShiftAPI","UserAPI","connect","initState","patient","shift","deletemode","updatemode","showPopup","numberPaper","featureType","delAll","listDell","valueInputSearch","shiftRequest","updatestartTime","insertstartTime","insertendTime","getallpage","getalltypesort","getallsearch","currentId","currentShift","idUser","_id","startTime","endTime","__v","InfoTableShift","token","window","sessionStorage","accessToken","state","adminApi","doctorApi","shiftApi","userApi","InsertCurrent","formData","create","res","console","log","data","err","SearchValueInputSearch","GetList","DeleteCurrent","delete","UpdateCurrent","idRoom","upDate","GetUsers","userId","get","GETAll","FormData","append","getAll","caTruc","setState","params","getList","getIdRow","saveInsertPopup","formdata","ParseTime","toString","obj","cancelPopup","renderInsertForm","onchangeInsertStartTime","onchangeInsertEndTime","saveUpdatePopup","renderUpdateForm","onchangUpdateStartTime","renderPopupInput","type","renderPopupInfo","length","setShowPopupByType","setDeleteMode","setUpdateMode","setShowPopup","donotthing","setDelAll","setInputSearch","event","target","value","renderButton","backgroundColor","height","borderTopRightRadius","borderTopLeftRadius","padding","color","marginTop","display","deleteAllCheckd","map","setIdCurrent","setListDel","arr","indexOf","push","splice","renderChildTableRoom","row","renderGrid","overflow","renderPaper","Array","keys","index","componentDidMount","setInterval","render","paddingBottom","mapStateToProps","UsersState","UserssignedState"],"mappings":"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","sourcesContent":["import React, { Component, ChangeEvent } from \"react\";\r\n//style importer\r\nimport * as s__ from \"./style\";\r\nimport {Redirect} from 'react-router-dom'\r\n// import Link from '@material-ui/core/Link';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n// import Button from '@material-ui/core/Button';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport ClearAllIcon from '@material-ui/icons/ClearAll';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport * as time__ from \"./../../modules/time\";\r\n//component importer\r\n// import MainMenu from \"../MainMenu/index\";\r\n//utils importer\r\nimport AdminAPI from \"../../modules/api/admin\";\r\nimport DoctorAPI from \"../../modules/api/doctor\";\r\nimport RoomAPI from \"../../modules/api/room\";\r\nimport ShiftAPI from \"../../modules/api/shift\";\r\nimport UserAPI from \"../../modules/api/user\";\r\n//config importer\r\nimport {AdminRequest,DoctorRequest,RoomRequest,ShiftRequest,UserRequest} from \"../../config/requesttype\";\r\nimport * as api__ from \"../../config/apireturntype\";\r\nimport { Button } from \"@material-ui/core\";\r\n//global store\r\nimport { connect } from 'react-redux';\r\nimport {MainState} from '../../store/index';\r\n//type\r\nimport {UsersState} from '../../store/User/type';\r\nimport {UserssignedState} from '../../store/UsersSigned/type';\r\n//typeInput\r\n\r\ninterface Props {\r\n  UsersState: UsersState,\r\n  UserssignedState: UserssignedState\r\n}\r\n\r\ntype State =  typeof initState;\r\n\r\nconst initState = {\r\n  // room: [] as api__.Room[],\r\n  patient: [] as api__.Patient[],\r\n  shift:[] as api__.Shift[],\r\n\r\n  deletemode:false,\r\n  updatemode:false,\r\n  showPopup:false,\r\n  numberPaper:0,\r\n  featureType:\"get\" as \"update\" | \"delete\" | \"insert\",\r\n  delAll: false,\r\n  listDell:[] as string[],\r\n  valueInputSearch: '' as string,\r\n\r\n  shiftRequest:{\r\n    updatestartTime:'',\r\n    insertstartTime:'',\r\n    insertendTime:'',\r\n    getallpage:'0',\r\n    getalltypesort:'1',\r\n    getallsearch:'A200'\r\n  } as ShiftRequest,\r\n  currentId: '',\r\n  currentShift: {\r\n    idUser: [],\r\n    _id:'',\r\n    startTime: '',\r\n    endTime: '',\r\n    __v: 1\r\n  } as api__.Shift,\r\n}\r\n\r\nclass InfoTableShift extends Component<Props, State> {\r\n  token = window.sessionStorage.accessToken;\r\n  state = initState;\r\n  adminApi = new AdminAPI();\r\n  doctorApi = new DoctorAPI();\r\n  // roomApi = new RoomAPI();\r\n  shiftApi = new ShiftAPI();\r\n  userApi = new UserAPI();\r\n\r\n  //circle\r\n  componentDidMount(){\r\n    console.log(this.state);\r\n    this.GETAll();\r\n    setInterval(()=>{\r\n      console.log(this.state);\r\n    },2000)\r\n  }\r\n\r\n  //API\r\n  InsertCurrent = (formData:FormData) => {\r\n    if(this.token){\r\n      this.shiftApi.create(this.token,formData,(res:any)=>{\r\n        console.log(res.data);\r\n      }, \r\n      (err:string)=>{\r\n        console.log(err);\r\n        console.log(err);\r\n      })\r\n    }\r\n  }\r\n\r\n  SearchValueInputSearch = () => {\r\n    console.log('SearchValueInputSearch')\r\n    this.GetList('?search='+this.state.valueInputSearch);\r\n  }\r\n\r\n  DeleteCurrent = (currentId:string) => {\r\n    if(this.token){\r\n      this.shiftApi.delete(this.token,currentId,(res:any)=>{\r\n        console.log(res.data);\r\n      }, \r\n      (err:string)=>{\r\n        console.log(err);\r\n      })\r\n    }\r\n  }\r\n\r\n  UpdateCurrent = (idRoom:string,formData:FormData) => {\r\n    if(this.token){\r\n      this.shiftApi.upDate(this.token,idRoom,formData,(res:any)=>{\r\n        console.log(\"success update\",res.data);\r\n      }, \r\n      (err:string)=>{\r\n        console.log(err);\r\n      })\r\n    }\r\n  }\r\n\r\n  GetUsers = (userId:string) => {\r\n    if(this.token){\r\n      this.shiftApi.get(this.token,userId,(res:any)=>{\r\n        console.log(res.data);\r\n      },\r\n      (err:string)=>{\r\n        console.log(err);\r\n        console.log(err);\r\n      })\r\n    }\r\n  }\r\n\r\n  GETAll = () =>{\r\n    let formData = new FormData();\r\n    formData.append('page',this.state.shiftRequest.getallpage);\r\n    formData.append('typesort',this.state.shiftRequest.getalltypesort);\r\n    formData.append('search',this.state.shiftRequest.getallsearch);\r\n    if(this.token){\r\n      this.shiftApi.getAll(this.token,(res:any)=>{\r\n        console.log(\"catruc\",res.data.caTruc);\r\n        this.setState({\r\n          shift:res.data.caTruc\r\n        })\r\n      }, \r\n      (err:string)=>{\r\n        console.log(err);\r\n        console.log(err);\r\n      })\r\n    }\r\n  }\r\n  GetList = (params:string) => {\r\n    this.shiftApi.getList(this.token,params,\r\n      (res:any)=>{\r\n        console.log(res)\r\n        this.setState({\r\n          shift:res.data.caTruc\r\n        })\r\n      },(err:any)=>{\r\n        console.log(err)\r\n      }\r\n    )\r\n  }\r\n  ////\r\n  getIdRow=(shift:api__.Shift,featureType: \"update\" | \"delete\" | \"insert\")=>{\r\n    switch(featureType){\r\n      case \"update\":\r\n        this.setState({\r\n          currentShift:shift,\r\n          currentId:shift._id,\r\n          showPopup:true,\r\n          featureType\r\n        })\r\n        break;\r\n    }\r\n  }\r\n\r\n  saveInsertPopup = () => {\r\n    //room\r\n    let formdata = new FormData();\r\n    formdata.append('startTime',time__.ParseTime(this.state.shiftRequest.insertendTime).toString());\r\n    formdata.append('endTime',time__.ParseTime(this.state.shiftRequest.insertendTime).toString());\r\n    this.InsertCurrent(formdata);\r\n    let obj = this.state.shiftRequest;\r\n    obj.insertstartTime = \"\";\r\n    obj.insertendTime = \"\";\r\n    this.setState({\r\n      shiftRequest:obj\r\n    })\r\n    this.GETAll();\r\n    this.cancelPopup();\r\n  }\r\n\r\n  renderInsertForm = () => {\r\n    return (\r\n      <React.Fragment>\r\n        <s__.TextFieldArea>\r\n            <s__.TextInput\r\n              variant=\"outlined\"\r\n              label=\"startTime\"\r\n              id=\"startTime\"\r\n              type=\"date\"\r\n              value={this.state.shiftRequest.insertstartTime}\r\n              placeholder=\"\"\r\n              onChange={this.onchangeInsertStartTime}\r\n            />\r\n          </s__.TextFieldArea>\r\n          <s__.TextFieldArea>\r\n            <s__.TextInput\r\n              variant=\"outlined\"\r\n              label=\"endTime\"\r\n              id=\"endTime\"\r\n              type=\"date\"\r\n              value={this.state.shiftRequest.insertendTime}\r\n              onChange={this.onchangeInsertEndTime}\r\n            />\r\n          </s__.TextFieldArea>\r\n          <s__.TextFieldArea>\r\n            <s__.ButtonSubmit\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              size=\"large\"\r\n              startIcon={<SaveIcon />}\r\n              onClick={this.saveInsertPopup}\r\n            >Save</s__.ButtonSubmit>\r\n          </s__.TextFieldArea>\r\n          <s__.TextFieldArea>\r\n            <s__.ButtonSubmit\r\n              variant=\"contained\"\r\n              color=\"default\"\r\n              size=\"large\"\r\n              startIcon={<CloseIcon />}\r\n              onClick={this.cancelPopup}\r\n            >Cancel</s__.ButtonSubmit>\r\n          </s__.TextFieldArea>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n\r\n  saveUpdatePopup = () => {\r\n    let formdata = new FormData();\r\n    formdata.append('startTime',this.state.shiftRequest.updatestartTime.toString());\r\n    this.UpdateCurrent(this.state.currentId,formdata);\r\n    let obj = this.state.shiftRequest;\r\n    obj.updatestartTime = \"\";\r\n    this.setState({\r\n      shiftRequest:obj\r\n    })\r\n    this.cancelPopup();\r\n    this.GETAll();\r\n  }\r\n\r\n  renderUpdateForm = () => {\r\n    return (\r\n      <React.Fragment>\r\n          <s__.TextFieldArea>\r\n            <s__.TextInput\r\n              variant=\"outlined\"\r\n              label=\"currentNumber\"\r\n              id=\"currentNumber\"\r\n              type=\"text\"\r\n              value={this.state.shiftRequest.updatestartTime}\r\n              onChange={this.onchangUpdateStartTime}\r\n            />\r\n          </s__.TextFieldArea>\r\n          <s__.TextFieldArea>\r\n            <s__.ButtonSubmit\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              size=\"large\"\r\n              startIcon={<SaveIcon />}\r\n              onClick={this.saveUpdatePopup}\r\n            >Save</s__.ButtonSubmit>\r\n          </s__.TextFieldArea>\r\n          <s__.TextFieldArea>\r\n            <s__.ButtonSubmit\r\n              variant=\"contained\"\r\n              color=\"default\"\r\n              size=\"large\"\r\n              startIcon={<CloseIcon />}\r\n              onClick={this.cancelPopup}\r\n            >Cancel</s__.ButtonSubmit>\r\n          </s__.TextFieldArea>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n\r\n  renderPopupInput = (type:string) => {\r\n    switch(type){\r\n      case \"get\":\r\n        break;\r\n      case \"update\":\r\n        return (\r\n          <React.Fragment>\r\n            {this.renderUpdateForm()}\r\n          </React.Fragment>\r\n        )\r\n      case \"delete\":\r\n        break;\r\n      case \"insert\":\r\n        return (\r\n          <React.Fragment>\r\n            {this.renderInsertForm()}\r\n          </React.Fragment>\r\n        )\r\n    }\r\n    \r\n  }\r\n\r\n  renderPopupInfo = (type:string) => {\r\n    switch(type){\r\n      case \"get\":\r\n        break;\r\n      case \"update\":\r\n        return (\r\n          <React.Fragment>\r\n            <h1>This Shift now have {this.state.currentShift.idUser.length} person</h1>\r\n            <h4>Input and click on submit button to update number person on room, or click cancel to exist</h4>\r\n            <p>Start time: {this.state.currentShift.startTime}</p>\r\n            <p>End time: {this.state.currentShift.endTime}</p>\r\n          </React.Fragment>\r\n        )\r\n      case \"delete\":\r\n        break;\r\n      case \"insert\":\r\n        return (\r\n          <React.Fragment>\r\n            <h1>Create Shift</h1>\r\n            <h4>Input Shift time and click on submit button to create a new one, else click cancel to exist</h4>\r\n          </React.Fragment>\r\n        )\r\n    }\r\n  }\r\n\r\n  showPopup = (type:string) => {\r\n    \r\n    return (\r\n      <>\r\n        <s__.PopupBackground onClick={this.cancelPopup}>\r\n        </s__.PopupBackground>\r\n        <s__.PopupContainer>\r\n          <s__.PopupInfo>\r\n            {this.renderPopupInfo(type)}\r\n          </s__.PopupInfo>\r\n          <s__.PopupInput>\r\n            {this.renderPopupInput(type)}\r\n          </s__.PopupInput>\r\n        </s__.PopupContainer>\r\n      </>\r\n    )\r\n  }\r\n\r\n  cancelPopup=()=>{\r\n    this.setState({\r\n      showPopup:false\r\n    })\r\n  }\r\n\r\n  setShowPopupByType = (type:\"update\" | \"delete\" | \"insert\") => {\r\n    switch(type){\r\n      case \"update\":\r\n        this.setState({\r\n          updatemode:true,\r\n          featureType:type\r\n        })\r\n        break;\r\n      case \"delete\":\r\n        break;\r\n      case \"insert\":\r\n        this.setState({\r\n          featureType:type,\r\n          showPopup: true\r\n        })\r\n    }\r\n    \r\n  }\r\n\r\n  setDeleteMode = () => {\r\n    this.setState({\r\n      deletemode:!this.state.deletemode,\r\n      updatemode:false\r\n    })\r\n  }\r\n\r\n  setUpdateMode = () => {\r\n    this.setState({\r\n      updatemode:!this.state.updatemode,\r\n      deletemode:false\r\n    })\r\n  }\r\n\r\n  setShowPopup = () => {\r\n    this.setState({\r\n      showPopup:!this.state.showPopup\r\n    })\r\n  }\r\n\r\n  donotthing = () => {\r\n    console.log(\"success\");\r\n  }\r\n\r\n  setDelAll = () => {\r\n    this.setState({\r\n      delAll:!this.state.delAll,\r\n    })\r\n    console.log(this.state.delAll);\r\n  }\r\n\r\n  setInputSearch = (event: ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({\r\n      valueInputSearch: event.target.value\r\n    })\r\n  }\r\n\r\n  onchangUpdateStartTime = (event: ChangeEvent<HTMLInputElement>) => {\r\n    let obj = this.state.shiftRequest;\r\n    obj.updatestartTime = event.target.value;\r\n    this.setState({\r\n      shiftRequest:obj\r\n    })\r\n  }\r\n\r\n  onchangeInsertStartTime = (event: ChangeEvent<HTMLInputElement>) => {\r\n    let obj = this.state.shiftRequest;\r\n    obj.insertstartTime = event.target.value;\r\n    this.setState({\r\n      shiftRequest:obj\r\n    })\r\n  }\r\n\r\n  onchangeInsertEndTime = (event: ChangeEvent<HTMLInputElement>) => {\r\n    let obj = this.state.shiftRequest;\r\n    obj.insertendTime = event.target.value;\r\n    this.setState({\r\n      shiftRequest:obj\r\n    })\r\n  }\r\n\r\n  //Render\r\n  renderButton= () =>{\r\n    return (\r\n      <div style={{\r\n        backgroundColor:\"darkblue\",\r\n        height:\"auto\",\r\n        borderTopRightRadius:\"5px\", \r\n        borderTopLeftRadius:\"5px\",\r\n        padding:\"20px 0px 0px 20px\",\r\n        color:\"white\"\r\n        }}\r\n      >\r\n        <h1 style={{marginTop:\"0px\"}}>Shift</h1>\r\n        <s__.FeatureArea>\r\n          {/* <s__.FeatureButton onClick={this.GETAll}><p>Refresh</p></s__.FeatureButton> */}\r\n          <s__.FeatureButton onClick={()=>this.setShowPopupByType(\"insert\")}><p>Insert</p></s__.FeatureButton>\r\n          <s__.FeatureButton style={{backgroundColor:this.state.updatemode?\"tomato\":\"\"}} onClick={this.setUpdateMode}><p>{this.state.updatemode?\"Cancel\":\"Update\"}</p></s__.FeatureButton>\r\n          {/* <s__.SearchInput\r\n            id=\"maxNumber\"\r\n            type=\"text\"\r\n            value={this.state.valueInputSearch}\r\n            placeholder=\"Search Room By Name\"\r\n            onChange={this.setInputSearch}\r\n          /> */}\r\n          {/* <s__.FeatureButton onClick={this.SearchValueInputSearch}><p>Search</p></s__.FeatureButton> */}\r\n          <s__.FeatureButton style={{backgroundColor:this.state.deletemode?\"mediumspringgreen\":\"\",display:this.state.deletemode?\"\":\"none\"}} onClick={this.deleteAllCheckd}><p>Save</p></s__.FeatureButton>\r\n          <s__.FeatureButton style={{backgroundColor:this.state.deletemode?\"tomato\":\"\"}} onClick={this.setDeleteMode}><p>{this.state.deletemode?\"Cancel\":\"Delete\"}</p></s__.FeatureButton>\r\n        </s__.FeatureArea>\r\n        \r\n      </div>\r\n      \r\n    )\r\n  }\r\n\r\n  deleteAllCheckd= () =>{\r\n    console.log('deleteAllCheckd');\r\n    this.state.listDell.map(value => {\r\n      this.DeleteCurrent(value);\r\n    })\r\n    this.setState({\r\n      listDell:[],\r\n      deletemode:false\r\n    })\r\n    this.GETAll();\r\n  }\r\n\r\n  setIdCurrent = (currentId:string) => {\r\n    this.setState({\r\n      currentId\r\n    })\r\n  }\r\n\r\n  setListDel = () => {\r\n    let arr = this.state.listDell;\r\n    if(arr.indexOf(this.state.currentId)===-1){\r\n      arr.push(this.state.currentId)\r\n      this.setState({\r\n        listDell:arr\r\n      })\r\n    }else{\r\n      arr.splice(arr.indexOf(this.state.currentId),1)\r\n      this.setState({\r\n        listDell:arr\r\n      })\r\n    }\r\n  }\r\n\r\n  renderChildTableRoom = () => {\r\n    return this.state.shift.map((row) => (\r\n      <s__.TableRowInfo key={row._id} onClick={this.state.updatemode?()=>this.getIdRow(row,\"update\"):()=>this.setIdCurrent(row._id)}\r\n      onFocus={()=>this.setIdCurrent(row._id)}>\r\n        <TableCell>{row.idUser.length}</TableCell>\r\n        <TableCell>{row.startTime}</TableCell>\r\n        <TableCell>{row.endTime}</TableCell>\r\n        <TableCell align=\"right\" style={{display:this.state.deletemode?\"\":\"none\"}} >\r\n          <Checkbox \r\n            size=\"small\"\r\n            onChange={this.setListDel}  \r\n          />\r\n        </TableCell>\r\n      </s__.TableRowInfo>\r\n    ))\r\n  }\r\n\r\n  renderGrid = () =>{\r\n    return (\r\n    <div style={{backgroundColor:\"lightcyan\",overflow:\"auto\",height:\"100vh\"}}>\r\n      <div >\r\n        <Table size=\"small\">\r\n          <TableHead >\r\n            <s__.TableRowHead style={{height:\"50px\"}}>\r\n              <TableCell>Number person</TableCell>\r\n              <TableCell>Start time</TableCell>\r\n              <TableCell>End time</TableCell>\r\n              <TableCell align=\"right\" style={{display:this.state.deletemode?\"\":\"none\"}}>\r\n                <Checkbox \r\n                  size=\"small\"\r\n                  onChange={this.setDelAll}/>\r\n              </TableCell>\r\n            </s__.TableRowHead>\r\n          </TableHead>\r\n          <TableBody>\r\n            {this.renderChildTableRoom()}\r\n          </TableBody>\r\n        </Table>\r\n      </div>\r\n    </div>\r\n  )\r\n  }\r\n\r\n  renderPaper = () =>{\r\n    let arr = new Array(this.state.numberPaper);\r\n    return (\r\n        <s__.PaperDiv>\r\n          {\r\n          [...Array(this.state.numberPaper).keys()].map((value,index)=>{\r\n            return <s__.PaperDivNumber onClick={()=>{this.GetList('?page='+value)}}><p>{value+1}</p></s__.PaperDivNumber>\r\n          })\r\n          }\r\n          \r\n        </s__.PaperDiv>\r\n    )\r\n  }\r\n\r\n  //Main render\r\n  render() {\r\n    return (\r\n      <s__.Container style={{paddingBottom:\"0px\"}}>\r\n        <div>\r\n          {this.state.showPopup?this.showPopup(this.state.featureType):<React.Fragment/>}\r\n          {this.renderButton()}\r\n          {this.renderGrid()}\r\n          {this.renderPaper()}\r\n        </div>\r\n      </s__.Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state:MainState) =>({\r\n  UsersState: state.UsersState,\r\n  UserssignedState: state.UserssignedState\r\n});\r\nexport default connect(mapStateToProps,{})(InfoTableShift);\r\n\r\n\r\n// demoClickRedirect = () => {\r\n//   this.setState({\r\n//     demo:false\r\n//   })\r\n// }\r\n\r\n// demoRedirect = ()=>{\r\n//   if(this.state.demo){\r\n//     return <React.Fragment/>\r\n//   }else{\r\n//     return <Redirect to=\"/about-us\"/>\r\n//   }\r\n// }"]},"metadata":{},"sourceType":"module"}