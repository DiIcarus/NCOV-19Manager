{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HSONNL\\\\Desktop\\\\myProject\\\\NCOV-19\\\\Repo\\\\NCOV-19Manager\\\\client\\\\src\\\\component\\\\GoogleMapReact\\\\index.tsx\";\nimport React, { Component } from \"react\";\nimport OlMap from \"ol/Map\";\nimport OlView from \"ol/View\";\nimport { OSM, Vector as VectorSource } from 'ol/source';\nimport { Tile as TileLayer, Vector as VectorLayer } from 'ol/layer';\nimport { Point } from 'ol/geom';\nimport { Icon, Style } from 'ol/style';\nimport { Feature } from \"ol\";\nimport IconAnchorUnits from \"ol/style/IconAnchorUnits\";\nconst initState = {\n  center: [0, 0],\n  zoom: 1,\n  feature: [],\n  olmap: new OlMap()\n};\n\nclass MyComponents extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = initState;\n    this.raster = new TileLayer({\n      source: new OSM()\n    });\n    this.olmap = new OlMap({\n      target: undefined,\n      layers: [this.raster, new VectorLayer({\n        source: new VectorSource({\n          features: this.state.feature\n        }),\n        style: new Style({\n          image: new Icon({\n            anchor: [0.5, 46],\n            anchorXUnits: IconAnchorUnits.FRACTION,\n            anchorYUnits: IconAnchorUnits.PIXELS,\n            opacity: 0.95,\n            src: 'https://img.icons8.com/color/search'\n          })\n        })\n      })],\n      view: new OlView({\n        center: this.state.center,\n        zoom: this.state.zoom\n      })\n    });\n\n    this.setOLMAP = () => {\n      this.setState({\n        feature: this.props.listPoint.map(value => new Feature(new Point([Number(value.x), Number(value.y)])))\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.olmap.setTarget(\"map\");\n    this.olmap.on(\"moveend\", () => {\n      let center = this.olmap.getView().getCenter();\n      let zoom = this.olmap.getView().getZoom();\n      this.setState({\n        center,\n        zoom\n      });\n    });\n    setInterval(() => {\n      // console.log(\"PROPS\",this.props.listPoint.map((value)=>([+value.x,+value.y])));\n      // console.log(\"22\",this.props.listPoint.map((value)=>(new Feature(new Point([+value.x,+value.y])))));\n      // console.log(\"aaaa\",[new Feature(new Point([10,106])),new Feature(new Point([100000,106000]))]);\n      this.setOLMAP();\n    }, 2000);\n  }\n\n  render() {\n    console.log(\"mount\");\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, this.props.listPoint ? React.createElement(\"div\", {\n      id: \"map\",\n      style: {\n        width: \"100%\",\n        height: \"90%\",\n        borderRadius: \"5rem\",\n        margin: \"2rem 0rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      id: \"map\",\n      style: {\n        width: \"100%\",\n        height: \"90%\",\n        borderRadius: \"5rem\",\n        margin: \"2rem 0rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default MyComponents;","map":{"version":3,"sources":["C:/Users/HSONNL/Desktop/myProject/NCOV-19/Repo/NCOV-19Manager/client/src/component/GoogleMapReact/index.tsx"],"names":["React","Component","OlMap","OlView","OSM","Vector","VectorSource","Tile","TileLayer","VectorLayer","Point","Icon","Style","Feature","IconAnchorUnits","initState","center","zoom","feature","olmap","MyComponents","state","raster","source","target","undefined","layers","features","style","image","anchor","anchorXUnits","FRACTION","anchorYUnits","PIXELS","opacity","src","view","setOLMAP","setState","props","listPoint","map","value","Number","x","y","componentDidMount","setTarget","on","getView","getCenter","getZoom","setInterval","render","console","log","width","height","borderRadius","margin"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport OlMap from \"ol/Map\";\r\nimport OlView from \"ol/View\";\r\nimport OlLayerTile from \"ol/layer/Tile\";\r\nimport OlSourceOSM from \"ol/source/OSM\";\r\nimport {OSM, Vector as VectorSource} from 'ol/source';\r\nimport {Tile as TileLayer, Vector as VectorLayer} from 'ol/layer';\r\nimport Draw from 'ol/interaction/Draw';\r\nimport {LineString, Point, Polygon} from 'ol/geom';\r\nimport {Fill, Icon, Stroke, Style} from 'ol/style';\r\nimport GeometryType from \"ol/geom/GeometryType\";\r\nimport { Feature } from \"ol\";\r\nimport IconAnchorUnits from \"ol/style/IconAnchorUnits\";\r\ntype State = typeof initState;\r\nconst initState = {\r\n  center: [0, 0],\r\n  zoom: 1,\r\n  feature: [] as Feature<Point>[],\r\n  olmap: new OlMap(),\r\n}\r\n\r\ninterface Location{\r\n  x:number,\r\n  y:number\r\n}\r\ninterface Props{\r\n  listPoint:Location[]\r\n}\r\nclass MyComponents extends Component<Props,State> {\r\n  state = initState;\r\n  raster = new TileLayer({\r\n    source: new OSM()\r\n  });\r\n  // source = new VectorSource({wrapX: false});\r\n  // vector = new VectorLayer({\r\n  //   source: this.source\r\n  // });\r\n  \r\n  olmap:OlMap = new OlMap({\r\n      target: undefined,\r\n      layers: [this.raster,\r\n        new VectorLayer({\r\n          source: new VectorSource({\r\n            features: this.state.feature ,\r\n          }),\r\n          style: new Style({\r\n            image: new Icon({\r\n              anchor: [0.5, 46],\r\n              anchorXUnits: IconAnchorUnits.FRACTION,\r\n              anchorYUnits: IconAnchorUnits.PIXELS,\r\n              opacity: 0.95,\r\n              src: 'https://img.icons8.com/color/search'\r\n            }),\r\n          })\r\n        })\r\n      ],\r\n      view: new OlView({\r\n        center: this.state.center,\r\n        zoom: this.state.zoom\r\n      }),\r\n  })\r\n\r\n  componentDidMount() {\r\n    this.olmap.setTarget(\"map\");\r\n    this.olmap.on(\"moveend\", () => {\r\n      let center = this.olmap.getView().getCenter();\r\n      let zoom = this.olmap.getView().getZoom();\r\n      this.setState({ center, zoom });\r\n    });\r\n    setInterval(()=>{\r\n      // console.log(\"PROPS\",this.props.listPoint.map((value)=>([+value.x,+value.y])));\r\n      // console.log(\"22\",this.props.listPoint.map((value)=>(new Feature(new Point([+value.x,+value.y])))));\r\n      // console.log(\"aaaa\",[new Feature(new Point([10,106])),new Feature(new Point([100000,106000]))]);\r\n      this.setOLMAP()\r\n    },2000)\r\n  }\r\n  setOLMAP = () =>{\r\n    this.setState({\r\n      feature: this.props.listPoint.map((value)=>(new Feature(new Point([Number(value.x),Number(value.y)]))))\r\n    })\r\n  }\r\n  render() {\r\n    console.log(\"mount\")\r\n    return (\r\n      <React.Fragment>\r\n        {this.props.listPoint?<div id=\"map\" style={{ width: \"100%\", height: \"90%\", borderRadius: \"5rem\", margin: \"2rem 0rem\"}}></div>:\r\n        <div id=\"map\" style={{ width: \"100%\", height: \"90%\", borderRadius: \"5rem\", margin: \"2rem 0rem\"}}></div>}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MyComponents;"]},"metadata":{},"sourceType":"module"}