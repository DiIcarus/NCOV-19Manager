{"ast":null,"code":"export const ParseTime = (date, time = \"\") => {\n  let [yyyy, mm, dd] = date.split(\"-\");\n  let [h, m] = time.split(\":\");\n  console.log(\"Date:\", date); // return new Date(Number(yyyy),(Number(mm)-1),Number(dd)).getTime();\n  // return new Date(Number(yyyy),(Number(mm)),Number(dd)+1,Number(h),Number(m)).getTime();\n\n  return new Date(Number(yyyy), Number(mm) - 1, Number(dd) + 1 - 1, Number(h), Number(m)).getTime(); //server\n};\nexport const Timestamp2Time = unixTimestamp => {\n  let dateObj = new Date(Number(unixTimestamp) * 1000);\n  let utcString = dateObj.toUTCString();\n  return utcString.slice(-11, -4);\n};","map":{"version":3,"sources":["C:/Users/HSONNL/Desktop/myProject/NCOV-19/Repo/NCOV-19Manager/client/src/modules/time.ts"],"names":["ParseTime","date","time","yyyy","mm","dd","split","h","m","console","log","Date","Number","getTime","Timestamp2Time","unixTimestamp","dateObj","utcString","toUTCString","slice"],"mappings":"AAAA,OAAO,MAAMA,SAAS,GAAG,CAACC,IAAD,EAAaC,IAAW,GAAG,EAA3B,KAAgC;AACvD,MAAI,CAACC,IAAD,EAAMC,EAAN,EAASC,EAAT,IAAeJ,IAAI,CAACK,KAAL,CAAW,GAAX,CAAnB;AACA,MAAI,CAACC,CAAD,EAAGC,CAAH,IAAQN,IAAI,CAACI,KAAL,CAAW,GAAX,CAAZ;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBT,IAApB,EAHuD,CAIvD;AACA;;AACA,SAAO,IAAIU,IAAJ,CAASC,MAAM,CAACT,IAAD,CAAf,EAAuBS,MAAM,CAACR,EAAD,CAAN,GAAW,CAAlC,EAAqCQ,MAAM,CAACP,EAAD,CAAN,GAAW,CAAX,GAAc,CAAnD,EAAqDO,MAAM,CAACL,CAAD,CAA3D,EAA+DK,MAAM,CAACJ,CAAD,CAArE,EAA0EK,OAA1E,EAAP,CANuD,CAMoC;AAC5F,CAPM;AASP,OAAO,MAAMC,cAAc,GAAIC,aAAD,IAA0B;AACtD,MAAIC,OAAO,GAAG,IAAIL,IAAJ,CAASC,MAAM,CAACG,aAAD,CAAN,GAAwB,IAAjC,CAAd;AACA,MAAIE,SAAS,GAAGD,OAAO,CAACE,WAAR,EAAhB;AAEA,SAAOD,SAAS,CAACE,KAAV,CAAgB,CAAC,EAAjB,EAAqB,CAAC,CAAtB,CAAP;AACD,CALM","sourcesContent":["export const ParseTime = (date:string,time:string = \"\")=>{\r\n  let [yyyy,mm,dd] = date.split(\"-\");\r\n  let [h,m] = time.split(\":\");\r\n  console.log(\"Date:\",date);\r\n  // return new Date(Number(yyyy),(Number(mm)-1),Number(dd)).getTime();\r\n  // return new Date(Number(yyyy),(Number(mm)),Number(dd)+1,Number(h),Number(m)).getTime();\r\n  return new Date(Number(yyyy),(Number(mm)-1),Number(dd)+1 -1,Number(h),Number(m)).getTime();//server\r\n}\r\n\r\nexport const Timestamp2Time = (unixTimestamp:string) => {\r\n  let dateObj = new Date(Number(unixTimestamp) * 1000); \r\n  let utcString = dateObj.toUTCString(); \r\n\r\n  return utcString.slice(-11, -4); \r\n}"]},"metadata":{},"sourceType":"module"}