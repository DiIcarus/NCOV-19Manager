{"ast":null,"code":"import axios from 'axios';\nexport default class RoomAPI {\n  constructor() {\n    this.getAll = (token, formData, response, error) => {\n      axios.get('/api/room/', {\n        headers: {\n          Authorization: token\n        }\n      }).then(response).catch(error);\n    };\n\n    this.get = (token, idRoom, response, error) => {\n      axios.get('/api/room/' + idRoom, {\n        headers: {\n          Authorization: token\n        }\n      }).then(response).catch(error);\n    };\n\n    this.upDate = (token, idRoom, formData, response, error) => {\n      const data = {\n        \"currentNumber\": formData.get(\"currentNumber\")\n      };\n      axios.put('/api/room/' + idRoom, data, {\n        headers: {\n          Authorization: token\n        }\n      }).then(response).catch(error);\n    };\n\n    this.delete = (token, idRoom, response, error) => {\n      axios({\n        method: 'DELETE',\n        url: '/api/room/' + idRoom,\n        headers: {\n          Authorization: token\n        }\n      }).then(response).catch(error);\n    };\n\n    this.create = (token, formData, response, error) => {\n      const data = {\n        \"maxNumber\": formData.get(\"maxNumber\"),\n        \"address\": formData.get(\"address\"),\n        \"name\": formData.get(\"name\")\n      };\n      axios.post('/api/room/', data, {\n        headers: {\n          Authorization: token\n        }\n      }).then(response).catch(error);\n    };\n  }\n\n}","map":{"version":3,"sources":["C:/Users/HSONNL/Desktop/myProject/NCOV-19/Repo/NCOV-19Manager/client/src/modules/api/room.ts"],"names":["axios","RoomAPI","getAll","token","formData","response","error","get","headers","Authorization","then","catch","idRoom","upDate","data","put","delete","method","url","create","post"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,MAAMC,OAAN,CAAc;AAAA;AAAA,SAE3BC,MAF2B,GAElB,CAACC,KAAD,EAAeC,QAAf,EAAmCC,QAAnC,EAAkDC,KAAlD,KAAiE;AACxEN,MAAAA,KAAK,CAACO,GAAN,CAAU,YAAV,EAAwB;AAAEC,QAAAA,OAAO,EAAE;AAAEC,UAAAA,aAAa,EAAEN;AAAjB;AAAX,OAAxB,EACGO,IADH,CACQL,QADR,EAEGM,KAFH,CAESL,KAFT;AAGD,KAN0B;;AAAA,SAQ3BC,GAR2B,GAQrB,CAACJ,KAAD,EAAgBS,MAAhB,EAAgCP,QAAhC,EAA+CC,KAA/C,KAA8D;AAClEN,MAAAA,KAAK,CAACO,GAAN,CAAU,eAAeK,MAAzB,EAAiC;AAAEJ,QAAAA,OAAO,EAAE;AAAEC,UAAAA,aAAa,EAAEN;AAAjB;AAAX,OAAjC,EACGO,IADH,CACQL,QADR,EAEGM,KAFH,CAESL,KAFT;AAGD,KAZ0B;;AAAA,SAa3BO,MAb2B,GAalB,CAACV,KAAD,EAAgBS,MAAhB,EAAgCR,QAAhC,EAAoDC,QAApD,EAAmEC,KAAnE,KAAkF;AACzF,YAAMQ,IAAI,GAAG;AACX,yBAAiBV,QAAQ,CAACG,GAAT,CAAa,eAAb;AADN,OAAb;AAGAP,MAAAA,KAAK,CAACe,GAAN,CAAU,eAAeH,MAAzB,EAAiCE,IAAjC,EAAuC;AAAEN,QAAAA,OAAO,EAAE;AAAEC,UAAAA,aAAa,EAAEN;AAAjB;AAAX,OAAvC,EACGO,IADH,CACQL,QADR,EAEGM,KAFH,CAESL,KAFT;AAGD,KApB0B;;AAAA,SAsB3BU,MAtB2B,GAsBlB,CAACb,KAAD,EAAgBS,MAAhB,EAAgCP,QAAhC,EAA+CC,KAA/C,KAA8D;AACrEN,MAAAA,KAAK,CAAC;AACJiB,QAAAA,MAAM,EAAE,QADJ;AAEJC,QAAAA,GAAG,EAAE,eAAeN,MAFhB;AAGJJ,QAAAA,OAAO,EAAE;AACPC,UAAAA,aAAa,EAAEN;AADR;AAHL,OAAD,CAAL,CAQGO,IARH,CAQQL,QARR,EASGM,KATH,CASSL,KATT;AAUD,KAjC0B;;AAAA,SAmC3Ba,MAnC2B,GAmClB,CAAChB,KAAD,EAAgBC,QAAhB,EAAoCC,QAApC,EAAmDC,KAAnD,KAAkE;AACzE,YAAMQ,IAAI,GAAG;AACX,qBAAaV,QAAQ,CAACG,GAAT,CAAa,WAAb,CADF;AAEX,mBAAWH,QAAQ,CAACG,GAAT,CAAa,SAAb,CAFA;AAGX,gBAAQH,QAAQ,CAACG,GAAT,CAAa,MAAb;AAHG,OAAb;AAKAP,MAAAA,KAAK,CAACoB,IAAN,CAAW,YAAX,EAAyBN,IAAzB,EAA+B;AAAEN,QAAAA,OAAO,EAAE;AAAEC,UAAAA,aAAa,EAAEN;AAAjB;AAAX,OAA/B,EACGO,IADH,CACQL,QADR,EAEGM,KAFH,CAESL,KAFT;AAGD,KA5C0B;AAAA;;AAAA","sourcesContent":["import axios from 'axios'\r\n\r\nexport default class RoomAPI {\r\n\r\n  getAll = (token: string,formData: FormData, response: any, error: any) => {\r\n    axios.get('/api/room/', { headers: { Authorization: token } })\r\n      .then(response)\r\n      .catch(error);\r\n  };\r\n\r\n  get = (token: string, idRoom: string, response: any, error: any) => {\r\n    axios.get('/api/room/' + idRoom, { headers: { Authorization: token } })\r\n      .then(response)\r\n      .catch(error);\r\n  };\r\n  upDate = (token: string, idRoom: string, formData: FormData, response: any, error: any) => {\r\n    const data = {\r\n      \"currentNumber\": formData.get(\"currentNumber\")\r\n    }\r\n    axios.put('/api/room/' + idRoom, data, { headers: { Authorization: token } })\r\n      .then(response)\r\n      .catch(error);\r\n  };\r\n\r\n  delete = (token: string, idRoom: string, response: any, error: any) => {\r\n    axios({\r\n      method: 'DELETE',\r\n      url: '/api/room/' + idRoom,\r\n      headers: {\r\n        Authorization: token\r\n      }\r\n    }\r\n    )\r\n      .then(response)\r\n      .catch(error);\r\n  };\r\n\r\n  create = (token: string, formData: FormData, response: any, error: any) => {\r\n    const data = {\r\n      \"maxNumber\": formData.get(\"maxNumber\"),\r\n      \"address\": formData.get(\"address\"),\r\n      \"name\": formData.get(\"name\")\r\n    }\r\n    axios.post('/api/room/', data, { headers: { Authorization: token } })\r\n      .then(response)\r\n      .catch(error);\r\n  };\r\n}"]},"metadata":{},"sourceType":"module"}