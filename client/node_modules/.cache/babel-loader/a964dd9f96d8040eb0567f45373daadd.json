{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HSONNL\\\\Desktop\\\\myProject\\\\NCOV-19\\\\Repo\\\\NCOV-19Manager\\\\client\\\\src\\\\component\\\\ChartSection\\\\index.tsx\";\nimport React, { Component } from \"react\";\nimport * as s__ from \"./style\";\nimport { SocketIOClient } from \"./../../modules/socketio-client/socketio-client\";\nimport ChartData from '../ChartData/index';\nconst initState = {\n  data_vn: {},\n  data_glo: {},\n  data_all: {},\n  data1: {\n    header: \"This is header\",\n    // xAsis:[1500, 1600, 1700, 1750, 1800, 1850, 1900, 1950, 1999, 2050],\n    datas: [{\n      labelName: \"A\",\n      data: [86, 114, 106, 106, 107, 111, 133, 221, 783, 2478]\n    }, {\n      labelName: \"B\",\n      data: [282, 350, 411, 502, 635, 809, 947, 1402, 3700, 4267]\n    }, {\n      labelName: \"C\",\n      data: [168, 170, 178, 190, 203, 276, 408, 547, 675, 734]\n    }, {\n      labelName: \"D\",\n      data: [40, 20, 10, 16, 24, 38, 74, 167, 508, 784]\n    }]\n  },\n  data2: {\n    header: \"this is header\",\n    datainfo: \"Population (millions)\",\n    label: [\"Africa\", \"Asia\", \"Europe\", \"Latin America\", \"North America\"],\n    datasets: [{\n      data: [2478, 5267, 734, 784, 432]\n    }]\n  }\n};\n\nclass ChartSection extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = initState;\n  }\n\n  componentDidMount() {\n    let socket = new SocketIOClient();\n    socket.getDataVN(res => {\n      console.log(\"SOCKET:\", this.state);\n      this.setState({\n        data_vn: JSON.parse(res)\n      });\n    });\n    socket.getDataGlobal(res => {\n      console.log(\"SOCKET:\", JSON.parse(res), this.state);\n      this.setState({\n        data_glo: JSON.parse(res)\n      });\n    });\n    socket.getDataAll(res => {\n      console.log(\"SOCKET:\", JSON.parse(res), this.state);\n      this.setState({\n        data_all: JSON.parse(res)\n      });\n    });\n  }\n\n  render() {\n    // data={{dataLine:this.data1}}\n    return React.createElement(s__.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(s__.Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Chart\"), React.createElement(s__.ChartsPlace, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(ChartData, {\n      typeChart: \"Line\",\n      color: [],\n      data: this.state.data1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(ChartData, {\n      typeChart: \"Doughnut\",\n      color: [],\n      data: this.state.data2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(ChartData, {\n      typeChart: \"Bar\",\n      color: [],\n      data: this.state.data2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default ChartSection;","map":{"version":3,"sources":["C:/Users/HSONNL/Desktop/myProject/NCOV-19/Repo/NCOV-19Manager/client/src/component/ChartSection/index.tsx"],"names":["React","Component","s__","SocketIOClient","ChartData","initState","data_vn","data_glo","data_all","data1","header","datas","labelName","data","data2","datainfo","label","datasets","ChartSection","state","componentDidMount","socket","getDataVN","res","console","log","setState","JSON","parse","getDataGlobal","getDataAll","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,KAAKC,GAAZ,MAAqB,SAArB;AACA,SAAQC,cAAR,QAA6B,iDAA7B;AAIA,OAAOC,SAAP,MAAsB,oBAAtB;AAGA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,OAAO,EAAC,EADQ;AAEhBC,EAAAA,QAAQ,EAAC,EAFO;AAGhBC,EAAAA,QAAQ,EAAC,EAHO;AAIhBC,EAAAA,KAAK,EAAC;AACJC,IAAAA,MAAM,EAAC,gBADH;AAEJ;AACAC,IAAAA,KAAK,EAAC,CAAC;AACLC,MAAAA,SAAS,EAAC,GADL;AAELC,MAAAA,IAAI,EAAC,CAAC,EAAD,EAAK,GAAL,EAAU,GAAV,EAAe,GAAf,EAAoB,GAApB,EAAyB,GAAzB,EAA8B,GAA9B,EAAmC,GAAnC,EAAwC,GAAxC,EAA6C,IAA7C;AAFA,KAAD,EAGJ;AACAD,MAAAA,SAAS,EAAC,GADV;AAEAC,MAAAA,IAAI,EAAC,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,IAApC,EAA0C,IAA1C,EAAgD,IAAhD;AAFL,KAHI,EAMJ;AACAD,MAAAA,SAAS,EAAC,GADV;AAEAC,MAAAA,IAAI,EAAC,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,EAAyC,GAAzC,EAA8C,GAA9C;AAFL,KANI,EASJ;AACAD,MAAAA,SAAS,EAAC,GADV;AAEAC,MAAAA,IAAI,EAAC,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB,EAA6B,GAA7B,EAAkC,GAAlC,EAAuC,GAAvC;AAFL,KATI;AAHF,GAJU;AAqBhBC,EAAAA,KAAK,EAAC;AACJJ,IAAAA,MAAM,EAAC,gBADH;AAEJK,IAAAA,QAAQ,EAAC,uBAFL;AAGJC,IAAAA,KAAK,EAAE,CAAC,QAAD,EAAU,MAAV,EAAiB,QAAjB,EAA0B,eAA1B,EAA0C,eAA1C,CAHH;AAIJC,IAAAA,QAAQ,EAAC,CAAC;AACRJ,MAAAA,IAAI,EAAE,CAAC,IAAD,EAAO,IAAP,EAAa,GAAb,EAAkB,GAAlB,EAAsB,GAAtB;AADE,KAAD;AAJL;AArBU,CAAlB;;AA8BA,MAAMK,YAAN,SAA2BjB,SAA3B,CAA8C;AAAA;AAAA;AAAA,SAC5CkB,KAD4C,GACpCd,SADoC;AAAA;;AAG5Ce,EAAAA,iBAAiB,GAAE;AACjB,QAAIC,MAAM,GAAG,IAAIlB,cAAJ,EAAb;AACAkB,IAAAA,MAAM,CAACC,SAAP,CAAkBC,GAAD,IAAW;AAC1BC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsB,KAAKN,KAA3B;AACA,WAAKO,QAAL,CAAc;AACZpB,QAAAA,OAAO,EAACqB,IAAI,CAACC,KAAL,CAAWL,GAAX;AADI,OAAd;AAGD,KALD;AAMAF,IAAAA,MAAM,CAACQ,aAAP,CAAsBN,GAAD,IAAW;AAC9BC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBE,IAAI,CAACC,KAAL,CAAWL,GAAX,CAAtB,EAAsC,KAAKJ,KAA3C;AACA,WAAKO,QAAL,CAAc;AACZnB,QAAAA,QAAQ,EAAEoB,IAAI,CAACC,KAAL,CAAWL,GAAX;AADE,OAAd;AAGD,KALD;AAMAF,IAAAA,MAAM,CAACS,UAAP,CAAmBP,GAAD,IAAW;AAC3BC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBE,IAAI,CAACC,KAAL,CAAWL,GAAX,CAAtB,EAAsC,KAAKJ,KAA3C;AACA,WAAKO,QAAL,CAAc;AACZlB,QAAAA,QAAQ,EAAEmB,IAAI,CAACC,KAAL,CAAWL,GAAX;AADE,OAAd;AAGD,KALD;AAMD;;AACDQ,EAAAA,MAAM,GAAG;AACP;AACA,WACE,oBAAC,GAAD,CAAK,MAAL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD,CAAK,SAAL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE,oBAAC,GAAD,CAAK,WAAL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,MAArB;AAA4B,MAAA,KAAK,EAAE,EAAnC;AAAuC,MAAA,IAAI,EAAE,KAAKZ,KAAL,CAAWV,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,UAArB;AAAgC,MAAA,KAAK,EAAE,EAAvC;AAA2C,MAAA,IAAI,EAAE,KAAKU,KAAL,CAAWL,KAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIE,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,KAArB;AAA2B,MAAA,KAAK,EAAE,EAAlC;AAAsC,MAAA,IAAI,EAAE,KAAKK,KAAL,CAAWL,KAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CAFF,CADF,CADF;AAaD;;AAvC2C;;AA0C9C,eAAeI,YAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport * as s__ from \"./style\";\r\nimport {SocketIOClient} from \"./../../modules/socketio-client/socketio-client\";\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\r\nimport ChartData from '../ChartData/index';\r\ntype State = typeof initState;\r\n\r\nconst initState = {\r\n  data_vn:{},\r\n  data_glo:{},\r\n  data_all:{},\r\n  data1:{\r\n    header:\"This is header\",\r\n    // xAsis:[1500, 1600, 1700, 1750, 1800, 1850, 1900, 1950, 1999, 2050],\r\n    datas:[{\r\n      labelName:\"A\",\r\n      data:[86, 114, 106, 106, 107, 111, 133, 221, 783, 2478],\r\n    },{\r\n      labelName:\"B\",\r\n      data:[282, 350, 411, 502, 635, 809, 947, 1402, 3700, 4267],\r\n    },{\r\n      labelName:\"C\",\r\n      data:[168, 170, 178, 190, 203, 276, 408, 547, 675, 734],\r\n    },{\r\n      labelName:\"D\",\r\n      data:[40, 20, 10, 16, 24, 38, 74, 167, 508, 784],\r\n    }]\r\n  },\r\n  data2:{\r\n    header:\"this is header\",\r\n    datainfo:\"Population (millions)\",\r\n    label: [\"Africa\",\"Asia\",\"Europe\",\"Latin America\",\"North America\"],\r\n    datasets:[{\r\n      data: [2478, 5267, 734, 784,432],\r\n    }]\r\n  } \r\n}\r\nclass ChartSection extends Component<{},State>{\r\n  state = initState;\r\n    \r\n  componentDidMount(){\r\n    let socket = new SocketIOClient();\r\n    socket.getDataVN((res:any)=>{\r\n      console.log(\"SOCKET:\",this.state);\r\n      this.setState({\r\n        data_vn:JSON.parse(res),\r\n      })\r\n    });\r\n    socket.getDataGlobal((res:any)=>{\r\n      console.log(\"SOCKET:\",JSON.parse(res),this.state);\r\n      this.setState({\r\n        data_glo: JSON.parse(res),\r\n      })\r\n    });\r\n    socket.getDataAll((res:any)=>{\r\n      console.log(\"SOCKET:\",JSON.parse(res),this.state);\r\n      this.setState({\r\n        data_all: JSON.parse(res),\r\n      })\r\n    });\r\n  }\r\n  render() {\r\n    // data={{dataLine:this.data1}}\r\n    return (\r\n      <s__.Footer>\r\n        <s__.Container>\r\n          <h2>Chart</h2>\r\n          <s__.ChartsPlace>\r\n            {/* <ChartData typeChart=\"Bar\" color={[]} data={this.state.data1}/> */}\r\n            <ChartData typeChart=\"Line\" color={[]} data={this.state.data1}/>\r\n            <ChartData typeChart=\"Doughnut\" color={[]} data={this.state.data2}/>\r\n            <ChartData typeChart=\"Bar\" color={[]} data={this.state.data2}/>\r\n          </s__.ChartsPlace>\r\n        </s__.Container>\r\n      </s__.Footer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ChartSection;\r\n"]},"metadata":{},"sourceType":"module"}