{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HSONNL\\\\Desktop\\\\myProject\\\\NCOV-19\\\\Repo\\\\NCOV-19Manager\\\\client\\\\src\\\\component\\\\GoogleMapReact\\\\index.tsx\";\nimport React, { Component } from \"react\";\nimport OlMap from \"ol/Map\";\nimport OlView from \"ol/View\";\nimport { OSM, Vector as VectorSource } from 'ol/source';\nimport { Tile as TileLayer, Vector as VectorLayer } from 'ol/layer';\nimport { Draw, Snap } from 'ol/interaction';\nimport { Point } from 'ol/geom';\nimport { Icon, Style } from 'ol/style';\nimport GeometryType from \"ol/geom/GeometryType\";\nimport { Feature } from \"ol\";\nimport IconAnchorUnits from \"ol/style/IconAnchorUnits\";\nimport { fromLonLat } from 'ol/proj';\nconst initState = {\n  center: fromLonLat([106.79666, 10.84811]),\n  zoom: 15,\n  feature: [],\n  olmap: new OlMap({\n    target: undefined,\n    layers: [new TileLayer({\n      source: new OSM()\n    }), new VectorLayer({\n      source: new VectorSource({\n        features: [new Feature(new Point([106.79663935413441, 10.84811849654838])), new Feature(new Point([100123, 10600]))]\n      }),\n      style: new Style({\n        image: new Icon({\n          anchor: [0.5, 46],\n          anchorXUnits: IconAnchorUnits.FRACTION,\n          anchorYUnits: IconAnchorUnits.PIXELS,\n          opacity: 0.95,\n          src: 'https://img.icons8.com/color/search'\n        })\n      })\n    })],\n    view: new OlView({\n      center: [0, 0],\n      zoom: 1\n    })\n  })\n};\n\nclass MyComponents extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = initState;\n    this.raster = new TileLayer({\n      source: new OSM()\n    });\n    this.olmap = new OlMap({\n      target: undefined,\n      layers: [this.raster, new VectorLayer({\n        source: new VectorSource({\n          // features: this.props.listPoint.map((value)=>(new Feature(new Point(fromLonLat([+value.x,+value.y]))))),\n          features: [new Feature(new Point(this.state.center))]\n        }),\n        style: new Style({\n          image: new Icon({\n            anchor: [0.5, 46],\n            anchorXUnits: IconAnchorUnits.FRACTION,\n            anchorYUnits: IconAnchorUnits.PIXELS,\n            opacity: 0.95,\n            src: \"https://img.icons8.com/doodle/48/000000/user-location.png\"\n          })\n        })\n      })],\n      view: new OlView({\n        center: this.state.center,\n        zoom: this.state.zoom\n      })\n    });\n    this.vector = new VectorLayer();\n    this.draw = new Draw({\n      source: new VectorSource({\n        features: this.props.listPoint.map(value => new Feature(new Point(fromLonLat([+value.x, +value.y]))))\n      }),\n      type: GeometryType.POINT\n    });\n    this.snap = new Snap();\n\n    this.setOLMAP = () => {\n      this.olmap.set('layers', [this.raster, new VectorLayer({\n        source: new VectorSource({\n          features: this.props.listPoint.map(value => new Feature(new Point(fromLonLat([+value.x, +value.y]))))\n        }),\n        style: new Style({\n          image: new Icon({\n            anchor: [0.5, 46],\n            anchorXUnits: IconAnchorUnits.FRACTION,\n            anchorYUnits: IconAnchorUnits.PIXELS,\n            opacity: 0.95,\n            src: 'https://img.icons8.com/color/search'\n          })\n        })\n      })], false);\n    };\n  }\n\n  reload() {\n    let vectorSource = new VectorSource({\n      features: this.props.listPoint.map(value => new Feature(new Point(fromLonLat([+value.x, +value.y]))))\n    });\n    let newLayer = new VectorLayer({\n      source: vectorSource\n    });\n    this.olmap.addLayer(newLayer);\n    vectorSource.once('change', () => {\n      console.log('remove');\n\n      if (this.vector) {\n        this.olmap.removeLayer(this.vector);\n      }\n\n      this.vector = newLayer;\n    });\n  }\n\n  componentDidMount() {\n    this.olmap.setTarget(\"map\");\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, this.setOLMAP(), React.createElement(\"div\", {\n      id: \"map\",\n      style: {\n        position: \"relative\",\n        width: \"100%\",\n        height: \"90%\",\n        borderRadius: \"5rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default MyComponents;","map":{"version":3,"sources":["C:/Users/HSONNL/Desktop/myProject/NCOV-19/Repo/NCOV-19Manager/client/src/component/GoogleMapReact/index.tsx"],"names":["React","Component","OlMap","OlView","OSM","Vector","VectorSource","Tile","TileLayer","VectorLayer","Draw","Snap","Point","Icon","Style","GeometryType","Feature","IconAnchorUnits","fromLonLat","initState","center","zoom","feature","olmap","target","undefined","layers","source","features","style","image","anchor","anchorXUnits","FRACTION","anchorYUnits","PIXELS","opacity","src","view","MyComponents","state","raster","vector","draw","props","listPoint","map","value","x","y","type","POINT","snap","setOLMAP","set","reload","vectorSource","newLayer","addLayer","once","console","log","removeLayer","componentDidMount","setTarget","render","position","width","height","borderRadius"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport OlMap from \"ol/Map\";\r\nimport OlView from \"ol/View\";\r\nimport OlLayerTile from \"ol/layer/Tile\";\r\nimport OlSourceOSM from \"ol/source/OSM\";\r\nimport {OSM, Vector as VectorSource} from 'ol/source';\r\nimport {Tile as TileLayer, Vector as VectorLayer} from 'ol/layer';\r\nimport {Draw,Snap} from 'ol/interaction';\r\nimport {LineString, Point, Polygon} from 'ol/geom';\r\nimport {Fill, Icon, Stroke, Style, Circle,} from 'ol/style';\r\nimport GeometryType from \"ol/geom/GeometryType\";\r\nimport ol, { Feature } from \"ol\";\r\nimport IconAnchorUnits from \"ol/style/IconAnchorUnits\";\r\nimport {fromLonLat} from 'ol/proj';\r\nimport LayerGroup from 'ol/layer/Group';\r\nimport Collection from 'ol/Collection';\r\ntype State = typeof initState;\r\nconst initState = {\r\n  center: fromLonLat([106.79666,10.84811]),\r\n  zoom: 15,\r\n  feature: [] as Feature<Point>[],\r\n  olmap: new OlMap({\r\n      target: undefined,\r\n      layers: [new TileLayer({source: new OSM()}),\r\n        new VectorLayer({\r\n          source: new VectorSource({\r\n            features: [new Feature(new Point([106.79663935413441,10.84811849654838])),new Feature(new Point([100123,10600]))],\r\n          }),\r\n          style: new Style({\r\n            image: new Icon({\r\n              anchor: [0.5, 46],\r\n              anchorXUnits: IconAnchorUnits.FRACTION,\r\n              anchorYUnits: IconAnchorUnits.PIXELS,\r\n              opacity: 0.95,\r\n              src: 'https://img.icons8.com/color/search'\r\n            }),\r\n          })\r\n        })\r\n      ],\r\n      view: new OlView({\r\n        center: [0,0],\r\n        zoom: 1\r\n      }),\r\n  })\r\n}\r\n\r\ninterface Location{\r\n  x:number,\r\n  y:number\r\n}\r\ninterface Props{\r\n  listPoint:Location[]\r\n}\r\nclass MyComponents extends Component<Props,State> {\r\n  state = initState;\r\n  raster = new TileLayer({\r\n    source: new OSM()\r\n  });\r\n\r\n  // source = new VectorSource({wrapX: false});\r\n  // vector = new VectorLayer({\r\n  //   source: this.source\r\n  // });\r\n  \r\n  olmap:OlMap = new OlMap({\r\n      target: undefined,\r\n      layers: [this.raster,\r\n        new VectorLayer({\r\n          source: new VectorSource({\r\n            // features: this.props.listPoint.map((value)=>(new Feature(new Point(fromLonLat([+value.x,+value.y]))))),\r\n            features: [new Feature(new Point((this.state.center)))]\r\n          }),\r\n          style: new Style({\r\n            image: new Icon({\r\n              anchor: [0.5, 46],\r\n              anchorXUnits: IconAnchorUnits.FRACTION,\r\n              anchorYUnits: IconAnchorUnits.PIXELS,\r\n              opacity: 0.95,\r\n              src: \"https://img.icons8.com/doodle/48/000000/user-location.png\"\r\n            }),\r\n          })\r\n        })\r\n      ],\r\n      view: new OlView({\r\n        center: this.state.center,\r\n        zoom: this.state.zoom\r\n      }),\r\n  })\r\n\r\n  vector:VectorLayer = new VectorLayer();\r\n  reload() {\r\n    let vectorSource = new VectorSource({\r\n      features: this.props.listPoint.map((value)=>(new Feature(new Point(fromLonLat([+value.x,+value.y])))))\r\n    })\r\n\r\n    let newLayer = new VectorLayer({\r\n      source: vectorSource\r\n    });\r\n    this.olmap.addLayer(newLayer);\r\n    vectorSource.once('change', ()=> {\r\n      console.log('remove')\r\n      if (this.vector) {\r\n        this.olmap.removeLayer(this.vector);\r\n      }\r\n      this.vector = newLayer;\r\n    });\r\n  }\r\n  \r\n  componentDidMount() {\r\n    this.olmap.setTarget(\"map\");\r\n  }\r\n\r\n  draw:Draw = new Draw({\r\n    source:new VectorSource({\r\n            features: this.props.listPoint.map((value)=>(new Feature(new Point(fromLonLat([+value.x,+value.y]))))),\r\n          }),\r\n      type: GeometryType.POINT\r\n  });\r\n  snap = new Snap();\r\n  setOLMAP = () =>{\r\n    this.olmap.set('layers',[this.raster,\r\n        new VectorLayer({\r\n          source: new VectorSource({\r\n            features: this.props.listPoint.map((value)=>(new Feature(new Point(fromLonLat([+value.x,+value.y]))))),\r\n          }),\r\n          style: new Style({\r\n            image: new Icon({\r\n              anchor: [0.5, 46],\r\n              anchorXUnits: IconAnchorUnits.FRACTION,\r\n              anchorYUnits: IconAnchorUnits.PIXELS,\r\n              opacity: 0.95,\r\n              src: 'https://img.icons8.com/color/search'\r\n            }),\r\n          })\r\n        })\r\n      ],false\r\n    )\r\n  }\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {this.setOLMAP()}\r\n        <div id=\"map\" style={{position:\"relative\", width: \"100%\", height: \"90%\", borderRadius: \"5rem\",}}></div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MyComponents;"]},"metadata":{},"sourceType":"module"}