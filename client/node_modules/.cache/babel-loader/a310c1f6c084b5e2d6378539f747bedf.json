{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HSONNL\\\\Desktop\\\\myProject\\\\NCOV-19\\\\Repo\\\\NCOV-19Manager\\\\client\\\\src\\\\component\\\\GoogleMapReact\\\\index.tsx\";\n// import React, { Component } from 'react';\n// import GoogleMapReact from 'google-map-react';\n// const AnyReactComponent = ({ text }) => <div>{text}</div>;\n// class SimpleMap extends Component {\n//   render() {\n//     return (\n//       // Important! Always set the container height explicitly\n//       <div style={{ height: '100vh', width: '100%' }}>\n//         <GoogleMapReact\n//           bootstrapURLKeys=\"AIzaSyBDGR6kCXWTIGF3zKlp9JQRqvoUC2-Ti-Y\"\n//         >\n//           <AnyReactComponent\n//             lat={59.955413}\n//             lng={30.337844}\n//             text=\"My Marker\"\n//           />\n//         </GoogleMapReact>\n//       </div>\n//     );\n//   }\n// }\n// export default SimpleMap;\n// import {Map, InfoWindow, Marker, GoogleApiWrapper} from 'google-maps-react';\n// import React , {Component}from 'react'\n// import { GoogleMap, LoadScript } from '@react-google-maps/api';\n// class MyComponent extends Component<{},{}> {\n//   render(){\n//     return (\n//     <Map google={this.props.google} zoom={14}>\n//         <Marker onClick={this.onMarkerClick}\n//                 name={'Current location'} />\n//         <InfoWindow onClose={this.onInfoWindowClose}>\n//             {/* <div>\n//               <h1>{this.state.selectedPlace.name}</h1>\n//             </div> */}\n//         </InfoWindow>\n//       </Map>\n//     )\n//   }\n// }\n// // export default React.memo(MyComponent)\n// export default GoogleApiWrapper({\n//   apiKey: (\"YOUR_GOOGLE_API_KEY_GOES_HERE\")\n// })(MyComponent)\nimport GoogleMapReact from 'google-map-react';\nimport React, { Component } from 'react';\nconst center = {\n  lat: 0,\n  lng: 0\n};\nconst key = {\n  key: 'AIzaSyBDGR6kCXWTIGF3zKlp9JQRqvoUC2-Ti-Y',\n  libraries: \"places\"\n};\nconst client = {\n  client: 'my-client-identifier',\n  v: '3.28',\n  language: 'en',\n  libraries: \"places\",\n  region: \"PR\"\n};\nconst options = {\n  zoomControl: false,\n  gestureHandling: 'cooperative',\n  styles: [{\n    featureType: \"administrative\",\n    elementType: \"all\",\n    stylers: [{\n      saturation: \"-100\"\n    }]\n  }, {\n    featureType: \"administrative.neighborhood\",\n    stylers: [{\n      visibility: \"off\"\n    }]\n  }, {\n    elementType: \"labels.text.stroke\",\n    stylers: [{\n      color: \"#242f3e\"\n    }]\n  }, {\n    stylers: [{\n      color: \"#fcfffd\"\n    }]\n  }]\n};\nexport default class MyComponent extends Component {\n  render() {\n    return React.createElement(GoogleMapReact, {\n      key: 'AIzaSyBDGR6kCXWTIGF3zKlp9JQRqvoUC2-Ti-Y',\n      center: center,\n      heatmapLibrary: true,\n      zoom: 3,\n      bootstrapURLKeys: client,\n      options: options,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    });\n  }\n\n}","map":{"version":3,"sources":["C:/Users/HSONNL/Desktop/myProject/NCOV-19/Repo/NCOV-19Manager/client/src/component/GoogleMapReact/index.tsx"],"names":["GoogleMapReact","React","Component","center","lat","lng","key","libraries","client","v","language","region","options","zoomControl","gestureHandling","styles","featureType","elementType","stylers","saturation","visibility","color","MyComponent","render"],"mappings":";AAAA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA,OAAOA,cAAP,MAA6D,kBAA7D;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAA+B,OAA/B;AACA,MAAMC,MAAM,GAAG;AAAEC,EAAAA,GAAG,EAAE,CAAP;AAAUC,EAAAA,GAAG,EAAE;AAAf,CAAf;AAEA,MAAMC,GAAqB,GAAG;AAAEA,EAAAA,GAAG,EAAE,yCAAP;AAAkDC,EAAAA,SAAS,EAAE;AAA7D,CAA9B;AACA,MAAMC,MAAwB,GAAG;AAAEA,EAAAA,MAAM,EAAE,sBAAV;AAAkCC,EAAAA,CAAC,EAAE,MAArC;AAA8CC,EAAAA,QAAQ,EAAE,IAAxD;AAA8DH,EAAAA,SAAS,EAAE,QAAzE;AAAmFI,EAAAA,MAAM,EAAE;AAA3F,CAAjC;AACA,MAAMC,OAAmB,GAAG;AACxBC,EAAAA,WAAW,EAAE,KADW;AAExBC,EAAAA,eAAe,EAAE,aAFO;AAGxBC,EAAAA,MAAM,EAAE,CACJ;AACIC,IAAAA,WAAW,EAAE,gBADjB;AAEIC,IAAAA,WAAW,EAAE,KAFjB;AAGIC,IAAAA,OAAO,EAAE,CAAE;AAACC,MAAAA,UAAU,EAAE;AAAb,KAAF;AAHb,GADI,EAMJ;AACIH,IAAAA,WAAW,EAAE,6BADjB;AAEIE,IAAAA,OAAO,EAAE,CAAE;AAACE,MAAAA,UAAU,EAAE;AAAb,KAAF;AAFb,GANI,EAUJ;AACIH,IAAAA,WAAW,EAAE,oBADjB;AAEIC,IAAAA,OAAO,EAAE,CAAE;AAACG,MAAAA,KAAK,EAAE;AAAR,KAAF;AAFb,GAVI,EAcJ;AACIH,IAAAA,OAAO,EAAE,CAAE;AAACG,MAAAA,KAAK,EAAE;AAAR,KAAF;AADb,GAdI;AAHgB,CAA5B;AAsBA,eAAe,MAAMC,WAAN,SAA0BpB,SAA1B,CAA0C;AACvDqB,EAAAA,MAAM,GAAE;AACN,WACE,oBAAC,cAAD;AAAgB,MAAA,GAAG,EAAE,yCAArB;AAAgE,MAAA,MAAM,EAAEpB,MAAxE;AAAgF,MAAA,cAAc,EAAE,IAAhG;AAAsG,MAAA,IAAI,EAAE,CAA5G;AAA+G,MAAA,gBAAgB,EAAEK,MAAjI;AAAyI,MAAA,OAAO,EAAEI,OAAlJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD;;AALsD","sourcesContent":["// import React, { Component } from 'react';\r\n// import GoogleMapReact from 'google-map-react';\r\n \r\n// const AnyReactComponent = ({ text }) => <div>{text}</div>;\r\n \r\n// class SimpleMap extends Component {\r\n \r\n//   render() {\r\n//     return (\r\n//       // Important! Always set the container height explicitly\r\n//       <div style={{ height: '100vh', width: '100%' }}>\r\n//         <GoogleMapReact\r\n//           bootstrapURLKeys=\"AIzaSyBDGR6kCXWTIGF3zKlp9JQRqvoUC2-Ti-Y\"\r\n//         >\r\n//           <AnyReactComponent\r\n//             lat={59.955413}\r\n//             lng={30.337844}\r\n//             text=\"My Marker\"\r\n//           />\r\n//         </GoogleMapReact>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n \r\n// export default SimpleMap;\r\n// import {Map, InfoWindow, Marker, GoogleApiWrapper} from 'google-maps-react';\r\n\r\n// import React , {Component}from 'react'\r\n// import { GoogleMap, LoadScript } from '@react-google-maps/api';\r\n// class MyComponent extends Component<{},{}> {\r\n//   render(){\r\n//     return (\r\n//     <Map google={this.props.google} zoom={14}>\r\n \r\n//         <Marker onClick={this.onMarkerClick}\r\n//                 name={'Current location'} />\r\n \r\n//         <InfoWindow onClose={this.onInfoWindowClose}>\r\n//             {/* <div>\r\n//               <h1>{this.state.selectedPlace.name}</h1>\r\n//             </div> */}\r\n//         </InfoWindow>\r\n//       </Map>\r\n//     )\r\n//   }\r\n// }\r\n\r\n// // export default React.memo(MyComponent)\r\n// export default GoogleApiWrapper({\r\n//   apiKey: (\"YOUR_GOOGLE_API_KEY_GOES_HERE\")\r\n// })(MyComponent)\r\n\r\nimport GoogleMapReact, { BootstrapURLKeys, MapOptions } from 'google-map-react';\r\nimport React , {Component}from 'react'\r\nconst center = { lat: 0, lng: 0 };\r\n\r\nconst key: BootstrapURLKeys = { key: 'AIzaSyBDGR6kCXWTIGF3zKlp9JQRqvoUC2-Ti-Y', libraries: \"places\" };\r\nconst client: BootstrapURLKeys = { client: 'my-client-identifier', v: '3.28' , language: 'en', libraries: \"places\", region: \"PR\" };\r\nconst options: MapOptions = {\r\n    zoomControl: false,\r\n    gestureHandling: 'cooperative',\r\n    styles: [\r\n        {\r\n            featureType: \"administrative\",\r\n            elementType: \"all\",\r\n            stylers: [ {saturation: \"-100\"} ]\r\n        },\r\n        {\r\n            featureType: \"administrative.neighborhood\",\r\n            stylers: [ {visibility: \"off\" } ]\r\n        },\r\n        {\r\n            elementType: \"labels.text.stroke\",\r\n            stylers: [ {color: \"#242f3e\"} ]\r\n        },\r\n        {\r\n            stylers: [ {color: \"#fcfffd\"} ]\r\n        }\r\n    ],\r\n};\r\nexport default class MyComponent extends Component<{},{}>{\r\n  render(){\r\n    return(\r\n      <GoogleMapReact key={'AIzaSyBDGR6kCXWTIGF3zKlp9JQRqvoUC2-Ti-Y'} center={center} heatmapLibrary={true} zoom={3} bootstrapURLKeys={client} options={options} />\r\n    )\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}