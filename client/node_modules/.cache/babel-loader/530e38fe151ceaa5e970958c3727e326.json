{"ast":null,"code":"// import React, { Component } from \"react\";\n// import OlMap from \"ol/Map\";\n// import OlView from \"ol/View\";\n// import OlLayerTile from \"ol/layer/Tile\";\n// import OlSourceOSM from \"ol/source/OSM\";\n// type State = typeof initState;\n// const initState = {\n//   center: [0, 0], zoom: 1\n// }\n// class MyComponents extends Component<{},State> {\n//   state = initState;\n//   olmap:OlMap = new OlMap({\n//       target: \"\",\n//       layers: [\n//         new OlLayerTile({\n//           source: new OlSourceOSM()\n//         })\n//       ],\n//       view: new OlView({\n//         center: this.state.center,\n//         zoom: this.state.zoom\n//       })\n//   })\n//   updateMap = () => {\n//     this.olmap.getView().setCenter(this.state.center);\n//     this.olmap.getView().setZoom(this.state.zoom);\n//   }\n//   componentDidMount() {\n//     this.olmap.setTarget(\"map\");\n//     // Listen to map changes\n//     this.olmap.on(\"moveend\", () => {\n//       let center = this.olmap.getView().getCenter();\n//       let zoom = this.olmap.getView().getZoom();\n//       this.setState({ center, zoom });\n//     });\n//   }\n//   shouldComponentUpdate(nextProps:any, nextState:any) {\n//     let center = this.olmap.getView().getCenter();\n//     let zoom = this.olmap.getView().getZoom();\n//     if (center === nextState.center && zoom === nextState.zoom) return false;\n//     return true;\n//   }\n//   userAction() {\n//     this.setState({ center: [546000, 6868000], zoom: 5 });\n//   }\n//   render() {\n//     this.updateMap(); // Update map on render?\n//     return (\n//       <div id=\"map\" style={{ width: \"100%\", height: \"100vh\" }}>\n//         <button onClick={e => this.userAction()}>setState on click</button>\n//       </div>\n//     );\n//   }\n// }\n// export default MyComponents;","map":{"version":3,"sources":["C:/Users/HSONNL/Desktop/myProject/NCOV-19/Repo/NCOV-19Manager/client/src/component/GoogleMapReact/index.tsx"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["// import React, { Component } from \"react\";\r\n// import OlMap from \"ol/Map\";\r\n// import OlView from \"ol/View\";\r\n// import OlLayerTile from \"ol/layer/Tile\";\r\n// import OlSourceOSM from \"ol/source/OSM\";\r\n// type State = typeof initState;\r\n// const initState = {\r\n//   center: [0, 0], zoom: 1\r\n// }\r\n// class MyComponents extends Component<{},State> {\r\n//   state = initState;\r\n\r\n//   olmap:OlMap = new OlMap({\r\n//       target: \"\",\r\n//       layers: [\r\n//         new OlLayerTile({\r\n//           source: new OlSourceOSM()\r\n//         })\r\n//       ],\r\n//       view: new OlView({\r\n//         center: this.state.center,\r\n//         zoom: this.state.zoom\r\n//       })\r\n//   })\r\n\r\n//   updateMap = () => {\r\n//     this.olmap.getView().setCenter(this.state.center);\r\n//     this.olmap.getView().setZoom(this.state.zoom);\r\n//   }\r\n\r\n//   componentDidMount() {\r\n//     this.olmap.setTarget(\"map\");\r\n\r\n//     // Listen to map changes\r\n//     this.olmap.on(\"moveend\", () => {\r\n//       let center = this.olmap.getView().getCenter();\r\n//       let zoom = this.olmap.getView().getZoom();\r\n//       this.setState({ center, zoom });\r\n//     });\r\n//   }\r\n\r\n//   shouldComponentUpdate(nextProps:any, nextState:any) {\r\n//     let center = this.olmap.getView().getCenter();\r\n//     let zoom = this.olmap.getView().getZoom();\r\n//     if (center === nextState.center && zoom === nextState.zoom) return false;\r\n//     return true;\r\n//   }\r\n\r\n//   userAction() {\r\n//     this.setState({ center: [546000, 6868000], zoom: 5 });\r\n//   }\r\n\r\n//   render() {\r\n//     this.updateMap(); // Update map on render?\r\n//     return (\r\n//       <div id=\"map\" style={{ width: \"100%\", height: \"100vh\" }}>\r\n//         <button onClick={e => this.userAction()}>setState on click</button>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default MyComponents;"]},"metadata":{},"sourceType":"module"}