{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HSONNL\\\\Desktop\\\\myProject\\\\NCOV-19\\\\Repo\\\\NCOV-19Manager\\\\client\\\\src\\\\component\\\\GoogleMapReact\\\\index.tsx\";\nimport React, { Component } from \"react\";\nimport OlMap from \"ol/Map\";\nimport OlView from \"ol/View\";\nconst initState = {\n  center: [0, 0],\n  zoom: 1\n};\n\nclass MyComponents extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = initState;\n    this.olmap = new OlMap({\n      target: undefined,\n      // layers: [\n      //   new OlLayerTile({\n      //     source: new OlSourceOSM()\n      //   })\n      // ],\n      view: new OlView({\n        center: this.state.center,\n        zoom: this.state.zoom\n      })\n    });\n\n    this.updateMap = () => {\n      this.olmap.getView().setCenter(this.state.center);\n      this.olmap.getView().setZoom(this.state.zoom);\n    };\n  }\n\n  componentDidMount() {\n    this.olmap.setTarget(\"map\"); // Listen to map changes\n\n    this.olmap.on(\"moveend\", () => {\n      let center = this.olmap.getView().getCenter();\n      let zoom = this.olmap.getView().getZoom();\n      this.setState({\n        center,\n        zoom\n      });\n    });\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    let center = this.olmap.getView().getCenter();\n    let zoom = this.olmap.getView().getZoom();\n    if (center === nextState.center && zoom === nextState.zoom) return false;\n    return true;\n  }\n\n  userAction() {\n    this.setState({\n      center: [546000, 6868000],\n      zoom: 5\n    });\n  }\n\n  render() {\n    this.updateMap(); // Update map on render?\n\n    return React.createElement(\"div\", {\n      id: \"map\",\n      style: {\n        width: \"100%\",\n        height: \"100vh\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: e => this.userAction(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"setState on click\"));\n  }\n\n}\n\nexport default MyComponents;","map":{"version":3,"sources":["C:/Users/HSONNL/Desktop/myProject/NCOV-19/Repo/NCOV-19Manager/client/src/component/GoogleMapReact/index.tsx"],"names":["React","Component","OlMap","OlView","initState","center","zoom","MyComponents","state","olmap","target","undefined","view","updateMap","getView","setCenter","setZoom","componentDidMount","setTarget","on","getCenter","getZoom","setState","shouldComponentUpdate","nextProps","nextState","userAction","render","width","height","e"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,QAAlB;AACA,OAAOC,MAAP,MAAmB,SAAnB;AAIA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,MAAM,EAAE,CAAC,CAAD,EAAI,CAAJ,CADQ;AACAC,EAAAA,IAAI,EAAE;AADN,CAAlB;;AAGA,MAAMC,YAAN,SAA2BN,SAA3B,CAA+C;AAAA;AAAA;AAAA,SAC7CO,KAD6C,GACrCJ,SADqC;AAAA,SAG7CK,KAH6C,GAG/B,IAAIP,KAAJ,CAAU;AACpBQ,MAAAA,MAAM,EAAEC,SADY;AAEpB;AACA;AACA;AACA;AACA;AACAC,MAAAA,IAAI,EAAE,IAAIT,MAAJ,CAAW;AACfE,QAAAA,MAAM,EAAE,KAAKG,KAAL,CAAWH,MADJ;AAEfC,QAAAA,IAAI,EAAE,KAAKE,KAAL,CAAWF;AAFF,OAAX;AAPc,KAAV,CAH+B;;AAAA,SAgB7CO,SAhB6C,GAgBjC,MAAM;AAChB,WAAKJ,KAAL,CAAWK,OAAX,GAAqBC,SAArB,CAA+B,KAAKP,KAAL,CAAWH,MAA1C;AACA,WAAKI,KAAL,CAAWK,OAAX,GAAqBE,OAArB,CAA6B,KAAKR,KAAL,CAAWF,IAAxC;AACD,KAnB4C;AAAA;;AAqB7CW,EAAAA,iBAAiB,GAAG;AAClB,SAAKR,KAAL,CAAWS,SAAX,CAAqB,KAArB,EADkB,CAElB;;AACA,SAAKT,KAAL,CAAWU,EAAX,CAAc,SAAd,EAAyB,MAAM;AAC7B,UAAId,MAAM,GAAG,KAAKI,KAAL,CAAWK,OAAX,GAAqBM,SAArB,EAAb;AACA,UAAId,IAAI,GAAG,KAAKG,KAAL,CAAWK,OAAX,GAAqBO,OAArB,EAAX;AACA,WAAKC,QAAL,CAAc;AAAEjB,QAAAA,MAAF;AAAUC,QAAAA;AAAV,OAAd;AACD,KAJD;AAKD;;AAEDiB,EAAAA,qBAAqB,CAACC,SAAD,EAAgBC,SAAhB,EAA+B;AAClD,QAAIpB,MAAM,GAAG,KAAKI,KAAL,CAAWK,OAAX,GAAqBM,SAArB,EAAb;AACA,QAAId,IAAI,GAAG,KAAKG,KAAL,CAAWK,OAAX,GAAqBO,OAArB,EAAX;AACA,QAAIhB,MAAM,KAAKoB,SAAS,CAACpB,MAArB,IAA+BC,IAAI,KAAKmB,SAAS,CAACnB,IAAtD,EAA4D,OAAO,KAAP;AAC5D,WAAO,IAAP;AACD;;AAEDoB,EAAAA,UAAU,GAAG;AACX,SAAKJ,QAAL,CAAc;AAAEjB,MAAAA,MAAM,EAAE,CAAC,MAAD,EAAS,OAAT,CAAV;AAA6BC,MAAAA,IAAI,EAAE;AAAnC,KAAd;AACD;;AAEDqB,EAAAA,MAAM,GAAG;AACP,SAAKd,SAAL,GADO,CACW;;AAClB,WACE;AAAK,MAAA,EAAE,EAAC,KAAR;AAAc,MAAA,KAAK,EAAE;AAAEe,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,MAAM,EAAE;AAAzB,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,OAAO,EAAEC,CAAC,IAAI,KAAKJ,UAAL,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,CADF;AAKD;;AAjD4C;;AAoD/C,eAAenB,YAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport OlMap from \"ol/Map\";\r\nimport OlView from \"ol/View\";\r\nimport OlLayerTile from \"ol/layer/Tile\";\r\nimport OlSourceOSM from \"ol/source/OSM\";\r\ntype State = typeof initState;\r\nconst initState = {\r\n  center: [0, 0], zoom: 1\r\n}\r\nclass MyComponents extends Component<{},State> {\r\n  state = initState;\r\n\r\n  olmap:OlMap = new OlMap({\r\n      target: undefined,\r\n      // layers: [\r\n      //   new OlLayerTile({\r\n      //     source: new OlSourceOSM()\r\n      //   })\r\n      // ],\r\n      view: new OlView({\r\n        center: this.state.center,\r\n        zoom: this.state.zoom\r\n      })\r\n  })\r\n\r\n  updateMap = () => {\r\n    this.olmap.getView().setCenter(this.state.center);\r\n    this.olmap.getView().setZoom(this.state.zoom);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.olmap.setTarget(\"map\");\r\n    // Listen to map changes\r\n    this.olmap.on(\"moveend\", () => {\r\n      let center = this.olmap.getView().getCenter();\r\n      let zoom = this.olmap.getView().getZoom();\r\n      this.setState({ center, zoom });\r\n    });\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps:any, nextState:any) {\r\n    let center = this.olmap.getView().getCenter();\r\n    let zoom = this.olmap.getView().getZoom();\r\n    if (center === nextState.center && zoom === nextState.zoom) return false;\r\n    return true;\r\n  }\r\n\r\n  userAction() {\r\n    this.setState({ center: [546000, 6868000], zoom: 5 });\r\n  }\r\n\r\n  render() {\r\n    this.updateMap(); // Update map on render?\r\n    return (\r\n      <div id=\"map\" style={{ width: \"100%\", height: \"100vh\" }}>\r\n        <button onClick={e => this.userAction()}>setState on click</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MyComponents;"]},"metadata":{},"sourceType":"module"}