{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HSONNL\\\\Desktop\\\\myProject\\\\NCOV-19\\\\Repo\\\\NCOV-19Manager\\\\client\\\\src\\\\component\\\\InfoTable\\\\index.tsx\";\nimport React, { Component } from \"react\"; //style importer\n\nimport * as s__ from \"./style\";\n// import Button from '@material-ui/core/Button';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow'; //component importer\n// import MainMenu from \"../MainMenu/index\";\n//utils importer\n\nimport RoomAPI from \"../../modules/api/room\"; //config importer\n\nimport { Button } from \"@material-ui/core\"; //global store\n\nimport { connect } from 'react-redux';\nconst initState = {\n  room: [],\n  patient: [],\n  shift: [],\n  currentId: ''\n};\n\nclass InfoTable extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = initState;\n    this.roomApi = new RoomAPI();\n\n    this.getAllRoom = () => {\n      const token = this.props.UsersState.token;\n\n      if (token) {\n        this.roomApi.getAll(token, res => {\n          console.log(res.data.room); // this.setState({\n          //   room:res.data.room\n          // })\n        }, err => {\n          console.log(err);\n        });\n      }\n\n      console.log('dang nhap that bai');\n    };\n\n    this.getKey = currentId => {\n      this.setState({\n        currentId\n      });\n    };\n\n    this.InsertCurrent = () => {};\n\n    this.DeleteCurrent = () => {};\n\n    this.UpdateCurrent = () => {};\n\n    this.GetUsers = () => {};\n\n    this.renderButton = () => {\n      return React.createElement(\"div\", {\n        style: {\n          backgroundColor: \"mediumspringgreen\",\n          height: \"auto\",\n          borderTopRightRadius: \"5px\",\n          borderTopLeftRadius: \"5px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        style: {\n          marginTop: \"0px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"Patient\"), React.createElement(Button, {\n        onClick: this.UpdateCurrent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"Update\"), React.createElement(Button, {\n        onClick: this.GetUsers,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"Search\"));\n    };\n\n    this.renderChildTableRoom = () => {\n      return this.state.room.map(row => React.createElement(s__.TableRowInfo, {\n        key: row._id,\n        onClick: () => this.getKey(row._id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, row.name), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, row.currentNumber), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, row.maxNumber), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, row.address)));\n    };\n\n    this.renderGrid = () => {\n      return React.createElement(\"div\", {\n        style: {\n          backgroundColor: \"lightcyan\",\n          overflow: \"auto\",\n          height: \"300px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(Table, {\n        size: \"small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(TableHead, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(TableRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, \"Date\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"Name\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"Ship To\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \"Payment Method\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"Address\"))), React.createElement(TableBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, this.renderChildTableRoom()))));\n    };\n\n    this.renderPaper = () => {\n      return React.createElement(\"div\", {\n        style: {\n          backgroundColor: \"mediumspringgreen\",\n          height: \"auto\",\n          borderBottomRightRadius: \"5px\",\n          borderBottomLeftRadius: \"5px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        style: {\n          margin: \"0px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, \"Ph\\xE2n trang : 1-2-3\"));\n    };\n  }\n\n  componentDidMount() {\n    this.getAllRoom();\n  }\n\n  render() {\n    return React.createElement(s__.Container, {\n      style: {\n        paddingBottom: \"0px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, this.renderButton(), this.renderGrid(), this.renderPaper()));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  UsersState: state.UsersState\n});\n\nexport default connect(mapStateToProps, {})(InfoTable);","map":{"version":3,"sources":["C:/Users/HSONNL/Desktop/myProject/NCOV-19/Repo/NCOV-19Manager/client/src/component/InfoTable/index.tsx"],"names":["React","Component","s__","Table","TableBody","TableCell","TableHead","TableRow","RoomAPI","Button","connect","initState","room","patient","shift","currentId","InfoTable","state","roomApi","getAllRoom","token","props","UsersState","getAll","res","console","log","data","err","getKey","setState","InsertCurrent","DeleteCurrent","UpdateCurrent","GetUsers","renderButton","backgroundColor","height","borderTopRightRadius","borderTopLeftRadius","marginTop","renderChildTableRoom","map","row","_id","name","currentNumber","maxNumber","address","renderGrid","overflow","renderPaper","borderBottomRightRadius","borderBottomLeftRadius","margin","componentDidMount","render","paddingBottom","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,OAAO,KAAKC,GAAZ,MAAqB,SAArB;AAIA;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB,C,CACA;AACA;AACA;;AACA,OAAOC,OAAP,MAAoB,wBAApB,C,CACA;;AAEA,SAASC,MAAT,QAAuB,mBAAvB,C,CACA;;AACA,SAASC,OAAT,QAAwB,aAAxB;AAWA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,IAAI,EAAE,EADU;AAEhBC,EAAAA,OAAO,EAAE,EAFO;AAGhBC,EAAAA,KAAK,EAAC,EAHU;AAIhBC,EAAAA,SAAS,EAAE;AAJK,CAAlB;;AAOA,MAAMC,SAAN,SAAwBf,SAAxB,CAAgD;AAAA;AAAA;AAAA,SAE9CgB,KAF8C,GAEtCN,SAFsC;AAAA,SAG9CO,OAH8C,GAGpC,IAAIV,OAAJ,EAHoC;;AAAA,SAS9CW,UAT8C,GASjC,MAAK;AAChB,YAAMC,KAAK,GAAG,KAAKC,KAAL,CAAWC,UAAX,CAAsBF,KAApC;;AACA,UAAGA,KAAH,EAAS;AACP,aAAKF,OAAL,CAAaK,MAAb,CAAoBH,KAApB,EAA2BI,GAAD,IAAW;AACnCC,UAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAJ,CAASf,IAArB,EADmC,CAEnC;AACA;AACA;AACD,SALD,EAMCgB,GAAD,IAAc;AACZH,UAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACD,SARD;AASD;;AACDH,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACD,KAvB6C;;AAAA,SAyB9CG,MAzB8C,GAyBtCd,SAAD,IAAoB;AACzB,WAAKe,QAAL,CAAc;AACZf,QAAAA;AADY,OAAd;AAGD,KA7B6C;;AAAA,SA+B9CgB,aA/B8C,GA+B9B,MAAM,CAErB,CAjC6C;;AAAA,SAmC9CC,aAnC8C,GAmC9B,MAAM,CAErB,CArC6C;;AAAA,SAuC9CC,aAvC8C,GAuC9B,MAAM,CAErB,CAzC6C;;AAAA,SA2C9CC,QA3C8C,GA2CnC,MAAM,CAEhB,CA7C6C;;AAAA,SA+C9CC,YA/C8C,GA+ChC,MAAK;AACjB,aACE;AAAK,QAAA,KAAK,EAAE;AACVC,UAAAA,eAAe,EAAC,mBADN;AAEVC,UAAAA,MAAM,EAAC,MAFG;AAGVC,UAAAA,oBAAoB,EAAC,KAHX;AAIVC,UAAAA,mBAAmB,EAAC;AAJV,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOE;AAAI,QAAA,KAAK,EAAE;AAACC,UAAAA,SAAS,EAAC;AAAX,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAPF,EAUE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKP,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVF,EAWE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKC,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAXF,CADF;AAgBD,KAhE6C;;AAAA,SAkE9CO,oBAlE8C,GAkEvB,MAAM;AAC3B,aAAO,KAAKxB,KAAL,CAAWL,IAAX,CAAgB8B,GAAhB,CAAqBC,GAAD,IACzB,oBAAC,GAAD,CAAK,YAAL;AAAkB,QAAA,GAAG,EAAEA,GAAG,CAACC,GAA3B;AAAgC,QAAA,OAAO,EAAE,MAAI,KAAKf,MAAL,CAAYc,GAAG,CAACC,GAAhB,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAYD,GAAG,CAACE,IAAhB,CADF,EAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAYF,GAAG,CAACG,aAAhB,CAFF,EAGE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAYH,GAAG,CAACI,SAAhB,CAHF,EAIE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAaJ,GAAG,CAACK,OAAjB,CAJF,CADK,CAAP;AASD,KA5E6C;;AAAA,SA8E9CC,UA9E8C,GA8EjC,MAAK;AAChB,aACA;AAAK,QAAA,KAAK,EAAE;AAACb,UAAAA,eAAe,EAAC,WAAjB;AAA6Bc,UAAAA,QAAQ,EAAC,MAAtC;AAA6Cb,UAAAA,MAAM,EAAC;AAApD,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,EAGE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHF,EAIE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAJF,EAKE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBALF,CADF,CADF,EAUE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKI,oBAAL,EADH,CAVF,CADF,CADF,CADA;AAoBD,KAnG6C;;AAAA,SAqG9CU,WArG8C,GAqGhC,MAAK;AACjB,aACE;AAAK,QAAA,KAAK,EAAE;AACVf,UAAAA,eAAe,EAAC,mBADN;AAEVC,UAAAA,MAAM,EAAC,MAFG;AAGVe,UAAAA,uBAAuB,EAAC,KAHd;AAIVC,UAAAA,sBAAsB,EAAC;AAJb,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOE;AAAG,QAAA,KAAK,EAAE;AAACC,UAAAA,MAAM,EAAC;AAAR,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAPF,CADF;AAWD,KAjH6C;AAAA;;AAK9CC,EAAAA,iBAAiB,GAAE;AACjB,SAAKpC,UAAL;AACD;;AA4GDqC,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,GAAD,CAAK,SAAL;AAAe,MAAA,KAAK,EAAE;AAACC,QAAAA,aAAa,EAAC;AAAf,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKtB,YAAL,EADH,EAEG,KAAKc,UAAL,EAFH,EAGG,KAAKE,WAAL,EAHH,CADF,CADF;AASD;;AA7H6C;;AAgIhD,MAAMO,eAAe,GAAIzC,KAAD,KAAqB;AAC3CK,EAAAA,UAAU,EAAEL,KAAK,CAACK;AADyB,CAArB,CAAxB;;AAGA,eAAeZ,OAAO,CAACgD,eAAD,EAAiB,EAAjB,CAAP,CAA4B1C,SAA5B,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\n//style importer\r\nimport * as s__ from \"./style\";\r\n\r\nimport Link from '@material-ui/core/Link';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n// import Button from '@material-ui/core/Button';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n//component importer\r\n// import MainMenu from \"../MainMenu/index\";\r\n//utils importer\r\nimport RoomAPI from \"../../modules/api/room\";\r\n//config importer\r\nimport * as c__ from \"../../config/component\";\r\nimport { Button } from \"@material-ui/core\";\r\n//global store\r\nimport { connect } from 'react-redux';\r\nimport {MainState} from '../../store/index';\r\n//type\r\nimport {UsersState} from '../../store/User/type';\r\n\r\n\r\ninterface Props {\r\n  UsersState: UsersState\r\n}\r\n\r\ntype State =  typeof initState;\r\nconst initState = {\r\n  room: [] as c__.Room[],\r\n  patient: [] as c__.Patient[],\r\n  shift:[] as any[],\r\n  currentId: '',\r\n}\r\n\r\nclass InfoTable extends Component<Props, State> {\r\n\r\n  state = initState;\r\n  roomApi = new RoomAPI();\r\n\r\n  componentDidMount(){\r\n    this.getAllRoom();\r\n  }\r\n\r\n  getAllRoom = () =>{\r\n    const token = this.props.UsersState.token;\r\n    if(token){\r\n      this.roomApi.getAll(token,(res:any)=>{\r\n        console.log(res.data.room);\r\n        // this.setState({\r\n        //   room:res.data.room\r\n        // })\r\n      }, \r\n      (err:string)=>{\r\n        console.log(err);\r\n      })\r\n    }\r\n    console.log('dang nhap that bai');\r\n  }\r\n\r\n  getKey=(currentId:string)=>{\r\n    this.setState({\r\n      currentId\r\n    })\r\n  }\r\n\r\n  InsertCurrent = () => {\r\n\r\n  }\r\n\r\n  DeleteCurrent = () => {\r\n    \r\n  }\r\n\r\n  UpdateCurrent = () => {\r\n    \r\n  }\r\n\r\n  GetUsers = () => {\r\n    \r\n  }\r\n\r\n  renderButton= () =>{\r\n    return (\r\n      <div style={{\r\n        backgroundColor:\"mediumspringgreen\",\r\n        height:\"auto\",\r\n        borderTopRightRadius:\"5px\", \r\n        borderTopLeftRadius:\"5px\"\r\n        }}\r\n      >\r\n        <h1 style={{marginTop:\"0px\"}}>Patient</h1>\r\n        {/* <Button onClick={this.InsertCurrent}>Insert</Button> */}\r\n        {/* <Button onClick={this.DeleteCurrent}>Delete</Button> */}\r\n        <Button onClick={this.UpdateCurrent}>Update</Button>\r\n        <Button onClick={this.GetUsers}>Search</Button>\r\n      </div>\r\n      \r\n    )\r\n  }\r\n\r\n  renderChildTableRoom = () => {\r\n    return this.state.room.map((row) => (\r\n      <s__.TableRowInfo key={row._id} onClick={()=>this.getKey(row._id)}>\r\n        <TableCell>{row.name}</TableCell>\r\n        <TableCell>{row.currentNumber}</TableCell>\r\n        <TableCell>{row.maxNumber}</TableCell>\r\n        <TableCell >{row.address}</TableCell>\r\n        {/* <TableCell align=\"right\">{row.address}</TableCell> */}\r\n      </s__.TableRowInfo>\r\n    ))\r\n  }\r\n\r\n  renderGrid = () =>{\r\n    return (\r\n    <div style={{backgroundColor:\"lightcyan\",overflow:\"auto\",height:\"300px\"}}>\r\n      <div >\r\n        <Table size=\"small\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Date</TableCell>\r\n              <TableCell>Name</TableCell>\r\n              <TableCell>Ship To</TableCell>\r\n              <TableCell>Payment Method</TableCell>\r\n              <TableCell>Address</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {this.renderChildTableRoom()}\r\n          </TableBody>\r\n        </Table>\r\n      </div>\r\n    </div>\r\n  )\r\n  }\r\n\r\n  renderPaper = () =>{\r\n    return (\r\n      <div style={{\r\n        backgroundColor:\"mediumspringgreen\",\r\n        height:\"auto\", \r\n        borderBottomRightRadius:\"5px\", \r\n        borderBottomLeftRadius:\"5px\"\r\n        }}\r\n      >\r\n        <p style={{margin:\"0px\"}} >Phân trang : 1-2-3</p>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <s__.Container style={{paddingBottom:\"0px\"}}>\r\n        <div>\r\n          {this.renderButton()}\r\n          {this.renderGrid()}\r\n          {this.renderPaper()}\r\n        </div>\r\n      </s__.Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state:MainState) =>({\r\n  UsersState: state.UsersState\r\n});\r\nexport default connect(mapStateToProps,{})(InfoTable);\r\n"]},"metadata":{},"sourceType":"module"}