{"ast":null,"code":"import { EXPANDED } from './type';\nconst initState = Object.freeze({\n  expanded: 'check'\n});\nexport function appReducer(previousState = initState, action) {\n  switch (action.type) {\n    case EXPANDED:\n      return {\n        expanded: action.payload\n      };\n\n    default:\n      return previousState;\n  }\n}","map":{"version":3,"sources":["C:/Users/HSONNL/Desktop/myProject/NCOV-19/Repo/NCOV-19Manager/client/src/store/App/reducer.ts"],"names":["EXPANDED","initState","Object","freeze","expanded","appReducer","previousState","action","type","payload"],"mappings":"AAAA,SAAiBA,QAAjB,QAA8C,QAA9C;AAEA,MAAMC,SAAkB,GAAGC,MAAM,CAACC,MAAP,CAAc;AACvCC,EAAAA,QAAQ,EAAE;AAD6B,CAAd,CAA3B;AAIA,OAAO,SAASC,UAAT,CACLC,aAAa,GAAGL,SADX,EAELM,MAFK,EAGG;AACR,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,QAAL;AACE,aAAO;AACLI,QAAAA,QAAQ,EAAEG,MAAM,CAACE;AADZ,OAAP;;AAGF;AACE,aAAOH,aAAP;AANJ;AAQD","sourcesContent":["import {AppState,EXPANDED,AppActionType} from './type';\r\n\r\nconst initState:AppState = Object.freeze({\r\n  expanded: 'check'\r\n})\r\n\r\nexport function appReducer(\r\n  previousState = initState,\r\n  action:AppActionType\r\n):AppState{\r\n  switch (action.type) {\r\n    case EXPANDED:\r\n      return {\r\n        expanded: action.payload\r\n      };\r\n    default:\r\n      return previousState;\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}