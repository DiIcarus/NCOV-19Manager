{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HSONNL\\\\Desktop\\\\myProject\\\\NCOV-19\\\\Repo\\\\NCOV-19Manager\\\\client\\\\src\\\\component\\\\InfoTableUser\\\\index.tsx\";\nimport React, { Component } from \"react\"; //style importer\n\nimport * as s__ from \"./style\";\nimport SaveIcon from '@material-ui/icons/Save';\nimport CloseIcon from '@material-ui/icons/Close'; // import Button from '@material-ui/core/Button';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete'; //component importer\n// import MainMenu from \"../MainMenu/index\";\n//utils importer\n\nimport AdminAPI from \"../../modules/api/admin\";\nimport DoctorAPI from \"../../modules/api/doctor\";\nimport RoomAPI from \"../../modules/api/room\";\nimport ShiftAPI from \"../../modules/api/shift\";\nimport UserAPI from \"../../modules/api/user\"; //config importer\n\n//global store\nimport { connect } from 'react-redux';\nconst initState = {\n  shift: [],\n  patient: [],\n  users: [],\n  deletemode: false,\n  updatemode: false,\n  insertmode: false,\n  showPopup: false,\n  numberPaper: 0,\n  featureType: \"get\",\n  delAll: false,\n  listDell: [],\n  valueInputSearch: '',\n  usersRequest: {\n    updateemail: '',\n    addshiftidShift: ''\n  },\n  currentId: '',\n  currentUsers: {\n    avatars: [],\n    gender: -1,\n    isActive: true,\n    gps: [],\n    _id: '',\n    address: '',\n    password: '',\n    phoneNumber: '',\n    dateOfBirth: '',\n    identityCard: '',\n    fullName: '',\n    email: '',\n    idRole: {\n      __id: '',\n      name: '',\n      __v: -1\n    },\n    __v: -1\n  }\n};\n\nclass InfoTableUser extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = initState;\n    this.token = this.adminApi = new AdminAPI();\n    this.doctorApi = new DoctorAPI();\n    this.roomApi = new RoomAPI();\n    this.shiftApi = new ShiftAPI();\n    this.userApi = new UserAPI();\n\n    this.AddShiftToDoctor = (formData, idDoctor) => {\n      if (this.token) {\n        this.adminApi.addShiftToDoctor(this.token, idDoctor, formData, res => {\n          console.log(res.data);\n        }, err => {\n          console.log(err);\n          console.log(err);\n        });\n      }\n    };\n\n    this.SearchValueInputSearch = () => {\n      console.log('SearchValueInputSearch');\n    };\n\n    this.DeleteCurrent = currentId => {\n      if (this.token) {\n        this.adminApi.deleteUser(this.token, currentId, res => {\n          console.log(res.data);\n        }, err => {\n          console.log(err);\n        });\n      }\n    };\n\n    this.UpdateCurrent = (idUsers, formData) => {\n      if (this.token) {\n        this.adminApi.updateUser(this.token, idUsers, formData, res => {\n          console.log(\"Successful\");\n        }, err => {\n          console.log(err);\n        });\n      }\n    };\n\n    this.GETAll = () => {\n      if (this.token) {\n        this.adminApi.getAll(this.token, res => {\n          console.log(res.data);\n          this.setState({\n            users: res.data.users\n          });\n        }, err => {\n          console.log(err);\n          console.log(err);\n        });\n      }\n    };\n\n    this.GETAllShift = () => {\n      if (this.token) {\n        this.shiftApi.getAll(this.token, res => {\n          console.log(\"catruc\", res.data.caTruc);\n          this.setState({\n            shift: res.data.caTruc\n          });\n        }, err => {\n          console.log(err);\n          console.log(err);\n        });\n      }\n    };\n\n    this.getIdRow = (users, featureType) => {\n      switch (featureType) {\n        case \"update\":\n          this.setState({\n            currentUsers: users,\n            currentId: users._id,\n            showPopup: true,\n            featureType\n          });\n          break;\n\n        case \"insert\":\n          this.setState({\n            currentUsers: users,\n            currentId: users._id,\n            showPopup: true,\n            featureType\n          });\n          break;\n      }\n    };\n\n    this.addShiftToDoctor = () => {\n      let formdata = new FormData();\n      formdata.append('idShift', this.state.usersRequest.addshiftidShift);\n      this.AddShiftToDoctor(formdata, this.state.currentId);\n      let obj = this.state.usersRequest;\n      obj.addshiftidShift = \"\";\n      this.setState({\n        usersRequest: obj\n      });\n      this.cancelPopup();\n      this.GETAll();\n    };\n\n    this.renderInsertForm = () => {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, React.createElement(Autocomplete, {\n        id: \"country-select-demo\",\n        style: {\n          width: 300\n        },\n        options: this.state.shift,\n        autoHighlight: true,\n        getOptionLabel: option => \"Start:\" + option.startTime + \"- End:\" + option.endTime,\n        renderOption: option => React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 225\n          },\n          __self: this\n        }, \"Start:(\", option.startTime, \") - End:(\", option.endTime, \")\"),\n        renderInput: params => React.createElement(TextField, Object.assign({}, params, {\n          label: \"Choose a Room\",\n          variant: \"outlined\",\n          inputProps: { ...params.inputProps,\n            autoComplete: 'new-password'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 230\n          },\n          __self: this\n        })),\n        onChange: (event, value, reason) => {\n          console.log(\"need\", value);\n          this.onchangIdShiftAdmin(value._id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }), React.createElement(s__.TextFieldArea, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, React.createElement(s__.ButtonSubmit, {\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"large\",\n        startIcon: React.createElement(SaveIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 250\n          },\n          __self: this\n        }),\n        onClick: this.addShiftToDoctor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, \"Save\")), React.createElement(s__.TextFieldArea, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, React.createElement(s__.ButtonSubmit, {\n        variant: \"contained\",\n        color: \"default\",\n        size: \"large\",\n        startIcon: React.createElement(CloseIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 259\n          },\n          __self: this\n        }),\n        onClick: this.cancelPopup,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, \"Cancel\")));\n    };\n\n    this.saveUpdatePopup = () => {\n      let formdata = new FormData();\n      formdata.append('email', this.state.usersRequest.updateemail.toString());\n      console.log(this.state.currentId);\n      this.UpdateCurrent(this.state.currentId, formdata);\n      let obj = this.state.usersRequest;\n      obj.updateemail = \"\";\n      this.setState({\n        usersRequest: obj\n      });\n      this.cancelPopup();\n      this.GETAll();\n    };\n\n    this.renderUpdateForm = () => {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }, React.createElement(s__.TextFieldArea, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }, React.createElement(s__.TextInput, {\n        variant: \"outlined\",\n        label: \"Email\",\n        id: \"Email\",\n        type: \"text\",\n        value: this.state.usersRequest.updateemail,\n        onChange: this.onchangEmailAdmin,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      })), React.createElement(s__.TextFieldArea, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      }, React.createElement(s__.ButtonSubmit, {\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"large\",\n        startIcon: React.createElement(SaveIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 299\n          },\n          __self: this\n        }),\n        onClick: this.saveUpdatePopup,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }, \"Save\")), React.createElement(s__.TextFieldArea, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      }, React.createElement(s__.ButtonSubmit, {\n        variant: \"contained\",\n        color: \"default\",\n        size: \"large\",\n        startIcon: React.createElement(CloseIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 308\n          },\n          __self: this\n        }),\n        onClick: this.cancelPopup,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }, \"Cancel\")));\n    };\n\n    this.renderPopupInput = type => {\n      switch (type) {\n        case \"get\":\n          break;\n\n        case \"update\":\n          return React.createElement(React.Fragment, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 322\n            },\n            __self: this\n          }, this.renderUpdateForm());\n\n        case \"delete\":\n          break;\n\n        case \"insert\":\n          return React.createElement(React.Fragment, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 330\n            },\n            __self: this\n          }, this.renderInsertForm());\n      }\n    };\n\n    this.renderPopupInfo = type => {\n      switch (type) {\n        case \"get\":\n          break;\n\n        case \"update\":\n          return React.createElement(React.Fragment, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 344\n            },\n            __self: this\n          }, React.createElement(\"h1\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 345\n            },\n            __self: this\n          }, \"Update Room \", this.state.currentUsers.fullName), React.createElement(\"h4\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 346\n            },\n            __self: this\n          }, \"Input and click on submit button to update number person on room, or click cancel to exist\"), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 347\n            },\n            __self: this\n          }, \"Current number is \", this.state.currentUsers.email), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 348\n            },\n            __self: this\n          }, \"Max number is \", this.state.currentUsers.fullName));\n\n        case \"delete\":\n          break;\n\n        case \"insert\":\n          return React.createElement(React.Fragment, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 355\n            },\n            __self: this\n          }, React.createElement(\"h1\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 356\n            },\n            __self: this\n          }, \"Create Room\"), React.createElement(\"h4\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 357\n            },\n            __self: this\n          }, \"Input and click on submit button to create a new one, else click cancel to exist\"));\n      }\n    };\n\n    this.showPopup = type => {\n      return React.createElement(React.Fragment, null, React.createElement(s__.PopupBackground, {\n        onClick: this.cancelPopup,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367\n        },\n        __self: this\n      }), React.createElement(s__.PopupContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369\n        },\n        __self: this\n      }, React.createElement(s__.PopupInfo, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370\n        },\n        __self: this\n      }, this.renderPopupInfo(type)), React.createElement(s__.PopupInput, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373\n        },\n        __self: this\n      }, this.renderPopupInput(type))));\n    };\n\n    this.cancelPopup = () => {\n      this.setState({\n        showPopup: false\n      });\n    };\n\n    this.setShowPopupByType = type => {\n      switch (type) {\n        case \"update\":\n          this.setState({\n            updatemode: true,\n            featureType: type\n          });\n          break;\n\n        case \"delete\":\n          break;\n\n        case \"insert\":\n          this.setState({\n            featureType: type,\n            showPopup: true\n          });\n      }\n    };\n\n    this.setInsertMode = () => {\n      this.setState({\n        insertmode: !this.state.insertmode,\n        featureType: 'insert',\n        deletemode: false,\n        updatemode: false\n      });\n    };\n\n    this.setDeleteMode = () => {\n      this.setState({\n        deletemode: !this.state.deletemode,\n        featureType: 'delete',\n        insertmode: false,\n        updatemode: false\n      });\n    };\n\n    this.setUpdateMode = () => {\n      this.setState({\n        updatemode: !this.state.updatemode,\n        featureType: 'update',\n        deletemode: false,\n        insertmode: false\n      });\n    };\n\n    this.setShowPopup = () => {\n      this.setState({\n        showPopup: !this.state.showPopup\n      });\n    };\n\n    this.donotthing = () => {\n      console.log(\"success\");\n    };\n\n    this.setDelAll = () => {\n      this.setState({\n        delAll: !this.state.delAll\n      });\n      console.log(this.state.delAll);\n    };\n\n    this.setInputSearch = event => {\n      this.setState({\n        valueInputSearch: event.target.value\n      });\n    };\n\n    this.onchangEmailAdmin = event => {\n      let obj = this.state.usersRequest;\n      obj.updateemail = event.target.value;\n      this.setState({\n        usersRequest: obj\n      });\n    };\n\n    this.onchangIdShiftAdmin = idShift => {\n      let obj = this.state.usersRequest;\n      obj.addshiftidShift = idShift;\n      this.setState({\n        usersRequest: obj\n      });\n    };\n\n    this.renderButton = () => {\n      return React.createElement(\"div\", {\n        style: {\n          backgroundColor: \"darkblue\",\n          height: \"auto\",\n          borderTopRightRadius: \"5px\",\n          borderTopLeftRadius: \"5px\",\n          padding: \"20px 0px 0px 20px\",\n          color: \"white\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 474\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        style: {\n          marginTop: \"0px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 483\n        },\n        __self: this\n      }, \"User Manager\"), React.createElement(s__.FeatureArea, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 484\n        },\n        __self: this\n      }, React.createElement(s__.FeatureButton, {\n        style: {\n          backgroundColor: this.state.insertmode ? \"tomato\" : \"\"\n        },\n        onClick: this.setInsertMode,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 486\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 486\n        },\n        __self: this\n      }, this.state.insertmode ? \"Cancel\" : \"Add Shift To Doctor\")), React.createElement(s__.FeatureButton, {\n        style: {\n          backgroundColor: this.state.updatemode ? \"tomato\" : \"\"\n        },\n        onClick: this.setUpdateMode,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 487\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 487\n        },\n        __self: this\n      }, this.state.updatemode ? \"Cancel\" : \"Update User\")), React.createElement(s__.SearchInput, {\n        id: \"maxNumber\",\n        type: \"text\",\n        value: this.state.valueInputSearch,\n        placeholder: \"Search Room By Name\",\n        onChange: this.setInputSearch,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 488\n        },\n        __self: this\n      }), React.createElement(s__.FeatureButton, {\n        onClick: this.SearchValueInputSearch,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 495\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 495\n        },\n        __self: this\n      }, \"Search\")), React.createElement(s__.FeatureButton, {\n        style: {\n          backgroundColor: this.state.deletemode ? \"mediumspringgreen\" : \"\",\n          display: this.state.deletemode ? \"\" : \"none\"\n        },\n        onClick: this.deleteAllCheckd,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 496\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 496\n        },\n        __self: this\n      }, \"Save\")), React.createElement(s__.FeatureButton, {\n        style: {\n          backgroundColor: this.state.deletemode ? \"tomato\" : \"\"\n        },\n        onClick: this.setDeleteMode,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 497\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 497\n        },\n        __self: this\n      }, this.state.deletemode ? \"Cancel\" : \"Delete\"))));\n    };\n\n    this.deleteAllCheckd = () => {\n      console.log('deleteAllCheckd');\n      this.state.listDell.map(value => {\n        this.DeleteCurrent(value);\n      });\n      this.setState({\n        listDell: [],\n        deletemode: false\n      });\n      this.GETAll();\n    };\n\n    this.setIdCurrent = currentId => {\n      this.setState({\n        currentId\n      });\n    };\n\n    this.setListDel = () => {\n      let arr = this.state.listDell;\n\n      if (arr.indexOf(this.state.currentId) === -1) {\n        arr.push(this.state.currentId);\n        this.setState({\n          listDell: arr\n        });\n      } else {\n        arr.splice(arr.indexOf(this.state.currentId), 1);\n        this.setState({\n          listDell: arr\n        });\n      }\n    };\n\n    this.renderChildTableRoom = () => {\n      return this.state.users.map(row => React.createElement(s__.TableRowInfo, {\n        key: row._id,\n        onClick: this.state.updatemode || this.state.insertmode ? () => this.getIdRow(row, this.state.featureType) : () => this.setIdCurrent(row._id),\n        onFocus: () => this.setIdCurrent(row._id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 540\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 542\n        },\n        __self: this\n      }, row.fullName), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 543\n        },\n        __self: this\n      }, row.idRole.name), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 544\n        },\n        __self: this\n      }, row.identityCard), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 545\n        },\n        __self: this\n      }, row.isActive.toString()), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 546\n        },\n        __self: this\n      }, row.phoneNumber), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 547\n        },\n        __self: this\n      }, row.dateOfBirth), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 548\n        },\n        __self: this\n      }, row.email), React.createElement(TableCell, {\n        align: \"right\",\n        style: {\n          display: this.state.deletemode ? \"\" : \"none\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 549\n        },\n        __self: this\n      }, React.createElement(Checkbox, {\n        size: \"small\",\n        onChange: this.setListDel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 550\n        },\n        __self: this\n      }))));\n    };\n\n    this.renderGrid = () => {\n      return React.createElement(\"div\", {\n        style: {\n          backgroundColor: \"lightcyan\",\n          overflow: \"auto\",\n          height: \"350px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 561\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 562\n        },\n        __self: this\n      }, React.createElement(Table, {\n        size: \"small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 563\n        },\n        __self: this\n      }, React.createElement(TableHead, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 564\n        },\n        __self: this\n      }, React.createElement(s__.TableRowHead, {\n        style: {\n          height: \"50px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 565\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 566\n        },\n        __self: this\n      }, \"Full Name\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 567\n        },\n        __self: this\n      }, \"Role\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 568\n        },\n        __self: this\n      }, \"IdentityCard\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 569\n        },\n        __self: this\n      }, \"Active\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 570\n        },\n        __self: this\n      }, \"PhoneNumber\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 571\n        },\n        __self: this\n      }, \"DateOfBirth\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 572\n        },\n        __self: this\n      }, \"Email\"), React.createElement(TableCell, {\n        align: \"right\",\n        style: {\n          display: this.state.deletemode ? \"\" : \"none\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 573\n        },\n        __self: this\n      }, React.createElement(Checkbox, {\n        size: \"small\",\n        onChange: this.setDelAll,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 574\n        },\n        __self: this\n      })))), React.createElement(TableBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 580\n        },\n        __self: this\n      }, this.renderChildTableRoom()))));\n    };\n\n    this.renderPaper = () => {\n      return (// <s__.PaperDiv>\n        //   <s__.PaperDivNumber >\n        //     <p style={{margin:\"0px\"}} >1</p>\n        //     <p style={{margin:\"0px\"}} >2</p>\n        //     <p style={{margin:\"0px\"}} >3</p>\n        //   </s__.PaperDivNumber  >\n        // </s__.PaperDiv>\n        React.createElement(s__.PaperDiv, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 598\n          },\n          __self: this\n        }, React.createElement(s__.PaperDivNumber, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 599\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 599\n          },\n          __self: this\n        }, \"1\")), React.createElement(s__.PaperDivNumber, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 600\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 600\n          },\n          __self: this\n        }, \"2\")), React.createElement(s__.PaperDivNumber, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 601\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 601\n          },\n          __self: this\n        }, \"3\")), React.createElement(s__.PaperDivNumber, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 602\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 602\n          },\n          __self: this\n        }, \"4\")))\n      );\n    };\n  }\n\n  //circle\n  componentDidMount() {\n    console.log(this.state);\n    this.GETAll();\n    this.GETAllShift();\n    setInterval(() => {\n      console.log(this.state);\n    }, 2000);\n  } //API\n\n\n  //Main render\n  render() {\n    return React.createElement(s__.Container, {\n      style: {\n        paddingBottom: \"0px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 610\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 611\n      },\n      __self: this\n    }, this.state.showPopup ? this.showPopup(this.state.featureType) : React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 612\n      },\n      __self: this\n    }), this.renderButton(), this.renderGrid(), this.renderPaper()));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  UsersState: state.UsersState,\n  UserssignedState: state.UserssignedState\n});\n\nexport default connect(mapStateToProps, {})(InfoTableUser);","map":{"version":3,"sources":["C:/Users/HSONNL/Desktop/myProject/NCOV-19/Repo/NCOV-19Manager/client/src/component/InfoTableUser/index.tsx"],"names":["React","Component","s__","SaveIcon","CloseIcon","Table","TableBody","TableCell","TableHead","Checkbox","TextField","Autocomplete","AdminAPI","DoctorAPI","RoomAPI","ShiftAPI","UserAPI","connect","initState","shift","patient","users","deletemode","updatemode","insertmode","showPopup","numberPaper","featureType","delAll","listDell","valueInputSearch","usersRequest","updateemail","addshiftidShift","currentId","currentUsers","avatars","gender","isActive","gps","_id","address","password","phoneNumber","dateOfBirth","identityCard","fullName","email","idRole","__id","name","__v","InfoTableUser","state","token","adminApi","doctorApi","roomApi","shiftApi","userApi","AddShiftToDoctor","formData","idDoctor","addShiftToDoctor","res","console","log","data","err","SearchValueInputSearch","DeleteCurrent","deleteUser","UpdateCurrent","idUsers","updateUser","GETAll","getAll","setState","GETAllShift","caTruc","getIdRow","formdata","FormData","append","obj","cancelPopup","renderInsertForm","width","option","startTime","endTime","params","inputProps","autoComplete","event","value","reason","onchangIdShiftAdmin","saveUpdatePopup","toString","renderUpdateForm","onchangEmailAdmin","renderPopupInput","type","renderPopupInfo","setShowPopupByType","setInsertMode","setDeleteMode","setUpdateMode","setShowPopup","donotthing","setDelAll","setInputSearch","target","idShift","renderButton","backgroundColor","height","borderTopRightRadius","borderTopLeftRadius","padding","color","marginTop","display","deleteAllCheckd","map","setIdCurrent","setListDel","arr","indexOf","push","splice","renderChildTableRoom","row","renderGrid","overflow","renderPaper","componentDidMount","setInterval","render","paddingBottom","mapStateToProps","UsersState","UserssignedState"],"mappings":"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","sourcesContent":["import React, { Component, ChangeEvent } from \"react\";\r\n//style importer\r\nimport * as s__ from \"./style\";\r\nimport {Redirect} from 'react-router-dom'\r\n// import Link from '@material-ui/core/Link';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n// import Button from '@material-ui/core/Button';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport ClearAllIcon from '@material-ui/icons/ClearAll';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n//component importer\r\n// import MainMenu from \"../MainMenu/index\";\r\n//utils importer\r\nimport AdminAPI from \"../../modules/api/admin\";\r\nimport DoctorAPI from \"../../modules/api/doctor\";\r\nimport RoomAPI from \"../../modules/api/room\";\r\nimport ShiftAPI from \"../../modules/api/shift\";\r\nimport UserAPI from \"../../modules/api/user\";\r\n//config importer\r\nimport {AdminRequest,DoctorRequest,RoomRequest,ShiftRequest,UserRequest} from \"../../config/requesttype\";\r\nimport * as api__ from \"../../config/apireturntype\";\r\nimport { Button } from \"@material-ui/core\";\r\n//global store\r\nimport { connect } from 'react-redux';\r\nimport {MainState} from '../../store/index';\r\n//type\r\nimport {UsersState} from '../../store/User/type';\r\nimport {UserssignedState} from \"../../store/UsersSigned/type\";\r\n//typeInput\r\n\r\ninterface Props {\r\n  UsersState: UsersState,\r\n  UserssignedState: UserssignedState\r\n}\r\n\r\ntype State =  typeof initState;\r\n\r\nconst initState = {\r\n  shift: [] as api__.Shift[],\r\n  patient: [] as api__.Patient[],\r\n  users:[] as api__.Users[],\r\n\r\n  deletemode:false,\r\n  updatemode:false,\r\n  insertmode:false,\r\n  showPopup:false,\r\n  numberPaper:0,\r\n  featureType:\"get\" as \"update\" | \"delete\" | \"insert\",\r\n  delAll: false,\r\n  listDell:[] as string[],\r\n  valueInputSearch: '' as string,\r\n  usersRequest:{\r\n    updateemail:'' as string,\r\n    addshiftidShift:'' as string\r\n  } as AdminRequest,\r\n  currentId: '',\r\n  currentUsers: {\r\n    avatars: [] as any[],\r\n    gender: -1 as number,\r\n    isActive: true as boolean,\r\n    gps:[] as number[],\r\n    _id:'' as string,\r\n    address:''as string,\r\n    password:'' as string,\r\n    phoneNumber:'' as string,\r\n    dateOfBirth:'' as string,\r\n    identityCard:'' as string,\r\n    fullName:'' as string,\r\n    email:'' as string,\r\n    idRole:{\r\n      __id:'' as string,\r\n      name:'' as string,\r\n      __v:-1 as number\r\n    },\r\n    __v:-1 as number\r\n  } as api__.Users\r\n}\r\n\r\nclass InfoTableUser extends Component<Props, State> {\r\n  state = initState;\r\n  token = this.\r\n  adminApi = new AdminAPI();\r\n  doctorApi = new DoctorAPI();\r\n  roomApi = new RoomAPI();\r\n  shiftApi = new ShiftAPI();\r\n  userApi = new UserAPI();\r\n\r\n  //circle\r\n  componentDidMount(){\r\n    console.log(this.state);\r\n    this.GETAll();\r\n    this.GETAllShift();\r\n    setInterval(()=>{\r\n      console.log(this.state);\r\n    },2000)\r\n  }\r\n\r\n  \r\n\r\n  //API\r\n  AddShiftToDoctor = (formData:FormData,idDoctor:string) => {\r\n    if(this.token){\r\n      this.adminApi.addShiftToDoctor(this.token,idDoctor,formData,(res:any)=>{\r\n        console.log(res.data);\r\n      }, \r\n      (err:string)=>{\r\n        console.log(err);\r\n        console.log(err);\r\n      })\r\n    }\r\n  }\r\n\r\n  SearchValueInputSearch = () => {\r\n    console.log('SearchValueInputSearch')\r\n  }\r\n\r\n  DeleteCurrent = (currentId:string) => {\r\n    if(this.token){\r\n      this.adminApi.deleteUser(this.token,currentId,(res:any)=>{\r\n        console.log(res.data);\r\n      }, \r\n      (err:string)=>{\r\n        console.log(err);\r\n      })\r\n    }\r\n  }\r\n\r\n  UpdateCurrent = (idUsers:string,formData:FormData) => {\r\n    if(this.token){\r\n      this.adminApi.updateUser(this.token,idUsers,formData,(res:any)=>{\r\n        console.log(\"Successful\");\r\n      }, \r\n      (err:string)=>{\r\n        console.log(err);\r\n      })\r\n    }\r\n  }\r\n\r\n  GETAll = () =>{\r\n    if(this.token){\r\n      this.adminApi.getAll(this.token,(res:any)=>{\r\n        console.log(res.data);\r\n        this.setState({\r\n          users:res.data.users\r\n        })\r\n      }, \r\n      (err:string)=>{\r\n        console.log(err);\r\n        console.log(err);\r\n      })\r\n    }\r\n  }\r\n\r\n  GETAllShift = () =>{\r\n    if(this.token){\r\n      this.shiftApi.getAll(this.token,(res:any)=>{\r\n        console.log(\"catruc\",res.data.caTruc);\r\n        this.setState({\r\n          shift:res.data.caTruc\r\n        })\r\n      }, \r\n      (err:string)=>{\r\n        console.log(err);\r\n        console.log(err);\r\n      })\r\n    }\r\n  }\r\n\r\n  ////\r\n  getIdRow=(users:api__.Users,featureType: \"update\" | \"delete\" | \"insert\")=>{\r\n    switch(featureType){\r\n      case \"update\":\r\n        this.setState({\r\n          currentUsers:users,\r\n          currentId:users._id,\r\n          showPopup:true,\r\n          featureType\r\n        })\r\n        break;\r\n      case \"insert\":\r\n        this.setState({\r\n          currentUsers:users,\r\n          currentId:users._id,\r\n          showPopup:true,\r\n          featureType\r\n        })\r\n        break;\r\n    }\r\n  }\r\n\r\n\r\n\r\n  addShiftToDoctor = () => {\r\n    let formdata = new FormData();\r\n    formdata.append('idShift',this.state.usersRequest.addshiftidShift);\r\n    this.AddShiftToDoctor(formdata,this.state.currentId);\r\n    let obj = this.state.usersRequest;\r\n    obj.addshiftidShift = \"\";\r\n    this.setState({\r\n      usersRequest:obj\r\n    })\r\n    this.cancelPopup();\r\n    this.GETAll();\r\n  }\r\n\r\n  renderInsertForm = () => {\r\n    return (\r\n      <React.Fragment>\r\n        <Autocomplete\r\n            id=\"country-select-demo\"\r\n            style={{ width: 300 }}\r\n            options={this.state.shift}\r\n            autoHighlight\r\n            getOptionLabel={(option:api__.Shift) => \"Start:\"+(option.startTime)+\"- End:\"+ (option.endTime)}\r\n            renderOption={(option:api__.Shift) => (\r\n              <React.Fragment>\r\n                Start:({option.startTime}) - End:({option.endTime})\r\n              </React.Fragment>\r\n            )}\r\n            renderInput={(params:any) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Choose a Room\"\r\n                variant=\"outlined\"\r\n                inputProps={{\r\n                  ...params.inputProps,\r\n                  autoComplete: 'new-password',\r\n                }}\r\n              />\r\n            )}\r\n            onChange={(event:any, value: any, reason: string) => {\r\n              console.log(\"need\",value);\r\n              this.onchangIdShiftAdmin(value._id);\r\n            }}\r\n          />\r\n          <s__.TextFieldArea>\r\n            <s__.ButtonSubmit\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              size=\"large\"\r\n              startIcon={<SaveIcon />}\r\n              onClick={this.addShiftToDoctor}\r\n            >Save</s__.ButtonSubmit>\r\n          </s__.TextFieldArea>\r\n          <s__.TextFieldArea>\r\n            <s__.ButtonSubmit\r\n              variant=\"contained\"\r\n              color=\"default\"\r\n              size=\"large\"\r\n              startIcon={<CloseIcon />}\r\n              onClick={this.cancelPopup}\r\n            >Cancel</s__.ButtonSubmit>\r\n          </s__.TextFieldArea>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n\r\n  saveUpdatePopup = () => {\r\n    let formdata = new FormData();\r\n    formdata.append('email',this.state.usersRequest.updateemail.toString());\r\n    console.log(this.state.currentId);\r\n    this.UpdateCurrent(this.state.currentId,formdata);\r\n    let obj = this.state.usersRequest;\r\n    obj.updateemail = \"\";\r\n    this.setState({\r\n      usersRequest:obj\r\n    })\r\n    this.cancelPopup();\r\n    this.GETAll();\r\n  }\r\n\r\n  renderUpdateForm = () => {\r\n    return (\r\n      <React.Fragment>\r\n          <s__.TextFieldArea>\r\n            <s__.TextInput\r\n              variant=\"outlined\"\r\n              label=\"Email\"\r\n              id=\"Email\"\r\n              type=\"text\"\r\n              value={this.state.usersRequest.updateemail}\r\n              onChange={this.onchangEmailAdmin}\r\n            />\r\n          </s__.TextFieldArea>\r\n          <s__.TextFieldArea>\r\n            <s__.ButtonSubmit\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              size=\"large\"\r\n              startIcon={<SaveIcon />}\r\n              onClick={this.saveUpdatePopup}\r\n            >Save</s__.ButtonSubmit>\r\n          </s__.TextFieldArea>\r\n          <s__.TextFieldArea>\r\n            <s__.ButtonSubmit\r\n              variant=\"contained\"\r\n              color=\"default\"\r\n              size=\"large\"\r\n              startIcon={<CloseIcon />}\r\n              onClick={this.cancelPopup}\r\n            >Cancel</s__.ButtonSubmit>\r\n          </s__.TextFieldArea>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n\r\n  renderPopupInput = (type:string) => {\r\n    switch(type){\r\n      case \"get\":\r\n        break;\r\n      case \"update\":\r\n        return (\r\n          <React.Fragment>\r\n            {this.renderUpdateForm()}\r\n          </React.Fragment>\r\n        )\r\n      case \"delete\":\r\n        break;\r\n      case \"insert\":\r\n        return (\r\n          <React.Fragment>\r\n            {this.renderInsertForm()}\r\n          </React.Fragment>\r\n        )\r\n    }\r\n    \r\n  }\r\n\r\n  renderPopupInfo = (type:string) => {\r\n    switch(type){\r\n      case \"get\":\r\n        break;\r\n      case \"update\":\r\n        return (\r\n          <React.Fragment>\r\n            <h1>Update Room {this.state.currentUsers.fullName}</h1>\r\n            <h4>Input and click on submit button to update number person on room, or click cancel to exist</h4>\r\n            <p>Current number is {this.state.currentUsers.email}</p>\r\n            <p>Max number is {this.state.currentUsers.fullName}</p>\r\n          </React.Fragment>\r\n        )\r\n      case \"delete\":\r\n        break;\r\n      case \"insert\":\r\n        return (\r\n          <React.Fragment>\r\n            <h1>Create Room</h1>\r\n            <h4>Input and click on submit button to create a new one, else click cancel to exist</h4>\r\n          </React.Fragment>\r\n        )\r\n    }\r\n  }\r\n\r\n  showPopup = (type:string) => {\r\n    \r\n    return (\r\n      <>\r\n        <s__.PopupBackground onClick={this.cancelPopup}>\r\n        </s__.PopupBackground>\r\n        <s__.PopupContainer>\r\n          <s__.PopupInfo>\r\n            {this.renderPopupInfo(type)}\r\n          </s__.PopupInfo>\r\n          <s__.PopupInput>\r\n            {this.renderPopupInput(type)}\r\n          </s__.PopupInput>\r\n        </s__.PopupContainer>\r\n      </>\r\n    )\r\n  }\r\n\r\n  cancelPopup=()=>{\r\n    this.setState({\r\n      showPopup:false\r\n    })\r\n  }\r\n\r\n  setShowPopupByType = (type:\"update\" | \"delete\" | \"insert\") => {\r\n    switch(type){\r\n      case \"update\":\r\n        this.setState({\r\n          updatemode:true,\r\n          featureType:type\r\n        })\r\n        break;\r\n      case \"delete\":\r\n        break;\r\n      case \"insert\":\r\n        this.setState({\r\n          featureType:type,\r\n          showPopup: true\r\n        })\r\n    }\r\n    \r\n  }\r\n\r\n  setInsertMode = () =>{\r\n    this.setState({\r\n      insertmode:!this.state.insertmode,\r\n      featureType: 'insert',\r\n      deletemode: false,\r\n      updatemode:false\r\n    })\r\n  }\r\n  setDeleteMode = () => {\r\n    this.setState({\r\n      deletemode:!this.state.deletemode,\r\n      featureType: 'delete',\r\n      insertmode:false,\r\n      updatemode:false\r\n    })\r\n  }\r\n\r\n  setUpdateMode = () => {\r\n    this.setState({\r\n      updatemode:!this.state.updatemode,\r\n      featureType:'update',\r\n      deletemode:false,\r\n      insertmode:false\r\n    })\r\n  }\r\n\r\n  setShowPopup = () => {\r\n    this.setState({\r\n      showPopup:!this.state.showPopup\r\n    })\r\n  }\r\n\r\n  donotthing = () => {\r\n    console.log(\"success\");\r\n  }\r\n\r\n  setDelAll = () => {\r\n    this.setState({\r\n      delAll:!this.state.delAll,\r\n    })\r\n    console.log(this.state.delAll);\r\n  }\r\n\r\n  setInputSearch = (event: ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({\r\n      valueInputSearch: event.target.value\r\n    })\r\n  }\r\n\r\n  onchangEmailAdmin = (event: ChangeEvent<HTMLInputElement>) => {\r\n    let obj = this.state.usersRequest;\r\n    obj.updateemail = event.target.value;\r\n    this.setState({\r\n      usersRequest:obj\r\n    })\r\n  }\r\n\r\n  onchangIdShiftAdmin = (idShift:string) => {\r\n    let obj = this.state.usersRequest;\r\n    obj.addshiftidShift = idShift;\r\n    this.setState({\r\n      usersRequest:obj\r\n    })\r\n  }\r\n\r\n  //Render\r\n  renderButton= () =>{\r\n    return (\r\n      <div style={{\r\n        backgroundColor:\"darkblue\",\r\n        height:\"auto\",\r\n        borderTopRightRadius:\"5px\", \r\n        borderTopLeftRadius:\"5px\",\r\n        padding:\"20px 0px 0px 20px\",\r\n        color:\"white\"\r\n        }}\r\n      >\r\n        <h1 style={{marginTop:\"0px\"}}>User Manager</h1>\r\n        <s__.FeatureArea>\r\n          {/* <s__.FeatureButton onClick={()=>this.setShowPopupByType(\"insert\")}><p>Add Shift To Doctor</p></s__.FeatureButton> */}\r\n          <s__.FeatureButton style={{backgroundColor:this.state.insertmode?\"tomato\":\"\"}} onClick={this.setInsertMode}><p>{this.state.insertmode?\"Cancel\":\"Add Shift To Doctor\"}</p></s__.FeatureButton>\r\n          <s__.FeatureButton style={{backgroundColor:this.state.updatemode?\"tomato\":\"\"}} onClick={this.setUpdateMode}><p>{this.state.updatemode?\"Cancel\":\"Update User\"}</p></s__.FeatureButton>\r\n          <s__.SearchInput\r\n            id=\"maxNumber\"\r\n            type=\"text\"\r\n            value={this.state.valueInputSearch}\r\n            placeholder=\"Search Room By Name\"\r\n            onChange={this.setInputSearch}\r\n          />\r\n          <s__.FeatureButton onClick={this.SearchValueInputSearch}><p>Search</p></s__.FeatureButton>\r\n          <s__.FeatureButton style={{backgroundColor:this.state.deletemode?\"mediumspringgreen\":\"\",display:this.state.deletemode?\"\":\"none\"}} onClick={this.deleteAllCheckd}><p>Save</p></s__.FeatureButton>\r\n          <s__.FeatureButton style={{backgroundColor:this.state.deletemode?\"tomato\":\"\"}} onClick={this.setDeleteMode}><p>{this.state.deletemode?\"Cancel\":\"Delete\"}</p></s__.FeatureButton>\r\n        </s__.FeatureArea>\r\n        \r\n      </div>\r\n      \r\n    )\r\n  }\r\n\r\n  deleteAllCheckd= () =>{\r\n    console.log('deleteAllCheckd');\r\n    this.state.listDell.map(value => {\r\n      this.DeleteCurrent(value);\r\n    })\r\n    this.setState({\r\n      listDell:[],\r\n      deletemode:false\r\n    })\r\n    this.GETAll();\r\n  }\r\n\r\n  setIdCurrent = (currentId:string) => {\r\n    this.setState({\r\n      currentId\r\n    })\r\n  }\r\n\r\n  setListDel = () => {\r\n    let arr = this.state.listDell;\r\n    if(arr.indexOf(this.state.currentId)===-1){\r\n      arr.push(this.state.currentId)\r\n      this.setState({\r\n        listDell:arr\r\n      })\r\n    }else{\r\n      arr.splice(arr.indexOf(this.state.currentId),1)\r\n      this.setState({\r\n        listDell:arr\r\n      })\r\n    }\r\n  }\r\n\r\n  renderChildTableRoom = () => {\r\n    return this.state.users.map((row) => (\r\n      <s__.TableRowInfo key={row._id} onClick={(this.state.updatemode || this.state.insertmode)?()=>this.getIdRow(row,this.state.featureType):()=>this.setIdCurrent(row._id)}\r\n      onFocus={()=>this.setIdCurrent(row._id)}>\r\n        <TableCell>{row.fullName}</TableCell>\r\n        <TableCell>{row.idRole.name}</TableCell>\r\n        <TableCell>{row.identityCard}</TableCell>\r\n        <TableCell >{row.isActive.toString()}</TableCell>\r\n        <TableCell >{row.phoneNumber}</TableCell>\r\n        <TableCell >{row.dateOfBirth}</TableCell>\r\n        <TableCell >{row.email}</TableCell>\r\n        <TableCell align=\"right\" style={{display:this.state.deletemode?\"\":\"none\"}} >\r\n          <Checkbox \r\n            size=\"small\"\r\n            onChange={this.setListDel}  \r\n          />\r\n        </TableCell>\r\n      </s__.TableRowInfo>\r\n    ))\r\n  }\r\n\r\n  renderGrid = () =>{\r\n    return (\r\n    <div style={{backgroundColor:\"lightcyan\",overflow:\"auto\",height:\"350px\"}}>\r\n      <div >\r\n        <Table size=\"small\">\r\n          <TableHead >\r\n            <s__.TableRowHead style={{height:\"50px\"}}>\r\n              <TableCell>Full Name</TableCell>\r\n              <TableCell>Role</TableCell>\r\n              <TableCell>IdentityCard</TableCell>\r\n              <TableCell>Active</TableCell>\r\n              <TableCell>PhoneNumber</TableCell>\r\n              <TableCell>DateOfBirth</TableCell>\r\n              <TableCell>Email</TableCell>\r\n              <TableCell align=\"right\" style={{display:this.state.deletemode?\"\":\"none\"}}>\r\n                <Checkbox \r\n                  size=\"small\"\r\n                  onChange={this.setDelAll}/>\r\n              </TableCell>\r\n            </s__.TableRowHead>\r\n          </TableHead>\r\n          <TableBody>\r\n            {this.renderChildTableRoom()}\r\n          </TableBody>\r\n        </Table>\r\n      </div>\r\n    </div>\r\n  )\r\n  }\r\n\r\n  renderPaper = () =>{\r\n    return (\r\n      // <s__.PaperDiv>\r\n      //   <s__.PaperDivNumber >\r\n      //     <p style={{margin:\"0px\"}} >1</p>\r\n      //     <p style={{margin:\"0px\"}} >2</p>\r\n      //     <p style={{margin:\"0px\"}} >3</p>\r\n      //   </s__.PaperDivNumber  >\r\n      // </s__.PaperDiv>\r\n        <s__.PaperDiv>\r\n          <s__.PaperDivNumber><p>1</p></s__.PaperDivNumber>\r\n          <s__.PaperDivNumber><p>2</p></s__.PaperDivNumber>\r\n          <s__.PaperDivNumber><p>3</p></s__.PaperDivNumber>\r\n          <s__.PaperDivNumber><p>4</p></s__.PaperDivNumber>\r\n        </s__.PaperDiv>\r\n    )\r\n  }\r\n\r\n  //Main render\r\n  render() {\r\n    return (\r\n      <s__.Container style={{paddingBottom:\"0px\"}}>\r\n        <div>\r\n          {this.state.showPopup?this.showPopup(this.state.featureType):<React.Fragment/>}\r\n          {this.renderButton()}\r\n          {this.renderGrid()}\r\n          {this.renderPaper()}\r\n        </div>\r\n      </s__.Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state:MainState) =>({\r\n  UsersState: state.UsersState,\r\n  UserssignedState: state.UserssignedState\r\n});\r\nexport default connect(mapStateToProps,{})(InfoTableUser);\r\n"]},"metadata":{},"sourceType":"module"}