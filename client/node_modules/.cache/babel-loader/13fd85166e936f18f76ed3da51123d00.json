{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HSONNL\\\\Desktop\\\\myProject\\\\NCOV-19\\\\Repo\\\\NCOV-19Manager\\\\client\\\\src\\\\component\\\\InfoTableShift\\\\index.tsx\";\nimport React, { Component } from \"react\"; //style importer\n\nimport * as s__ from \"./style\";\nimport SaveIcon from '@material-ui/icons/Save';\nimport CloseIcon from '@material-ui/icons/Close'; // import Button from '@material-ui/core/Button';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport Checkbox from '@material-ui/core/Checkbox'; //component importer\n// import MainMenu from \"../MainMenu/index\";\n//utils importer\n\nimport AdminAPI from \"../../modules/api/admin\";\nimport DoctorAPI from \"../../modules/api/doctor\";\nimport RoomAPI from \"../../modules/api/room\";\nimport ShiftAPI from \"../../modules/api/shift\";\nimport UserAPI from \"../../modules/api/user\"; //config importer\n\n//global store\nimport { connect } from 'react-redux';\nconst initState = {\n  // room: [] as api__.Room[],\n  patient: [],\n  shift: [],\n  deletemode: false,\n  updatemode: false,\n  showPopup: false,\n  numberPaper: 0,\n  featureType: \"get\",\n  delAll: false,\n  listDell: [],\n  valueInputSearch: '',\n  roomRequest: {\n    updateCurrentNumber: '',\n    insertMaxNumber: '',\n    insertAddress: '',\n    insertName: '',\n    getallpage: '0',\n    getalltypesort: '1',\n    getallsearch: 'A200'\n  },\n  currentId: '',\n  currentShift: {\n    idUser: [],\n    _id: '',\n    startTime: '',\n    endTime: '',\n    __v: 1\n  }\n};\n\nclass InfoTableShift extends Component {\n  constructor(...args) {\n    super(...args);\n    this.token = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjVlYTJjYjEyNzhlN2M0MjExMDc4OWQ0ZiIsImlkUm9sZSI6eyJfaWQiOiI1ZWEyY2IxMDc4ZTdjNDIxMTA3ODlkNGUiLCJuYW1lIjoiU1VQRVJfQURNSU4iLCJfX3YiOjB9LCJpc0FjdGl2ZSI6ZmFsc2UsInJvbGVOYW1lIjoiU1VQRVJfQURNSU4iLCJpYXQiOjE1ODc4MDA5OTQsImV4cCI6MTU4Nzg0NDE5NH0.VrVQz_W0o-04TXdlGD9O2r4AW4ylNJajexWmItWrR0k\";\n    this.state = initState;\n    this.adminApi = new AdminAPI();\n    this.doctorApi = new DoctorAPI();\n    this.roomApi = new RoomAPI();\n    this.shiftApi = new ShiftAPI();\n    this.userApi = new UserAPI();\n\n    this.InsertCurrent = formData => {\n      if (this.token) {\n        this.roomApi.create(this.token, formData, res => {\n          console.log(res.data);\n        }, err => {\n          console.log(err);\n          console.log(err);\n        });\n      }\n    };\n\n    this.SearchValueInputSearch = () => {\n      console.log('SearchValueInputSearch');\n    };\n\n    this.DeleteCurrent = currentId => {\n      if (this.token) {\n        this.roomApi.delete(this.token, currentId, res => {\n          console.log(res.data);\n        }, err => {\n          console.log(err);\n        });\n      }\n    };\n\n    this.UpdateCurrent = (idRoom, formData) => {\n      if (this.token) {\n        this.roomApi.upDate(this.token, idRoom, formData, res => {\n          console.log(res.data);\n        }, err => {\n          console.log(err);\n        });\n      }\n    };\n\n    this.GetUsers = userId => {\n      if (this.token) {\n        this.roomApi.get(this.token, userId, res => {\n          console.log(res.data);\n        }, err => {\n          console.log(err);\n          console.log(err);\n        });\n      }\n    };\n\n    this.GETAll = () => {\n      let formData = new FormData();\n      formData.append('page', this.state.roomRequest.getallpage);\n      formData.append('typesort', this.state.roomRequest.getalltypesort);\n      formData.append('search', this.state.roomRequest.getallsearch);\n\n      if (this.token) {\n        this.shiftApi.getAll(this.token, res => {\n          console.log(\"catruc\", res.data.caTruc);\n          this.setState({\n            shift: res.data.caTruc\n          });\n        }, err => {\n          console.log(err);\n          console.log(err);\n        });\n      }\n    };\n\n    this.getIdRow = (shift, featureType) => {\n      switch (featureType) {\n        case \"update\":\n          this.setState({\n            currentShift: shift,\n            currentId: shift._id,\n            showPopup: true,\n            featureType\n          });\n          break;\n      }\n    };\n\n    this.saveInsertPopup = () => {\n      //room\n      let formdata = new FormData();\n      formdata.append('maxNumber', this.state.roomRequest.insertMaxNumber);\n      formdata.append('address', this.state.roomRequest.insertAddress);\n      formdata.append('name', this.state.roomRequest.insertName);\n      this.InsertCurrent(formdata);\n      let obj = this.state.roomRequest;\n      obj.insertMaxNumber = \"\";\n      obj.insertAddress = \"\";\n      obj.insertName = \"\";\n      this.setState({\n        roomRequest: obj\n      });\n      this.cancelPopup();\n      this.GETAll();\n    };\n\n    this.renderInsertForm = () => {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, React.createElement(s__.TextFieldArea, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, React.createElement(s__.TextInput, {\n        variant: \"outlined\",\n        label: \"maxNumber\",\n        id: \"maxNumber\",\n        type: \"text\",\n        value: this.state.roomRequest.insertMaxNumber,\n        placeholder: \"\",\n        onChange: this.onchangMaxNumberRoom,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      })), React.createElement(s__.TextFieldArea, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, React.createElement(s__.TextInput, {\n        variant: \"outlined\",\n        label: \"address\",\n        id: \"address\",\n        type: \"text\",\n        value: this.state.roomRequest.insertAddress,\n        onChange: this.onchangAddressRoom,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      })), React.createElement(s__.TextFieldArea, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, React.createElement(s__.TextInput, {\n        variant: \"outlined\",\n        label: \"name\",\n        id: \"name\",\n        type: \"text\",\n        value: this.state.roomRequest.insertName,\n        onChange: this.onchangNameRoom,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      })), React.createElement(s__.TextFieldArea, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, React.createElement(s__.ButtonSubmit, {\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"large\",\n        startIcon: React.createElement(SaveIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 237\n          },\n          __self: this\n        }),\n        onClick: this.saveInsertPopup,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, \"Save\")), React.createElement(s__.TextFieldArea, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, React.createElement(s__.ButtonSubmit, {\n        variant: \"contained\",\n        color: \"default\",\n        size: \"large\",\n        startIcon: React.createElement(CloseIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 246\n          },\n          __self: this\n        }),\n        onClick: this.cancelPopup,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, \"Cancel\")));\n    };\n\n    this.saveUpdatePopup = () => {\n      let formdata = new FormData();\n      formdata.append('currentNumber', this.state.roomRequest.updateCurrentNumber.toString());\n      this.UpdateCurrent(this.state.currentId, formdata);\n      let obj = this.state.roomRequest;\n      obj.updateCurrentNumber = \"\";\n      this.setState({\n        roomRequest: obj\n      });\n      this.cancelPopup();\n      this.GETAll();\n    };\n\n    this.renderUpdateForm = () => {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }, React.createElement(s__.TextFieldArea, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, React.createElement(s__.TextInput, {\n        variant: \"outlined\",\n        label: \"currentNumber\",\n        id: \"currentNumber\",\n        type: \"text\",\n        value: this.state.roomRequest.updateCurrentNumber,\n        onChange: this.onchangCurrentNumberRoom,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      })), React.createElement(s__.TextFieldArea, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }, React.createElement(s__.ButtonSubmit, {\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"large\",\n        startIcon: React.createElement(SaveIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 285\n          },\n          __self: this\n        }),\n        onClick: this.saveUpdatePopup,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }, \"Save\")), React.createElement(s__.TextFieldArea, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }, React.createElement(s__.ButtonSubmit, {\n        variant: \"contained\",\n        color: \"default\",\n        size: \"large\",\n        startIcon: React.createElement(CloseIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 294\n          },\n          __self: this\n        }),\n        onClick: this.cancelPopup,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }, \"Cancel\")));\n    };\n\n    this.renderPopupInput = type => {\n      switch (type) {\n        case \"get\":\n          break;\n\n        case \"update\":\n          return React.createElement(React.Fragment, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 308\n            },\n            __self: this\n          }, this.renderUpdateForm());\n\n        case \"delete\":\n          break;\n\n        case \"insert\":\n          return React.createElement(React.Fragment, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 316\n            },\n            __self: this\n          }, this.renderInsertForm());\n      }\n    };\n\n    this.renderPopupInfo = type => {\n      switch (type) {\n        case \"get\":\n          break;\n\n        case \"update\":\n          return React.createElement(React.Fragment, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 330\n            },\n            __self: this\n          }, React.createElement(\"h1\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 331\n            },\n            __self: this\n          }, \"This Shift now have \", this.state.currentShift.idUser.length, \" person\"), React.createElement(\"h4\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 332\n            },\n            __self: this\n          }, \"Input and click on submit button to update number person on room, or click cancel to exist\"), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 333\n            },\n            __self: this\n          }, \"Start time: \", this.state.currentShift.startTime), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 334\n            },\n            __self: this\n          }, \"End time: \", this.state.currentShift.endTime));\n\n        case \"delete\":\n          break;\n\n        case \"insert\":\n          return React.createElement(React.Fragment, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 341\n            },\n            __self: this\n          }, React.createElement(\"h1\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 342\n            },\n            __self: this\n          }, \"Create Room\"), React.createElement(\"h4\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 343\n            },\n            __self: this\n          }, \"Input and click on submit button to create a new one, else click cancel to exist\"));\n      }\n    };\n\n    this.showPopup = type => {\n      return React.createElement(React.Fragment, null, React.createElement(s__.PopupBackground, {\n        onClick: this.cancelPopup,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353\n        },\n        __self: this\n      }), React.createElement(s__.PopupContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355\n        },\n        __self: this\n      }, React.createElement(s__.PopupInfo, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356\n        },\n        __self: this\n      }, this.renderPopupInfo(type)), React.createElement(s__.PopupInput, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359\n        },\n        __self: this\n      }, this.renderPopupInput(type))));\n    };\n\n    this.cancelPopup = () => {\n      this.setState({\n        showPopup: false\n      });\n    };\n\n    this.setShowPopupByType = type => {\n      switch (type) {\n        case \"update\":\n          this.setState({\n            updatemode: true,\n            featureType: type\n          });\n          break;\n\n        case \"delete\":\n          break;\n\n        case \"insert\":\n          this.setState({\n            featureType: type,\n            showPopup: true\n          });\n      }\n    };\n\n    this.setDeleteMode = () => {\n      this.setState({\n        deletemode: !this.state.deletemode\n      });\n    };\n\n    this.setUpdateMode = () => {\n      this.setState({\n        updatemode: !this.state.updatemode\n      });\n    };\n\n    this.setShowPopup = () => {\n      this.setState({\n        showPopup: !this.state.showPopup\n      });\n    };\n\n    this.donotthing = () => {\n      console.log(\"success\");\n    };\n\n    this.setDelAll = () => {\n      this.setState({\n        delAll: !this.state.delAll\n      });\n      console.log(this.state.delAll);\n    };\n\n    this.setInputSearch = event => {\n      this.setState({\n        valueInputSearch: event.target.value\n      });\n    };\n\n    this.onchangCurrentNumberRoom = event => {\n      let obj = this.state.roomRequest;\n      obj.updateCurrentNumber = event.target.value;\n      this.setState({\n        roomRequest: obj\n      });\n    };\n\n    this.onchangMaxNumberRoom = event => {\n      let obj = this.state.roomRequest;\n      obj.insertMaxNumber = event.target.value;\n      this.setState({\n        roomRequest: obj\n      });\n    };\n\n    this.onchangAddressRoom = event => {\n      let obj = this.state.roomRequest;\n      obj.insertAddress = event.target.value;\n      this.setState({\n        roomRequest: obj\n      });\n    };\n\n    this.onchangNameRoom = event => {\n      let obj = this.state.roomRequest;\n      obj.insertName = event.target.value;\n      this.setState({\n        roomRequest: obj\n      });\n    };\n\n    this.renderButton = () => {\n      return React.createElement(\"div\", {\n        style: {\n          backgroundColor: \"darkblue\",\n          height: \"auto\",\n          borderTopRightRadius: \"5px\",\n          borderTopLeftRadius: \"5px\",\n          padding: \"20px 0px 0px 20px\",\n          color: \"white\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 462\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        style: {\n          marginTop: \"0px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 471\n        },\n        __self: this\n      }, \"Shift\"), React.createElement(s__.FeatureArea, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 472\n        },\n        __self: this\n      }, React.createElement(s__.FeatureButton, {\n        onClick: () => this.setShowPopupByType(\"insert\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 473\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 473\n        },\n        __self: this\n      }, \"Insert\")), React.createElement(s__.FeatureButton, {\n        style: {\n          backgroundColor: this.state.updatemode ? \"tomato\" : \"\"\n        },\n        onClick: this.setUpdateMode,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 474\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 474\n        },\n        __self: this\n      }, this.state.updatemode ? \"Cancel\" : \"Update\")), React.createElement(s__.SearchInput, {\n        id: \"maxNumber\",\n        type: \"text\",\n        value: this.state.valueInputSearch,\n        placeholder: \"Search Room By Name\",\n        onChange: this.setInputSearch,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 475\n        },\n        __self: this\n      }), React.createElement(s__.FeatureButton, {\n        onClick: this.SearchValueInputSearch,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 482\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 482\n        },\n        __self: this\n      }, \"Search\")), React.createElement(s__.FeatureButton, {\n        style: {\n          backgroundColor: this.state.deletemode ? \"mediumspringgreen\" : \"\",\n          display: this.state.deletemode ? \"\" : \"none\"\n        },\n        onClick: this.deleteAllCheckd,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 483\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 483\n        },\n        __self: this\n      }, \"Save\")), React.createElement(s__.FeatureButton, {\n        style: {\n          backgroundColor: this.state.deletemode ? \"tomato\" : \"\"\n        },\n        onClick: this.setDeleteMode,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 484\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 484\n        },\n        __self: this\n      }, this.state.deletemode ? \"Cancel\" : \"Delete\"))));\n    };\n\n    this.deleteAllCheckd = () => {\n      console.log('deleteAllCheckd');\n      this.state.listDell.map(value => {\n        this.DeleteCurrent(value);\n      });\n      this.setState({\n        listDell: [],\n        deletemode: false\n      });\n      this.GETAll();\n    };\n\n    this.setIdCurrent = currentId => {\n      this.setState({\n        currentId\n      });\n    };\n\n    this.setListDel = () => {\n      let arr = this.state.listDell;\n\n      if (arr.indexOf(this.state.currentId) === -1) {\n        arr.push(this.state.currentId);\n        this.setState({\n          listDell: arr\n        });\n      } else {\n        arr.splice(arr.indexOf(this.state.currentId), 1);\n        this.setState({\n          listDell: arr\n        });\n      }\n    };\n\n    this.renderChildTableRoom = () => {\n      return this.state.shift.map(row => React.createElement(s__.TableRowInfo, {\n        key: row._id,\n        onClick: this.state.updatemode ? () => this.getIdRow(row, \"update\") : () => this.setIdCurrent(row._id),\n        onFocus: () => this.setIdCurrent(row._id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 527\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 529\n        },\n        __self: this\n      }, row.idUser.length), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 530\n        },\n        __self: this\n      }, row.startTime), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 531\n        },\n        __self: this\n      }, row.endTime), React.createElement(TableCell, {\n        align: \"right\",\n        style: {\n          display: this.state.deletemode ? \"\" : \"none\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 532\n        },\n        __self: this\n      }, React.createElement(Checkbox, {\n        size: \"small\",\n        onChange: this.setListDel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 533\n        },\n        __self: this\n      }))));\n    };\n\n    this.renderGrid = () => {\n      return React.createElement(\"div\", {\n        style: {\n          backgroundColor: \"lightcyan\",\n          overflow: \"auto\",\n          height: \"350px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 544\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 545\n        },\n        __self: this\n      }, React.createElement(Table, {\n        size: \"small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 546\n        },\n        __self: this\n      }, React.createElement(TableHead, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 547\n        },\n        __self: this\n      }, React.createElement(s__.TableRowHead, {\n        style: {\n          height: \"50px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 548\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 549\n        },\n        __self: this\n      }, \"Name\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 550\n        },\n        __self: this\n      }, \"Ship To\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 551\n        },\n        __self: this\n      }, \"Payment Method\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 552\n        },\n        __self: this\n      }, \"Address\"), React.createElement(TableCell, {\n        align: \"right\",\n        style: {\n          display: this.state.deletemode ? \"\" : \"none\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 553\n        },\n        __self: this\n      }, React.createElement(Checkbox, {\n        size: \"small\",\n        onChange: this.setDelAll,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 554\n        },\n        __self: this\n      })))), React.createElement(TableBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 560\n        },\n        __self: this\n      }, this.renderChildTableRoom()))));\n    };\n\n    this.renderPaper = () => {\n      return (// <s__.PaperDiv>\n        //   <s__.PaperDivNumber >\n        //     <p style={{margin:\"0px\"}} >1</p>\n        //     <p style={{margin:\"0px\"}} >2</p>\n        //     <p style={{margin:\"0px\"}} >3</p>\n        //   </s__.PaperDivNumber  >\n        // </s__.PaperDiv>\n        React.createElement(s__.PaperDiv, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 578\n          },\n          __self: this\n        }, React.createElement(s__.PaperDivNumber, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 579\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 579\n          },\n          __self: this\n        }, \"1\")), React.createElement(s__.PaperDivNumber, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 580\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 580\n          },\n          __self: this\n        }, \"2\")), React.createElement(s__.PaperDivNumber, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 581\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 581\n          },\n          __self: this\n        }, \"3\")), React.createElement(s__.PaperDivNumber, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 582\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 582\n          },\n          __self: this\n        }, \"4\")))\n      );\n    };\n  }\n\n  //circle\n  componentDidMount() {\n    console.log(this.state);\n    this.GETAll();\n    setInterval(() => {\n      console.log(this.state);\n    }, 2000);\n  } //API\n\n\n  //Main render\n  render() {\n    return React.createElement(s__.Container, {\n      style: {\n        paddingBottom: \"0px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 590\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 591\n      },\n      __self: this\n    }, this.state.showPopup ? this.showPopup(this.state.featureType) : React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 592\n      },\n      __self: this\n    }), this.renderButton(), this.renderGrid(), this.renderPaper()));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  UsersState: state.UsersState\n});\n\nexport default connect(mapStateToProps, {})(InfoTableShift); // demoClickRedirect = () => {\n//   this.setState({\n//     demo:false\n//   })\n// }\n// demoRedirect = ()=>{\n//   if(this.state.demo){\n//     return <React.Fragment/>\n//   }else{\n//     return <Redirect to=\"/about-us\"/>\n//   }\n// }","map":{"version":3,"sources":["C:/Users/HSONNL/Desktop/myProject/NCOV-19/Repo/NCOV-19Manager/client/src/component/InfoTableShift/index.tsx"],"names":["React","Component","s__","SaveIcon","CloseIcon","Table","TableBody","TableCell","TableHead","Checkbox","AdminAPI","DoctorAPI","RoomAPI","ShiftAPI","UserAPI","connect","initState","patient","shift","deletemode","updatemode","showPopup","numberPaper","featureType","delAll","listDell","valueInputSearch","roomRequest","updateCurrentNumber","insertMaxNumber","insertAddress","insertName","getallpage","getalltypesort","getallsearch","currentId","currentShift","idUser","_id","startTime","endTime","__v","InfoTableShift","token","state","adminApi","doctorApi","roomApi","shiftApi","userApi","InsertCurrent","formData","create","res","console","log","data","err","SearchValueInputSearch","DeleteCurrent","delete","UpdateCurrent","idRoom","upDate","GetUsers","userId","get","GETAll","FormData","append","getAll","caTruc","setState","getIdRow","saveInsertPopup","formdata","obj","cancelPopup","renderInsertForm","onchangMaxNumberRoom","onchangAddressRoom","onchangNameRoom","saveUpdatePopup","toString","renderUpdateForm","onchangCurrentNumberRoom","renderPopupInput","type","renderPopupInfo","length","setShowPopupByType","setDeleteMode","setUpdateMode","setShowPopup","donotthing","setDelAll","setInputSearch","event","target","value","renderButton","backgroundColor","height","borderTopRightRadius","borderTopLeftRadius","padding","color","marginTop","display","deleteAllCheckd","map","setIdCurrent","setListDel","arr","indexOf","push","splice","renderChildTableRoom","row","renderGrid","overflow","renderPaper","componentDidMount","setInterval","render","paddingBottom","mapStateToProps","UsersState"],"mappings":"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","sourcesContent":["import React, { Component, ChangeEvent } from \"react\";\r\n//style importer\r\nimport * as s__ from \"./style\";\r\nimport {Redirect} from 'react-router-dom'\r\n// import Link from '@material-ui/core/Link';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n// import Button from '@material-ui/core/Button';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport ClearAllIcon from '@material-ui/icons/ClearAll';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\n//component importer\r\n// import MainMenu from \"../MainMenu/index\";\r\n//utils importer\r\nimport AdminAPI from \"../../modules/api/admin\";\r\nimport DoctorAPI from \"../../modules/api/doctor\";\r\nimport RoomAPI from \"../../modules/api/room\";\r\nimport ShiftAPI from \"../../modules/api/shift\";\r\nimport UserAPI from \"../../modules/api/user\";\r\n//config importer\r\nimport {AdminRequest,DoctorRequest,RoomRequest,ShiftRequest,UserRequest} from \"../../config/requesttype\";\r\nimport * as api__ from \"../../config/apireturntype\";\r\nimport { Button } from \"@material-ui/core\";\r\n//global store\r\nimport { connect } from 'react-redux';\r\nimport {MainState} from '../../store/index';\r\n//type\r\nimport {UsersState} from '../../store/User/type';\r\n\r\n//typeInput\r\n\r\ninterface Props {\r\n  UsersState: UsersState\r\n}\r\n\r\ntype State =  typeof initState;\r\n\r\nconst initState = {\r\n  // room: [] as api__.Room[],\r\n  patient: [] as api__.Patient[],\r\n  shift:[] as api__.Shift[],\r\n\r\n  deletemode:false,\r\n  updatemode:false,\r\n  showPopup:false,\r\n  numberPaper:0,\r\n  featureType:\"get\" as \"update\" | \"delete\" | \"insert\",\r\n  delAll: false,\r\n  listDell:[] as string[],\r\n  valueInputSearch: '' as string,\r\n\r\n  roomRequest:{\r\n    updateCurrentNumber:'',\r\n    insertMaxNumber:'',\r\n    insertAddress:'',\r\n    insertName:'',\r\n    getallpage:'0',\r\n    getalltypesort:'1',\r\n    getallsearch:'A200'\r\n  } as RoomRequest,\r\n  currentId: '',\r\n  currentShift: {\r\n    idUser: [],\r\n    _id:'',\r\n    startTime: '',\r\n    endTime: '',\r\n    __v: 1\r\n  } as api__.Shift,\r\n}\r\n\r\nclass InfoTableShift extends Component<Props, State> {\r\n  token = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjVlYTJjYjEyNzhlN2M0MjExMDc4OWQ0ZiIsImlkUm9sZSI6eyJfaWQiOiI1ZWEyY2IxMDc4ZTdjNDIxMTA3ODlkNGUiLCJuYW1lIjoiU1VQRVJfQURNSU4iLCJfX3YiOjB9LCJpc0FjdGl2ZSI6ZmFsc2UsInJvbGVOYW1lIjoiU1VQRVJfQURNSU4iLCJpYXQiOjE1ODc4MDA5OTQsImV4cCI6MTU4Nzg0NDE5NH0.VrVQz_W0o-04TXdlGD9O2r4AW4ylNJajexWmItWrR0k\";\r\n  state = initState;\r\n  adminApi = new AdminAPI();\r\n  doctorApi = new DoctorAPI();\r\n  roomApi = new RoomAPI();\r\n  shiftApi = new ShiftAPI();\r\n  userApi = new UserAPI();\r\n\r\n  //circle\r\n  componentDidMount(){\r\n    console.log(this.state);\r\n    this.GETAll();\r\n    setInterval(()=>{\r\n      console.log(this.state);\r\n    },2000)\r\n  }\r\n\r\n  //API\r\n  InsertCurrent = (formData:FormData) => {\r\n    if(this.token){\r\n      this.roomApi.create(this.token,formData,(res:any)=>{\r\n        console.log(res.data);\r\n      }, \r\n      (err:string)=>{\r\n        console.log(err);\r\n        console.log(err);\r\n      })\r\n    }\r\n  }\r\n\r\n  SearchValueInputSearch = () => {\r\n    console.log('SearchValueInputSearch')\r\n  }\r\n\r\n  DeleteCurrent = (currentId:string) => {\r\n    if(this.token){\r\n      this.roomApi.delete(this.token,currentId,(res:any)=>{\r\n        console.log(res.data);\r\n      }, \r\n      (err:string)=>{\r\n        console.log(err);\r\n      })\r\n    }\r\n  }\r\n\r\n  UpdateCurrent = (idRoom:string,formData:FormData) => {\r\n    if(this.token){\r\n      this.roomApi.upDate(this.token,idRoom,formData,(res:any)=>{\r\n        console.log(res.data);\r\n      }, \r\n      (err:string)=>{\r\n        console.log(err);\r\n      })\r\n    }\r\n  }\r\n\r\n  GetUsers = (userId:string) => {\r\n    if(this.token){\r\n      this.roomApi.get(this.token,userId,(res:any)=>{\r\n        console.log(res.data);\r\n      },\r\n      (err:string)=>{\r\n        console.log(err);\r\n        console.log(err);\r\n      })\r\n    }\r\n  }\r\n\r\n  GETAll = () =>{\r\n    let formData = new FormData();\r\n    formData.append('page',this.state.roomRequest.getallpage);\r\n    formData.append('typesort',this.state.roomRequest.getalltypesort);\r\n    formData.append('search',this.state.roomRequest.getallsearch);\r\n    if(this.token){\r\n      this.shiftApi.getAll(this.token,(res:any)=>{\r\n        console.log(\"catruc\",res.data.caTruc);\r\n        this.setState({\r\n          shift:res.data.caTruc\r\n        })\r\n      }, \r\n      (err:string)=>{\r\n        console.log(err);\r\n        console.log(err);\r\n      })\r\n    }\r\n  }\r\n\r\n  ////\r\n  getIdRow=(shift:api__.Shift,featureType: \"update\" | \"delete\" | \"insert\")=>{\r\n    switch(featureType){\r\n      case \"update\":\r\n        this.setState({\r\n          currentShift:shift,\r\n          currentId:shift._id,\r\n          showPopup:true,\r\n          featureType\r\n        })\r\n        break;\r\n    }\r\n  }\r\n\r\n  saveInsertPopup = () => {\r\n    //room\r\n    let formdata = new FormData();\r\n    formdata.append('maxNumber',this.state.roomRequest.insertMaxNumber);\r\n    formdata.append('address',this.state.roomRequest.insertAddress);\r\n    formdata.append('name',this.state.roomRequest.insertName);\r\n    this.InsertCurrent(formdata);\r\n    let obj = this.state.roomRequest;\r\n    obj.insertMaxNumber = \"\";\r\n    obj.insertAddress = \"\";\r\n    obj.insertName = \"\";\r\n    this.setState({\r\n      roomRequest:obj\r\n    })\r\n    this.cancelPopup();\r\n    this.GETAll();\r\n  }\r\n\r\n  renderInsertForm = () => {\r\n    return (\r\n      <React.Fragment>\r\n        <s__.TextFieldArea>\r\n            <s__.TextInput\r\n              variant=\"outlined\"\r\n              label=\"maxNumber\"\r\n              id=\"maxNumber\"\r\n              type=\"text\"\r\n              value={this.state.roomRequest.insertMaxNumber}\r\n              placeholder=\"\"\r\n              onChange={this.onchangMaxNumberRoom}\r\n            />\r\n          </s__.TextFieldArea>\r\n          <s__.TextFieldArea>\r\n            <s__.TextInput\r\n              variant=\"outlined\"\r\n              label=\"address\"\r\n              id=\"address\"\r\n              type=\"text\"\r\n              value={this.state.roomRequest.insertAddress}\r\n              onChange={this.onchangAddressRoom}\r\n            />\r\n          </s__.TextFieldArea>\r\n          <s__.TextFieldArea>\r\n            <s__.TextInput\r\n              variant=\"outlined\"\r\n              label=\"name\"\r\n              id=\"name\"\r\n              type=\"text\"\r\n              value={this.state.roomRequest.insertName}\r\n              onChange={this.onchangNameRoom}\r\n            />\r\n          </s__.TextFieldArea>\r\n          <s__.TextFieldArea>\r\n            <s__.ButtonSubmit\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              size=\"large\"\r\n              startIcon={<SaveIcon />}\r\n              onClick={this.saveInsertPopup}\r\n            >Save</s__.ButtonSubmit>\r\n          </s__.TextFieldArea>\r\n          <s__.TextFieldArea>\r\n            <s__.ButtonSubmit\r\n              variant=\"contained\"\r\n              color=\"default\"\r\n              size=\"large\"\r\n              startIcon={<CloseIcon />}\r\n              onClick={this.cancelPopup}\r\n            >Cancel</s__.ButtonSubmit>\r\n          </s__.TextFieldArea>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n\r\n  saveUpdatePopup = () => {\r\n    let formdata = new FormData();\r\n    formdata.append('currentNumber',this.state.roomRequest.updateCurrentNumber.toString());\r\n    this.UpdateCurrent(this.state.currentId,formdata);\r\n    let obj = this.state.roomRequest;\r\n    obj.updateCurrentNumber = \"\";\r\n    this.setState({\r\n      roomRequest:obj\r\n    })\r\n    this.cancelPopup();\r\n    this.GETAll();\r\n  }\r\n\r\n  renderUpdateForm = () => {\r\n    return (\r\n      <React.Fragment>\r\n          <s__.TextFieldArea>\r\n            <s__.TextInput\r\n              variant=\"outlined\"\r\n              label=\"currentNumber\"\r\n              id=\"currentNumber\"\r\n              type=\"text\"\r\n              value={this.state.roomRequest.updateCurrentNumber}\r\n              onChange={this.onchangCurrentNumberRoom}\r\n            />\r\n          </s__.TextFieldArea>\r\n          <s__.TextFieldArea>\r\n            <s__.ButtonSubmit\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              size=\"large\"\r\n              startIcon={<SaveIcon />}\r\n              onClick={this.saveUpdatePopup}\r\n            >Save</s__.ButtonSubmit>\r\n          </s__.TextFieldArea>\r\n          <s__.TextFieldArea>\r\n            <s__.ButtonSubmit\r\n              variant=\"contained\"\r\n              color=\"default\"\r\n              size=\"large\"\r\n              startIcon={<CloseIcon />}\r\n              onClick={this.cancelPopup}\r\n            >Cancel</s__.ButtonSubmit>\r\n          </s__.TextFieldArea>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n\r\n  renderPopupInput = (type:string) => {\r\n    switch(type){\r\n      case \"get\":\r\n        break;\r\n      case \"update\":\r\n        return (\r\n          <React.Fragment>\r\n            {this.renderUpdateForm()}\r\n          </React.Fragment>\r\n        )\r\n      case \"delete\":\r\n        break;\r\n      case \"insert\":\r\n        return (\r\n          <React.Fragment>\r\n            {this.renderInsertForm()}\r\n          </React.Fragment>\r\n        )\r\n    }\r\n    \r\n  }\r\n\r\n  renderPopupInfo = (type:string) => {\r\n    switch(type){\r\n      case \"get\":\r\n        break;\r\n      case \"update\":\r\n        return (\r\n          <React.Fragment>\r\n            <h1>This Shift now have {this.state.currentShift.idUser.length} person</h1>\r\n            <h4>Input and click on submit button to update number person on room, or click cancel to exist</h4>\r\n            <p>Start time: {this.state.currentShift.startTime}</p>\r\n            <p>End time: {this.state.currentShift.endTime}</p>\r\n          </React.Fragment>\r\n        )\r\n      case \"delete\":\r\n        break;\r\n      case \"insert\":\r\n        return (\r\n          <React.Fragment>\r\n            <h1>Create Room</h1>\r\n            <h4>Input and click on submit button to create a new one, else click cancel to exist</h4>\r\n          </React.Fragment>\r\n        )\r\n    }\r\n  }\r\n\r\n  showPopup = (type:string) => {\r\n    \r\n    return (\r\n      <>\r\n        <s__.PopupBackground onClick={this.cancelPopup}>\r\n        </s__.PopupBackground>\r\n        <s__.PopupContainer>\r\n          <s__.PopupInfo>\r\n            {this.renderPopupInfo(type)}\r\n          </s__.PopupInfo>\r\n          <s__.PopupInput>\r\n            {this.renderPopupInput(type)}\r\n          </s__.PopupInput>\r\n        </s__.PopupContainer>\r\n      </>\r\n    )\r\n  }\r\n\r\n  cancelPopup=()=>{\r\n    this.setState({\r\n      showPopup:false\r\n    })\r\n  }\r\n\r\n  setShowPopupByType = (type:\"update\" | \"delete\" | \"insert\") => {\r\n    switch(type){\r\n      case \"update\":\r\n        this.setState({\r\n          updatemode:true,\r\n          featureType:type\r\n        })\r\n        break;\r\n      case \"delete\":\r\n        break;\r\n      case \"insert\":\r\n        this.setState({\r\n          featureType:type,\r\n          showPopup: true\r\n        })\r\n    }\r\n    \r\n  }\r\n\r\n  setDeleteMode = () => {\r\n    this.setState({\r\n      deletemode:!this.state.deletemode\r\n    })\r\n  }\r\n\r\n  setUpdateMode = () => {\r\n    this.setState({\r\n      updatemode:!this.state.updatemode\r\n    })\r\n  }\r\n\r\n  setShowPopup = () => {\r\n    this.setState({\r\n      showPopup:!this.state.showPopup\r\n    })\r\n  }\r\n\r\n  donotthing = () => {\r\n    console.log(\"success\");\r\n  }\r\n\r\n  setDelAll = () => {\r\n    this.setState({\r\n      delAll:!this.state.delAll,\r\n    })\r\n    console.log(this.state.delAll);\r\n  }\r\n\r\n  setInputSearch = (event: ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({\r\n      valueInputSearch: event.target.value\r\n    })\r\n  }\r\n\r\n  onchangCurrentNumberRoom = (event: ChangeEvent<HTMLInputElement>) => {\r\n    let obj = this.state.roomRequest;\r\n    obj.updateCurrentNumber = event.target.value;\r\n    this.setState({\r\n      roomRequest:obj\r\n    })\r\n  }\r\n\r\n  onchangMaxNumberRoom = (event: ChangeEvent<HTMLInputElement>) => {\r\n    let obj = this.state.roomRequest;\r\n    obj.insertMaxNumber = event.target.value;\r\n    this.setState({\r\n      roomRequest:obj\r\n    })\r\n  }\r\n\r\n  onchangAddressRoom = (event: ChangeEvent<HTMLInputElement>) => {\r\n    let obj = this.state.roomRequest;\r\n    obj.insertAddress = event.target.value;\r\n    this.setState({\r\n      roomRequest:obj\r\n    })\r\n  }\r\n\r\n  onchangNameRoom = (event: ChangeEvent<HTMLInputElement>) => {\r\n    let obj = this.state.roomRequest;\r\n    obj.insertName = event.target.value;\r\n    this.setState({\r\n      roomRequest:obj\r\n    })\r\n  }\r\n\r\n  //Render\r\n  renderButton= () =>{\r\n    return (\r\n      <div style={{\r\n        backgroundColor:\"darkblue\",\r\n        height:\"auto\",\r\n        borderTopRightRadius:\"5px\", \r\n        borderTopLeftRadius:\"5px\",\r\n        padding:\"20px 0px 0px 20px\",\r\n        color:\"white\"\r\n        }}\r\n      >\r\n        <h1 style={{marginTop:\"0px\"}}>Shift</h1>\r\n        <s__.FeatureArea>\r\n          <s__.FeatureButton onClick={()=>this.setShowPopupByType(\"insert\")}><p>Insert</p></s__.FeatureButton>\r\n          <s__.FeatureButton style={{backgroundColor:this.state.updatemode?\"tomato\":\"\"}} onClick={this.setUpdateMode}><p>{this.state.updatemode?\"Cancel\":\"Update\"}</p></s__.FeatureButton>\r\n          <s__.SearchInput\r\n            id=\"maxNumber\"\r\n            type=\"text\"\r\n            value={this.state.valueInputSearch}\r\n            placeholder=\"Search Room By Name\"\r\n            onChange={this.setInputSearch}\r\n          />\r\n          <s__.FeatureButton onClick={this.SearchValueInputSearch}><p>Search</p></s__.FeatureButton>\r\n          <s__.FeatureButton style={{backgroundColor:this.state.deletemode?\"mediumspringgreen\":\"\",display:this.state.deletemode?\"\":\"none\"}} onClick={this.deleteAllCheckd}><p>Save</p></s__.FeatureButton>\r\n          <s__.FeatureButton style={{backgroundColor:this.state.deletemode?\"tomato\":\"\"}} onClick={this.setDeleteMode}><p>{this.state.deletemode?\"Cancel\":\"Delete\"}</p></s__.FeatureButton>\r\n        </s__.FeatureArea>\r\n        \r\n      </div>\r\n      \r\n    )\r\n  }\r\n\r\n  deleteAllCheckd= () =>{\r\n    console.log('deleteAllCheckd');\r\n    this.state.listDell.map(value => {\r\n      this.DeleteCurrent(value);\r\n    })\r\n    this.setState({\r\n      listDell:[],\r\n      deletemode:false\r\n    })\r\n    this.GETAll();\r\n  }\r\n\r\n  setIdCurrent = (currentId:string) => {\r\n    this.setState({\r\n      currentId\r\n    })\r\n  }\r\n\r\n  setListDel = () => {\r\n    let arr = this.state.listDell;\r\n    if(arr.indexOf(this.state.currentId)===-1){\r\n      arr.push(this.state.currentId)\r\n      this.setState({\r\n        listDell:arr\r\n      })\r\n    }else{\r\n      arr.splice(arr.indexOf(this.state.currentId),1)\r\n      this.setState({\r\n        listDell:arr\r\n      })\r\n    }\r\n  }\r\n\r\n  renderChildTableRoom = () => {\r\n    return this.state.shift.map((row) => (\r\n      <s__.TableRowInfo key={row._id} onClick={this.state.updatemode?()=>this.getIdRow(row,\"update\"):()=>this.setIdCurrent(row._id)}\r\n      onFocus={()=>this.setIdCurrent(row._id)}>\r\n        <TableCell>{row.idUser.length}</TableCell>\r\n        <TableCell>{row.startTime}</TableCell>\r\n        <TableCell>{row.endTime}</TableCell>\r\n        <TableCell align=\"right\" style={{display:this.state.deletemode?\"\":\"none\"}} >\r\n          <Checkbox \r\n            size=\"small\"\r\n            onChange={this.setListDel}  \r\n          />\r\n        </TableCell>\r\n      </s__.TableRowInfo>\r\n    ))\r\n  }\r\n\r\n  renderGrid = () =>{\r\n    return (\r\n    <div style={{backgroundColor:\"lightcyan\",overflow:\"auto\",height:\"350px\"}}>\r\n      <div >\r\n        <Table size=\"small\">\r\n          <TableHead >\r\n            <s__.TableRowHead style={{height:\"50px\"}}>\r\n              <TableCell>Name</TableCell>\r\n              <TableCell>Ship To</TableCell>\r\n              <TableCell>Payment Method</TableCell>\r\n              <TableCell>Address</TableCell>\r\n              <TableCell align=\"right\" style={{display:this.state.deletemode?\"\":\"none\"}}>\r\n                <Checkbox \r\n                  size=\"small\"\r\n                  onChange={this.setDelAll}/>\r\n              </TableCell>\r\n            </s__.TableRowHead>\r\n          </TableHead>\r\n          <TableBody>\r\n            {this.renderChildTableRoom()}\r\n          </TableBody>\r\n        </Table>\r\n      </div>\r\n    </div>\r\n  )\r\n  }\r\n\r\n  renderPaper = () =>{\r\n    return (\r\n      // <s__.PaperDiv>\r\n      //   <s__.PaperDivNumber >\r\n      //     <p style={{margin:\"0px\"}} >1</p>\r\n      //     <p style={{margin:\"0px\"}} >2</p>\r\n      //     <p style={{margin:\"0px\"}} >3</p>\r\n      //   </s__.PaperDivNumber  >\r\n      // </s__.PaperDiv>\r\n        <s__.PaperDiv>\r\n          <s__.PaperDivNumber><p>1</p></s__.PaperDivNumber>\r\n          <s__.PaperDivNumber><p>2</p></s__.PaperDivNumber>\r\n          <s__.PaperDivNumber><p>3</p></s__.PaperDivNumber>\r\n          <s__.PaperDivNumber><p>4</p></s__.PaperDivNumber>\r\n        </s__.PaperDiv>\r\n    )\r\n  }\r\n\r\n  //Main render\r\n  render() {\r\n    return (\r\n      <s__.Container style={{paddingBottom:\"0px\"}}>\r\n        <div>\r\n          {this.state.showPopup?this.showPopup(this.state.featureType):<React.Fragment/>}\r\n          {this.renderButton()}\r\n          {this.renderGrid()}\r\n          {this.renderPaper()}\r\n        </div>\r\n      </s__.Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state:MainState) =>({\r\n  UsersState: state.UsersState\r\n});\r\nexport default connect(mapStateToProps,{})(InfoTableShift);\r\n\r\n\r\n// demoClickRedirect = () => {\r\n//   this.setState({\r\n//     demo:false\r\n//   })\r\n// }\r\n\r\n// demoRedirect = ()=>{\r\n//   if(this.state.demo){\r\n//     return <React.Fragment/>\r\n//   }else{\r\n//     return <Redirect to=\"/about-us\"/>\r\n//   }\r\n// }"]},"metadata":{},"sourceType":"module"}