{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HSONNL\\\\Desktop\\\\myProject\\\\NCOV-19\\\\Repo\\\\NCOV-19Manager\\\\client\\\\src\\\\component\\\\InfoTablePatient\\\\index.tsx\";\nimport React, { Component } from \"react\"; //style importer\n\nimport * as s__ from \"./style\";\nimport SaveIcon from '@material-ui/icons/Save';\nimport CloseIcon from '@material-ui/icons/Close'; // import Button from '@material-ui/core/Button';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete'; //component importer\n// import MainMenu from \"../MainMenu/index\";\n//utils importer\n\nimport AdminAPI from \"../../modules/api/admin\";\nimport DoctorAPI from \"../../modules/api/doctor\";\nimport RoomAPI from \"../../modules/api/room\";\nimport ShiftAPI from \"../../modules/api/shift\";\nimport UserAPI from \"../../modules/api/user\"; //config importer\n\n//global store\nimport { connect } from 'react-redux';\nconst initState = {\n  room: [],\n  patient: [],\n  shift: [],\n  demo: true,\n  deletemode: false,\n  updatemode: false,\n  showPopup: false,\n  numberPaper: 0,\n  featureType: \"get\",\n  valueInputSearch: '',\n  patientRequest: {\n    insertaddress: '',\n    insertpassword: '',\n    insertphonenumber: '',\n    insertdayofbirth: '',\n    insertidentitycard: '',\n    insertfullname: '',\n    insertemail: '',\n    insertgender: '',\n    getallpage: '',\n    getalltypesort: '',\n    getallsearch: '',\n    addPatientToRoomidRoom: ''\n  },\n  currentId: '',\n  currentPatient: {\n    avatars: [],\n    gender: -1,\n    isActive: true,\n    gps: [],\n    _id: '',\n    address: '',\n    password: '',\n    phoneNumber: '',\n    dateOfBirth: '',\n    identityCard: '',\n    fullName: '',\n    email: '',\n    idRole: {\n      __id: '',\n      name: '',\n      __v: -1\n    },\n    __v: -1\n  }\n};\n\nclass InfoTablePatient extends Component {\n  constructor(...args) {\n    super(...args);\n    this.token = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjVlYTJjYjEyNzhlN2M0MjExMDc4OWQ0ZiIsImlkUm9sZSI6eyJfaWQiOiI1ZWEyY2IxMDc4ZTdjNDIxMTA3ODlkNGUiLCJuYW1lIjoiU1VQRVJfQURNSU4iLCJfX3YiOjB9LCJpc0FjdGl2ZSI6ZmFsc2UsInJvbGVOYW1lIjoiU1VQRVJfQURNSU4iLCJpYXQiOjE1ODc4MDA5OTQsImV4cCI6MTU4Nzg0NDE5NH0.VrVQz_W0o-04TXdlGD9O2r4AW4ylNJajexWmItWrR0k\";\n    this.state = initState;\n    this.adminApi = new AdminAPI();\n    this.doctorApi = new DoctorAPI();\n    this.roomApi = new RoomAPI();\n    this.shiftApi = new ShiftAPI();\n    this.userApi = new UserAPI();\n\n    this.AddPatienToRoom = (formData, idPatient) => {\n      if (this.token) {\n        this.doctorApi.addPatientToRoom(this.token, idPatient, formData, res => {\n          console.log(res.data);\n        }, err => {\n          console.log(err);\n          console.log(err);\n        });\n      }\n    };\n\n    this.RegisterPatient = formData => {\n      if (this.token) {\n        this.doctorApi.registerPatient(this.token, formData, res => {\n          console.log(res.data);\n        }, err => {\n          console.log(err);\n          console.log(err);\n        });\n      }\n    };\n\n    this.SearchValueInputSearch = () => {\n      console.log('SearchValueInputSearch');\n    };\n\n    this.GetUsers = userId => {// if(this.token){\n      //   this.doctorApi.get(this.token,userId,(res:any)=>{\n      //     console.log(res.data);\n      //   },\n      //   (err:string)=>{\n      //     console.log(err);\n      //     console.log(err);\n      //   })\n      // }\n    };\n\n    this.GETAll = () => {\n      let formData = new FormData();\n      formData.append('page', this.state.patientRequest.getallpage);\n      formData.append('typesort', this.state.patientRequest.getalltypesort);\n      formData.append('search', this.state.patientRequest.getallsearch);\n\n      if (this.token) {\n        this.doctorApi.getListPatient(this.token, res => {\n          console.log(res.data);\n          this.setState({\n            patient: res.data.users\n          });\n        }, err => {\n          console.log(err);\n          console.log(err);\n        });\n      }\n    };\n\n    this.getIdRow = (room, featureType) => {\n      switch (featureType) {\n        case \"update\":\n          this.setState({\n            currentPatient: room,\n            currentId: room._id,\n            showPopup: true,\n            featureType\n          });\n          break;\n      }\n    };\n\n    this.saveInsertPopup = () => {\n      let formdata = new FormData();\n      formdata.append('address', this.state.patientRequest.insertaddress);\n      formdata.append('password', this.state.patientRequest.insertpassword);\n      formdata.append('phoneNumber', this.state.patientRequest.insertphonenumber);\n      formdata.append('dateOfBirth', this.state.patientRequest.insertdayofbirth);\n      formdata.append('identityCard', this.state.patientRequest.insertidentitycard);\n      formdata.append('fullName', this.state.patientRequest.insertfullname);\n      formdata.append('email', this.state.patientRequest.insertemail);\n      formdata.append('gender', this.state.patientRequest.insertgender);\n      this.RegisterPatient(formdata);\n      let obj = this.state.patientRequest;\n      obj.insertaddress = \"\";\n      obj.insertpassword = \"\";\n      obj.insertphonenumber = \"\";\n      obj.insertdayofbirth = \"\";\n      obj.insertidentitycard = \"\";\n      obj.insertfullname = \"\";\n      obj.insertemail = \"\";\n      obj.insertgender = \"\";\n      this.setState({\n        patientRequest: obj\n      });\n      this.cancelPopup();\n      this.GETAll();\n    };\n\n    this.renderInsertForm = () => {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, React.createElement(s__.TextFieldArea, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, React.createElement(s__.TextInput, {\n        variant: \"outlined\",\n        label: \"Address\",\n        id: \"Address\",\n        type: \"text\",\n        value: this.state.patientRequest.insertaddress,\n        placeholder: \"\",\n        onChange: this.onchangAddressPatient,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      })), React.createElement(s__.TextFieldArea, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, React.createElement(s__.TextInput, {\n        variant: \"outlined\",\n        label: \"Password\",\n        id: \"Password\",\n        type: \"text\",\n        value: this.state.patientRequest.insertpassword,\n        placeholder: \"\",\n        onChange: this.onchangPasswordPatient,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      })), React.createElement(s__.TextFieldArea, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, React.createElement(s__.TextInput, {\n        variant: \"outlined\",\n        label: \"PhoneNumber\",\n        id: \"PhoneNumber\",\n        type: \"text\",\n        value: this.state.patientRequest.insertphonenumber,\n        placeholder: \"\",\n        onChange: this.onchangPhoneNumberPatient,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      })), React.createElement(s__.TextFieldArea, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, React.createElement(s__.TextInput, {\n        variant: \"outlined\",\n        label: \"Date of Birth\",\n        id: \"Date of Birth\",\n        type: \"text\",\n        value: this.state.patientRequest.insertdayofbirth,\n        placeholder: \"\",\n        onChange: this.onchangDateofBirthPatient,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      })), React.createElement(s__.TextFieldArea, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, React.createElement(s__.TextInput, {\n        variant: \"outlined\",\n        label: \"Identity Card\",\n        id: \"Identity Card\",\n        type: \"text\",\n        value: this.state.patientRequest.insertidentitycard,\n        placeholder: \"\",\n        onChange: this.onchangIdentityCardPatient,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      })), React.createElement(s__.TextFieldArea, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }, React.createElement(s__.TextInput, {\n        variant: \"outlined\",\n        label: \"Full Name\",\n        id: \"Full Name\",\n        type: \"text\",\n        value: this.state.patientRequest.insertfullname,\n        placeholder: \"\",\n        onChange: this.onchangFullNamePatient,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      })), React.createElement(s__.TextFieldArea, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }, React.createElement(s__.TextInput, {\n        variant: \"outlined\",\n        label: \"Email\",\n        id: \"Email\",\n        type: \"text\",\n        value: this.state.patientRequest.insertemail,\n        placeholder: \"\",\n        onChange: this.onchangEmailPatient,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      })), React.createElement(s__.TextFieldArea, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }, React.createElement(s__.TextInput, {\n        variant: \"outlined\",\n        label: \"Gender\",\n        id: \"Gender\",\n        type: \"text\",\n        value: this.state.patientRequest.insertgender,\n        placeholder: \"\",\n        onChange: this.onchangGenderPatient,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      })), React.createElement(s__.TextFieldArea, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }, React.createElement(s__.ButtonSubmit, {\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"large\",\n        startIcon: React.createElement(SaveIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 311\n          },\n          __self: this\n        }),\n        onClick: this.saveInsertPopup,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      }, \"Save\")), React.createElement(s__.TextFieldArea, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315\n        },\n        __self: this\n      }, React.createElement(s__.ButtonSubmit, {\n        variant: \"contained\",\n        color: \"default\",\n        size: \"large\",\n        startIcon: React.createElement(CloseIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 320\n          },\n          __self: this\n        }),\n        onClick: this.cancelPopup,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      }, \"Cancel\")));\n    };\n\n    this.saveUpdatePopup = () => {\n      let formdata = new FormData();\n      formdata.append('idRoom', this.state.patientRequest.addPatientToRoomidRoom.toString());\n      this.AddPatienToRoom(formdata, this.state.currentId);\n      let obj = this.state.patientRequest;\n      obj.addPatientToRoomidRoom = \"\";\n      this.setState({\n        patientRequest: obj\n      });\n      this.cancelPopup();\n      this.GETAll();\n    };\n\n    this.renderUpdateForm = () => {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343\n        },\n        __self: this\n      }, React.createElement(s__.TextFieldArea, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344\n        },\n        __self: this\n      }, React.createElement(s__.TextInput, {\n        variant: \"outlined\",\n        label: \"idRoom\",\n        id: \"idRoom\",\n        type: \"text\",\n        value: this.state.patientRequest.addPatientToRoomidRoom,\n        onChange: this.onchangidRoomPatient,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345\n        },\n        __self: this\n      })), React.createElement(Autocomplete, {\n        id: \"country-select-demo\",\n        style: {\n          width: 300\n        },\n        options: room,\n        autoHighlight: true,\n        getOptionLabel: option => option.label,\n        renderOption: option => React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 361\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 362\n          },\n          __self: this\n        }, countryToFlag(option.code)), option.label, \" (\", option.code, \") +\", option.phone),\n        renderInput: params => React.createElement(TextField, Object.assign({}, params, {\n          label: \"Choose a Room\",\n          variant: \"outlined\",\n          inputProps: { ...params.inputProps,\n            autoComplete: 'new-password' // disable autocomplete and autofill\n\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 367\n          },\n          __self: this\n        })),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354\n        },\n        __self: this\n      }), React.createElement(s__.TextFieldArea, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378\n        },\n        __self: this\n      }, React.createElement(s__.ButtonSubmit, {\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"large\",\n        startIcon: React.createElement(SaveIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 383\n          },\n          __self: this\n        }),\n        onClick: this.saveUpdatePopup,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379\n        },\n        __self: this\n      }, \"Save\")), React.createElement(s__.TextFieldArea, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387\n        },\n        __self: this\n      }, React.createElement(s__.ButtonSubmit, {\n        variant: \"contained\",\n        color: \"default\",\n        size: \"large\",\n        startIcon: React.createElement(CloseIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 392\n          },\n          __self: this\n        }),\n        onClick: this.cancelPopup,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388\n        },\n        __self: this\n      }, \"Cancel\")));\n    };\n\n    this.renderPopupInput = type => {\n      switch (type) {\n        case \"get\":\n          break;\n\n        case \"update\":\n          return React.createElement(React.Fragment, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 406\n            },\n            __self: this\n          }, this.renderUpdateForm());\n\n        case \"delete\":\n          break;\n\n        case \"insert\":\n          return React.createElement(React.Fragment, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 414\n            },\n            __self: this\n          }, this.renderInsertForm());\n      }\n    };\n\n    this.renderPopupInfo = type => {\n      switch (type) {\n        case \"get\":\n          break;\n\n        case \"update\":\n          return React.createElement(React.Fragment, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 428\n            },\n            __self: this\n          }, React.createElement(\"h1\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 429\n            },\n            __self: this\n          }, \"Add Patient \", this.state.currentPatient.fullName, \" to room\"), React.createElement(\"h4\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 430\n            },\n            __self: this\n          }, \"Input and click on submit button to update number person on room, or click cancel to exist\"), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 431\n            },\n            __self: this\n          }, \"Date of birth: \", this.state.currentPatient.dateOfBirth), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 432\n            },\n            __self: this\n          }, \"Email: \", this.state.currentPatient.email), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 433\n            },\n            __self: this\n          }, \"Indentity Card: \", this.state.currentPatient.identityCard));\n\n        case \"delete\":\n          break;\n\n        case \"insert\":\n          return React.createElement(React.Fragment, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 440\n            },\n            __self: this\n          }, React.createElement(\"h1\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 441\n            },\n            __self: this\n          }, \"Regiter Patient\"), React.createElement(\"h4\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 442\n            },\n            __self: this\n          }, \"Input and click on submit button to create a new one, else click cancel to exist\"));\n      }\n    };\n\n    this.showPopup = type => {\n      return React.createElement(React.Fragment, null, React.createElement(s__.PopupBackground, {\n        onClick: this.cancelPopup,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 452\n        },\n        __self: this\n      }), React.createElement(s__.PopupContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 454\n        },\n        __self: this\n      }, React.createElement(s__.PopupInfo, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 455\n        },\n        __self: this\n      }, this.renderPopupInfo(type)), React.createElement(s__.PopupInput, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 458\n        },\n        __self: this\n      }, this.renderPopupInput(type))));\n    };\n\n    this.cancelPopup = () => {\n      this.setState({\n        showPopup: false\n      });\n    };\n\n    this.setShowPopupByType = type => {\n      switch (type) {\n        case \"update\":\n          this.setState({\n            updatemode: true,\n            featureType: type\n          });\n          break;\n\n        case \"delete\":\n          break;\n\n        case \"insert\":\n          this.setState({\n            featureType: type,\n            showPopup: true\n          });\n      }\n    };\n\n    this.setDeleteMode = () => {\n      this.setState({\n        deletemode: !this.state.deletemode\n      });\n    };\n\n    this.setUpdateMode = () => {\n      this.setState({\n        updatemode: !this.state.updatemode\n      });\n    };\n\n    this.setShowPopup = () => {\n      this.setState({\n        showPopup: !this.state.showPopup\n      });\n    };\n\n    this.donotthing = () => {\n      console.log(\"success\");\n    };\n\n    this.setInputSearch = event => {\n      this.setState({\n        valueInputSearch: event.target.value\n      });\n    };\n\n    this.onchangAddressPatient = event => {\n      let obj = this.state.patientRequest;\n      obj.insertaddress = event.target.value;\n      this.setState({\n        patientRequest: obj\n      });\n    };\n\n    this.onchangPasswordPatient = event => {\n      let obj = this.state.patientRequest;\n      obj.insertpassword = event.target.value;\n      this.setState({\n        patientRequest: obj\n      });\n    };\n\n    this.onchangPhoneNumberPatient = event => {\n      let obj = this.state.patientRequest;\n      obj.insertphonenumber = event.target.value;\n      this.setState({\n        patientRequest: obj\n      });\n    };\n\n    this.onchangDateofBirthPatient = event => {\n      let obj = this.state.patientRequest;\n      obj.insertdayofbirth = event.target.value;\n      this.setState({\n        patientRequest: obj\n      });\n    };\n\n    this.onchangIdentityCardPatient = event => {\n      let obj = this.state.patientRequest;\n      obj.insertidentitycard = event.target.value;\n      this.setState({\n        patientRequest: obj\n      });\n    };\n\n    this.onchangFullNamePatient = event => {\n      let obj = this.state.patientRequest;\n      obj.insertfullname = event.target.value;\n      this.setState({\n        patientRequest: obj\n      });\n    };\n\n    this.onchangEmailPatient = event => {\n      let obj = this.state.patientRequest;\n      obj.insertemail = event.target.value;\n      this.setState({\n        patientRequest: obj\n      });\n    };\n\n    this.onchangGenderPatient = event => {\n      let obj = this.state.patientRequest;\n      obj.insertgender = event.target.value;\n      this.setState({\n        patientRequest: obj\n      });\n    };\n\n    this.onchangidRoomPatient = event => {\n      let obj = this.state.patientRequest;\n      obj.addPatientToRoomidRoom = event.target.value;\n      this.setState({\n        patientRequest: obj\n      });\n    };\n\n    this.renderButton = () => {\n      return React.createElement(\"div\", {\n        style: {\n          backgroundColor: \"darkblue\",\n          height: \"auto\",\n          borderTopRightRadius: \"5px\",\n          borderTopLeftRadius: \"5px\",\n          padding: \"20px 0px 0px 20px\",\n          color: \"white\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 589\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        style: {\n          marginTop: \"0px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 598\n        },\n        __self: this\n      }, \"Patient\"), React.createElement(s__.FeatureArea, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 599\n        },\n        __self: this\n      }, React.createElement(s__.FeatureButton, {\n        onClick: () => this.setShowPopupByType(\"insert\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 600\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 600\n        },\n        __self: this\n      }, \"Register Patient\")), React.createElement(s__.FeatureButton, {\n        style: {\n          backgroundColor: this.state.updatemode ? \"tomato\" : \"\"\n        },\n        onClick: this.setUpdateMode,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 601\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 601\n        },\n        __self: this\n      }, this.state.updatemode ? \"Cancel\" : \"Add Patient To Room\")), React.createElement(s__.SearchInput, {\n        id: \"maxNumber\",\n        type: \"text\",\n        value: this.state.valueInputSearch,\n        placeholder: \"Search Room By Name\",\n        onChange: this.setInputSearch,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 602\n        },\n        __self: this\n      }), React.createElement(s__.FeatureButton, {\n        onClick: this.SearchValueInputSearch,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 609\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 609\n        },\n        __self: this\n      }, \"Search\"))));\n    };\n\n    this.setIdCurrent = currentId => {\n      this.setState({\n        currentId\n      });\n    };\n\n    this.renderChildTableRoom = () => {\n      return this.state.patient.map(row => React.createElement(s__.TableRowInfo, {\n        key: row._id,\n        onClick: this.state.updatemode ? () => this.getIdRow(row, \"update\") : () => this.setIdCurrent(row._id),\n        onFocus: () => this.setIdCurrent(row._id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 625\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 627\n        },\n        __self: this\n      }, row.fullName), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 628\n        },\n        __self: this\n      }, row.gender), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 629\n        },\n        __self: this\n      }, row.identityCard), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 630\n        },\n        __self: this\n      }, row.phoneNumber), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 631\n        },\n        __self: this\n      }, row.dateOfBirth), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 632\n        },\n        __self: this\n      }, row.address)));\n    };\n\n    this.renderGrid = () => {\n      return React.createElement(\"div\", {\n        style: {\n          backgroundColor: \"lightcyan\",\n          overflow: \"auto\",\n          height: \"350px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 639\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 640\n        },\n        __self: this\n      }, React.createElement(Table, {\n        size: \"small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 641\n        },\n        __self: this\n      }, React.createElement(TableHead, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 642\n        },\n        __self: this\n      }, React.createElement(s__.TableRowHead, {\n        style: {\n          height: \"50px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 643\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 644\n        },\n        __self: this\n      }, \"FullName\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 645\n        },\n        __self: this\n      }, \"Gender\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 646\n        },\n        __self: this\n      }, \"IdentityCard\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 647\n        },\n        __self: this\n      }, \"PhoneNumber\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 648\n        },\n        __self: this\n      }, \"DateOfBirth\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 649\n        },\n        __self: this\n      }, \"Address\"))), React.createElement(TableBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 652\n        },\n        __self: this\n      }, this.renderChildTableRoom()))));\n    };\n\n    this.renderPaper = () => {\n      return (// <s__.PaperDiv>\n        //   <s__.PaperDivNumber >\n        //     <p style={{margin:\"0px\"}} >1</p>\n        //     <p style={{margin:\"0px\"}} >2</p>\n        //     <p style={{margin:\"0px\"}} >3</p>\n        //   </s__.PaperDivNumber  >\n        // </s__.PaperDiv>\n        React.createElement(s__.PaperDiv, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 670\n          },\n          __self: this\n        }, React.createElement(s__.PaperDivNumber, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 671\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 671\n          },\n          __self: this\n        }, \"1\")), React.createElement(s__.PaperDivNumber, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 672\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 672\n          },\n          __self: this\n        }, \"2\")), React.createElement(s__.PaperDivNumber, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 673\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 673\n          },\n          __self: this\n        }, \"3\")), React.createElement(s__.PaperDivNumber, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 674\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 674\n          },\n          __self: this\n        }, \"4\")))\n      );\n    };\n  }\n\n  //circle\n  componentDidMount() {\n    console.log(this.state);\n    this.GETAll();\n    setInterval(() => {\n      console.log(this.state);\n    }, 2000);\n  } //API\n\n\n  //Main render\n  render() {\n    return React.createElement(s__.Container, {\n      style: {\n        paddingBottom: \"0px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 682\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 683\n      },\n      __self: this\n    }, this.state.showPopup ? this.showPopup(this.state.featureType) : React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 684\n      },\n      __self: this\n    }), this.renderButton(), this.renderGrid(), this.renderPaper()));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  UsersState: state.UsersState\n});\n\nexport default connect(mapStateToProps, {})(InfoTablePatient); // demoClickRedirect = () => {\n//   this.setState({\n//     demo:false\n//   })\n// }\n// demoRedirect = ()=>{\n//   if(this.state.demo){\n//     return <React.Fragment/>\n//   }else{\n//     return <Redirect to=\"/about-us\"/>\n//   }\n// }","map":{"version":3,"sources":["C:/Users/HSONNL/Desktop/myProject/NCOV-19/Repo/NCOV-19Manager/client/src/component/InfoTablePatient/index.tsx"],"names":["React","Component","s__","SaveIcon","CloseIcon","Table","TableBody","TableCell","TableHead","TextField","Autocomplete","AdminAPI","DoctorAPI","RoomAPI","ShiftAPI","UserAPI","connect","initState","room","patient","shift","demo","deletemode","updatemode","showPopup","numberPaper","featureType","valueInputSearch","patientRequest","insertaddress","insertpassword","insertphonenumber","insertdayofbirth","insertidentitycard","insertfullname","insertemail","insertgender","getallpage","getalltypesort","getallsearch","addPatientToRoomidRoom","currentId","currentPatient","avatars","gender","isActive","gps","_id","address","password","phoneNumber","dateOfBirth","identityCard","fullName","email","idRole","__id","name","__v","InfoTablePatient","token","state","adminApi","doctorApi","roomApi","shiftApi","userApi","AddPatienToRoom","formData","idPatient","addPatientToRoom","res","console","log","data","err","RegisterPatient","registerPatient","SearchValueInputSearch","GetUsers","userId","GETAll","FormData","append","getListPatient","setState","users","getIdRow","saveInsertPopup","formdata","obj","cancelPopup","renderInsertForm","onchangAddressPatient","onchangPasswordPatient","onchangPhoneNumberPatient","onchangDateofBirthPatient","onchangIdentityCardPatient","onchangFullNamePatient","onchangEmailPatient","onchangGenderPatient","saveUpdatePopup","toString","renderUpdateForm","onchangidRoomPatient","width","option","label","countryToFlag","code","phone","params","inputProps","autoComplete","renderPopupInput","type","renderPopupInfo","setShowPopupByType","setDeleteMode","setUpdateMode","setShowPopup","donotthing","setInputSearch","event","target","value","renderButton","backgroundColor","height","borderTopRightRadius","borderTopLeftRadius","padding","color","marginTop","setIdCurrent","renderChildTableRoom","map","row","renderGrid","overflow","renderPaper","componentDidMount","setInterval","render","paddingBottom","mapStateToProps","UsersState"],"mappings":"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","sourcesContent":["import React, { Component, ChangeEvent } from \"react\";\r\n//style importer\r\nimport * as s__ from \"./style\";\r\nimport {Redirect} from 'react-router-dom'\r\n// import Link from '@material-ui/core/Link';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n// import Button from '@material-ui/core/Button';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport ClearAllIcon from '@material-ui/icons/ClearAll';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\n//component importer\r\n// import MainMenu from \"../MainMenu/index\";\r\n//utils importer\r\nimport AdminAPI from \"../../modules/api/admin\";\r\nimport DoctorAPI from \"../../modules/api/doctor\";\r\nimport RoomAPI from \"../../modules/api/room\";\r\nimport ShiftAPI from \"../../modules/api/shift\";\r\nimport UserAPI from \"../../modules/api/user\";\r\n//config importer\r\nimport {AdminRequest,DoctorRequest,RoomRequest,ShiftRequest,UserRequest} from \"../../config/requesttype\";\r\nimport * as api__ from \"../../config/apireturntype\";\r\nimport { Button } from \"@material-ui/core\";\r\n//global store\r\nimport { connect } from 'react-redux';\r\nimport {MainState} from '../../store/index';\r\n//type\r\nimport {UsersState} from '../../store/User/type';\r\n\r\n//typeInput\r\n\r\ninterface Props {\r\n  UsersState: UsersState\r\n}\r\n\r\ntype State =  typeof initState;\r\n\r\nconst initState = {\r\n  room: [] as api__.Room[],\r\n  patient: [] as api__.Patient[],\r\n  shift:[] as any[],\r\n  \r\n  demo:true,\r\n  deletemode:false,\r\n  updatemode:false,\r\n  showPopup:false,\r\n  numberPaper:0,\r\n  featureType:\"get\" as \"update\" | \"delete\" | \"insert\",\r\n  valueInputSearch: '' as string,\r\n  patientRequest:{\r\n    insertaddress:'' as string,\r\n    insertpassword:'' as string,\r\n    insertphonenumber:'' as string,\r\n    insertdayofbirth:'' as string,\r\n    insertidentitycard:'' as string,\r\n    insertfullname:'' as string,\r\n    insertemail:'' as string,\r\n    insertgender:'' as string,\r\n    getallpage:'' as string,\r\n    getalltypesort:'' as string,\r\n    getallsearch:'' as string,\r\n    addPatientToRoomidRoom:'' as string\r\n  } as DoctorRequest,\r\n  currentId: '',\r\n  currentPatient: {\r\n    avatars: [] as any[],\r\n    gender: -1 as number,\r\n    isActive: true as boolean,\r\n    gps:[] as number[],\r\n    _id:'' as string,\r\n    address:''as string,\r\n    password:'' as string,\r\n    phoneNumber:'' as string,\r\n    dateOfBirth:'' as string,\r\n    identityCard:'' as string,\r\n    fullName:'' as string,\r\n    email:'' as string,\r\n    idRole:{\r\n      __id:'' as string,\r\n      name:'' as string,\r\n      __v:-1 as number\r\n    },\r\n    __v:-1 as number\r\n  } as api__.Patient\r\n}\r\n\r\nclass InfoTablePatient extends Component<Props, State> {\r\n  token = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjVlYTJjYjEyNzhlN2M0MjExMDc4OWQ0ZiIsImlkUm9sZSI6eyJfaWQiOiI1ZWEyY2IxMDc4ZTdjNDIxMTA3ODlkNGUiLCJuYW1lIjoiU1VQRVJfQURNSU4iLCJfX3YiOjB9LCJpc0FjdGl2ZSI6ZmFsc2UsInJvbGVOYW1lIjoiU1VQRVJfQURNSU4iLCJpYXQiOjE1ODc4MDA5OTQsImV4cCI6MTU4Nzg0NDE5NH0.VrVQz_W0o-04TXdlGD9O2r4AW4ylNJajexWmItWrR0k\";\r\n  state = initState;\r\n  adminApi = new AdminAPI();\r\n  doctorApi = new DoctorAPI();\r\n  roomApi = new RoomAPI();\r\n  shiftApi = new ShiftAPI();\r\n  userApi = new UserAPI();\r\n\r\n  //circle\r\n  componentDidMount(){\r\n    console.log(this.state);\r\n    this.GETAll();\r\n    setInterval(()=>{\r\n      console.log(this.state);\r\n    },2000)\r\n  }\r\n\r\n  //API\r\n  AddPatienToRoom = (formData:FormData,idPatient:string) => {\r\n    if(this.token){\r\n      this.doctorApi.addPatientToRoom(this.token,idPatient,formData,(res:any)=>{\r\n        console.log(res.data);\r\n      }, \r\n      (err:string)=>{\r\n        console.log(err);\r\n        console.log(err);\r\n      })\r\n    }\r\n  }\r\n\r\n  RegisterPatient = (formData:FormData) => {\r\n    if(this.token){\r\n      this.doctorApi.registerPatient(this.token,formData,(res:any)=>{\r\n        console.log(res.data);\r\n      }, \r\n      (err:string)=>{\r\n        console.log(err);\r\n        console.log(err);\r\n      })\r\n    }\r\n  }\r\n\r\n  SearchValueInputSearch = () => {\r\n    console.log('SearchValueInputSearch')\r\n  }\r\n\r\n  GetUsers = (userId:string) => {\r\n    // if(this.token){\r\n    //   this.doctorApi.get(this.token,userId,(res:any)=>{\r\n    //     console.log(res.data);\r\n    //   },\r\n    //   (err:string)=>{\r\n    //     console.log(err);\r\n    //     console.log(err);\r\n    //   })\r\n    // }\r\n  }\r\n\r\n  GETAll = () =>{\r\n    let formData = new FormData();\r\n    formData.append('page',this.state.patientRequest.getallpage);\r\n    formData.append('typesort',this.state.patientRequest.getalltypesort);\r\n    formData.append('search',this.state.patientRequest.getallsearch);\r\n    if(this.token){\r\n      this.doctorApi.getListPatient(this.token,(res:any)=>{\r\n        console.log(res.data);\r\n        this.setState({\r\n          patient:res.data.users\r\n        })\r\n      }, \r\n      (err:string)=>{\r\n        console.log(err);\r\n        console.log(err);\r\n      })\r\n    }\r\n  }\r\n\r\n  ////\r\n  getIdRow=(room:api__.Patient,featureType: \"update\" | \"delete\" | \"insert\")=>{\r\n    switch(featureType){\r\n      case \"update\":\r\n        this.setState({\r\n          currentPatient:room,\r\n          currentId:room._id,\r\n          showPopup:true,\r\n          featureType\r\n        })\r\n        break;\r\n    }\r\n  }\r\n\r\n  saveInsertPopup = () => {\r\n    let formdata = new FormData();\r\n    formdata.append('address',this.state.patientRequest.insertaddress);\r\n    formdata.append('password',this.state.patientRequest.insertpassword);\r\n    formdata.append('phoneNumber',this.state.patientRequest.insertphonenumber);\r\n    formdata.append('dateOfBirth',this.state.patientRequest.insertdayofbirth);\r\n    formdata.append('identityCard',this.state.patientRequest.insertidentitycard);\r\n    formdata.append('fullName',this.state.patientRequest.insertfullname);\r\n    formdata.append('email',this.state.patientRequest.insertemail);\r\n    formdata.append('gender',this.state.patientRequest.insertgender);\r\n    this.RegisterPatient(formdata);\r\n    let obj = this.state.patientRequest;\r\n    obj.insertaddress = \"\";\r\n    obj.insertpassword = \"\";\r\n    obj.insertphonenumber = \"\";\r\n    obj.insertdayofbirth = \"\";\r\n    obj.insertidentitycard = \"\";\r\n    obj.insertfullname = \"\";\r\n    obj.insertemail = \"\";\r\n    obj.insertgender = \"\";\r\n    this.setState({\r\n      patientRequest:obj\r\n    })\r\n    this.cancelPopup();\r\n    this.GETAll();\r\n  }\r\n\r\n  renderInsertForm = () => {\r\n    return (\r\n      <React.Fragment>\r\n        <s__.TextFieldArea>\r\n            <s__.TextInput\r\n              variant=\"outlined\"\r\n              label=\"Address\"\r\n              id=\"Address\"\r\n              type=\"text\"\r\n              value={this.state.patientRequest.insertaddress}\r\n              placeholder=\"\"\r\n              onChange={this.onchangAddressPatient}\r\n            />\r\n          </s__.TextFieldArea>\r\n          <s__.TextFieldArea>\r\n            <s__.TextInput\r\n              variant=\"outlined\"\r\n              label=\"Password\"\r\n              id=\"Password\"\r\n              type=\"text\"\r\n              value={this.state.patientRequest.insertpassword}\r\n              placeholder=\"\"\r\n              onChange={this.onchangPasswordPatient}\r\n            />\r\n          </s__.TextFieldArea>\r\n          <s__.TextFieldArea>\r\n            <s__.TextInput\r\n              variant=\"outlined\"\r\n              label=\"PhoneNumber\"\r\n              id=\"PhoneNumber\"\r\n              type=\"text\"\r\n              value={this.state.patientRequest.insertphonenumber}\r\n              placeholder=\"\"\r\n              onChange={this.onchangPhoneNumberPatient}\r\n            />\r\n          </s__.TextFieldArea>\r\n          <s__.TextFieldArea>\r\n            <s__.TextInput\r\n              variant=\"outlined\"\r\n              label=\"Date of Birth\"\r\n              id=\"Date of Birth\"\r\n              type=\"text\"\r\n              value={this.state.patientRequest.insertdayofbirth}\r\n              placeholder=\"\"\r\n              onChange={this.onchangDateofBirthPatient}\r\n            />\r\n          </s__.TextFieldArea>\r\n          <s__.TextFieldArea>\r\n            <s__.TextInput\r\n              variant=\"outlined\"\r\n              label=\"Identity Card\"\r\n              id=\"Identity Card\"\r\n              type=\"text\"\r\n              value={this.state.patientRequest.insertidentitycard}\r\n              placeholder=\"\"\r\n              onChange={this.onchangIdentityCardPatient}\r\n            />\r\n          </s__.TextFieldArea>\r\n          <s__.TextFieldArea>\r\n            <s__.TextInput\r\n              variant=\"outlined\"\r\n              label=\"Full Name\"\r\n              id=\"Full Name\"\r\n              type=\"text\"\r\n              value={this.state.patientRequest.insertfullname}\r\n              placeholder=\"\"\r\n              onChange={this.onchangFullNamePatient}\r\n            />\r\n          </s__.TextFieldArea>\r\n          <s__.TextFieldArea>\r\n            <s__.TextInput\r\n              variant=\"outlined\"\r\n              label=\"Email\"\r\n              id=\"Email\"\r\n              type=\"text\"\r\n              value={this.state.patientRequest.insertemail}\r\n              placeholder=\"\"\r\n              onChange={this.onchangEmailPatient}\r\n            />\r\n          </s__.TextFieldArea>\r\n          <s__.TextFieldArea>\r\n            <s__.TextInput\r\n              variant=\"outlined\"\r\n              label=\"Gender\"\r\n              id=\"Gender\"\r\n              type=\"text\"\r\n              value={this.state.patientRequest.insertgender}\r\n              placeholder=\"\"\r\n              onChange={this.onchangGenderPatient}\r\n            />\r\n          </s__.TextFieldArea>\r\n          <s__.TextFieldArea>\r\n            <s__.ButtonSubmit\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              size=\"large\"\r\n              startIcon={<SaveIcon />}\r\n              onClick={this.saveInsertPopup}\r\n            >Save</s__.ButtonSubmit>\r\n          </s__.TextFieldArea>\r\n          <s__.TextFieldArea>\r\n            <s__.ButtonSubmit\r\n              variant=\"contained\"\r\n              color=\"default\"\r\n              size=\"large\"\r\n              startIcon={<CloseIcon />}\r\n              onClick={this.cancelPopup}\r\n            >Cancel</s__.ButtonSubmit>\r\n          </s__.TextFieldArea>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n\r\n  saveUpdatePopup = () => {\r\n    let formdata = new FormData();\r\n    formdata.append('idRoom',this.state.patientRequest.addPatientToRoomidRoom.toString());\r\n    this.AddPatienToRoom(formdata,this.state.currentId);\r\n    let obj = this.state.patientRequest;\r\n    obj.addPatientToRoomidRoom = \"\";\r\n    this.setState({\r\n      patientRequest:obj\r\n    })\r\n    this.cancelPopup();\r\n    this.GETAll();\r\n  }\r\n\r\n  renderUpdateForm = () => {\r\n    return (\r\n      <React.Fragment>\r\n          <s__.TextFieldArea>\r\n            <s__.TextInput\r\n              variant=\"outlined\"\r\n              label=\"idRoom\"\r\n              id=\"idRoom\"\r\n              type=\"text\"\r\n              value={this.state.patientRequest.addPatientToRoomidRoom}\r\n              onChange={this.onchangidRoomPatient}\r\n            />\r\n          </s__.TextFieldArea>\r\n          <Autocomplete\r\n            id=\"country-select-demo\"\r\n            style={{ width: 300 }}\r\n            options={room}\r\n            autoHighlight\r\n            getOptionLabel={(option) => option.label}\r\n            renderOption={(option) => (\r\n              <React.Fragment>\r\n                <span>{countryToFlag(option.code)}</span>\r\n                {option.label} ({option.code}) +{option.phone}\r\n              </React.Fragment>\r\n            )}\r\n            renderInput={(params:any) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Choose a Room\"\r\n                variant=\"outlined\"\r\n                inputProps={{\r\n                  ...params.inputProps,\r\n                  autoComplete: 'new-password', // disable autocomplete and autofill\r\n                }}\r\n              />\r\n            )}\r\n          />\r\n          <s__.TextFieldArea>\r\n            <s__.ButtonSubmit\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              size=\"large\"\r\n              startIcon={<SaveIcon />}\r\n              onClick={this.saveUpdatePopup}\r\n            >Save</s__.ButtonSubmit>\r\n          </s__.TextFieldArea>\r\n          <s__.TextFieldArea>\r\n            <s__.ButtonSubmit\r\n              variant=\"contained\"\r\n              color=\"default\"\r\n              size=\"large\"\r\n              startIcon={<CloseIcon />}\r\n              onClick={this.cancelPopup}\r\n            >Cancel</s__.ButtonSubmit>\r\n          </s__.TextFieldArea>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n\r\n  renderPopupInput = (type:string) => {\r\n    switch(type){\r\n      case \"get\":\r\n        break;\r\n      case \"update\":\r\n        return (\r\n          <React.Fragment>\r\n            {this.renderUpdateForm()}\r\n          </React.Fragment>\r\n        )\r\n      case \"delete\":\r\n        break;\r\n      case \"insert\":\r\n        return (\r\n          <React.Fragment>\r\n            {this.renderInsertForm()}\r\n          </React.Fragment>\r\n        )\r\n    }\r\n    \r\n  }\r\n\r\n  renderPopupInfo = (type:string) => {\r\n    switch(type){\r\n      case \"get\":\r\n        break;\r\n      case \"update\":\r\n        return (\r\n          <React.Fragment>\r\n            <h1>Add Patient {this.state.currentPatient.fullName} to room</h1>\r\n            <h4>Input and click on submit button to update number person on room, or click cancel to exist</h4>\r\n            <p>Date of birth: {this.state.currentPatient.dateOfBirth}</p>\r\n            <p>Email: {this.state.currentPatient.email}</p>\r\n            <p>Indentity Card: {this.state.currentPatient.identityCard}</p>\r\n          </React.Fragment>\r\n        )\r\n      case \"delete\":\r\n        break;\r\n      case \"insert\":\r\n        return (\r\n          <React.Fragment>\r\n            <h1>Regiter Patient</h1>\r\n            <h4>Input and click on submit button to create a new one, else click cancel to exist</h4>\r\n          </React.Fragment>\r\n        )\r\n    }\r\n  }\r\n\r\n  showPopup = (type:string) => {\r\n    \r\n    return (\r\n      <>\r\n        <s__.PopupBackground onClick={this.cancelPopup}>\r\n        </s__.PopupBackground>\r\n        <s__.PopupContainer>\r\n          <s__.PopupInfo>\r\n            {this.renderPopupInfo(type)}\r\n          </s__.PopupInfo>\r\n          <s__.PopupInput>\r\n            {this.renderPopupInput(type)}\r\n          </s__.PopupInput>\r\n        </s__.PopupContainer>\r\n      </>\r\n    )\r\n  }\r\n\r\n  cancelPopup=()=>{\r\n    this.setState({\r\n      showPopup:false\r\n    })\r\n  }\r\n\r\n  setShowPopupByType = (type:\"update\" | \"delete\" | \"insert\") => {\r\n    switch(type){\r\n      case \"update\":\r\n        this.setState({\r\n          updatemode:true,\r\n          featureType:type\r\n        })\r\n        break;\r\n      case \"delete\":\r\n        break;\r\n      case \"insert\":\r\n        this.setState({\r\n          featureType:type,\r\n          showPopup: true\r\n        })\r\n    }\r\n    \r\n  }\r\n\r\n  setDeleteMode = () => {\r\n    this.setState({\r\n      deletemode:!this.state.deletemode\r\n    })\r\n  }\r\n\r\n  setUpdateMode = () => {\r\n    this.setState({\r\n      updatemode:!this.state.updatemode\r\n    })\r\n  }\r\n\r\n  setShowPopup = () => {\r\n    this.setState({\r\n      showPopup:!this.state.showPopup\r\n    })\r\n  }\r\n\r\n  donotthing = () => {\r\n    console.log(\"success\");\r\n  }\r\n\r\n  setInputSearch = (event: ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({\r\n      valueInputSearch: event.target.value\r\n    })\r\n  }\r\n\r\n  onchangAddressPatient = (event: ChangeEvent<HTMLInputElement>) => {\r\n    let obj = this.state.patientRequest;\r\n    obj.insertaddress = event.target.value;\r\n    this.setState({\r\n      patientRequest:obj\r\n    })\r\n  }\r\n\r\n  onchangPasswordPatient = (event: ChangeEvent<HTMLInputElement>) => {\r\n    let obj = this.state.patientRequest;\r\n    obj.insertpassword = event.target.value;\r\n    this.setState({\r\n      patientRequest:obj\r\n    })\r\n  }\r\n\r\n  onchangPhoneNumberPatient = (event: ChangeEvent<HTMLInputElement>) => {\r\n    let obj = this.state.patientRequest;\r\n    obj.insertphonenumber = event.target.value;\r\n    this.setState({\r\n      patientRequest:obj\r\n    })\r\n  }\r\n  onchangDateofBirthPatient = (event: ChangeEvent<HTMLInputElement>) => {\r\n    let obj = this.state.patientRequest;\r\n    obj.insertdayofbirth = event.target.value;\r\n    this.setState({\r\n      patientRequest:obj\r\n    })\r\n  }\r\n  onchangIdentityCardPatient = (event: ChangeEvent<HTMLInputElement>) => {\r\n    let obj = this.state.patientRequest;\r\n    obj.insertidentitycard = event.target.value;\r\n    this.setState({\r\n      patientRequest:obj\r\n    })\r\n  }\r\n  onchangFullNamePatient = (event: ChangeEvent<HTMLInputElement>) => {\r\n    let obj = this.state.patientRequest;\r\n    obj.insertfullname = event.target.value;\r\n    this.setState({\r\n      patientRequest:obj\r\n    })\r\n  }\r\n  onchangEmailPatient = (event: ChangeEvent<HTMLInputElement>) => {\r\n    let obj = this.state.patientRequest;\r\n    obj.insertemail = event.target.value;\r\n    this.setState({\r\n      patientRequest:obj\r\n    })\r\n  }\r\n  onchangGenderPatient = (event: ChangeEvent<HTMLInputElement>) => {\r\n    let obj = this.state.patientRequest;\r\n    obj.insertgender = event.target.value;\r\n    this.setState({\r\n      patientRequest:obj\r\n    })\r\n  }\r\n  onchangidRoomPatient = (event: ChangeEvent<HTMLInputElement>) => {\r\n    let obj = this.state.patientRequest;\r\n    obj.addPatientToRoomidRoom = event.target.value;\r\n    this.setState({\r\n      patientRequest:obj\r\n    })\r\n  }\r\n\r\n\r\n  //Render\r\n  renderButton= () =>{\r\n    return (\r\n      <div style={{\r\n        backgroundColor:\"darkblue\",\r\n        height:\"auto\",\r\n        borderTopRightRadius:\"5px\", \r\n        borderTopLeftRadius:\"5px\",\r\n        padding:\"20px 0px 0px 20px\",\r\n        color:\"white\"\r\n        }}\r\n      >\r\n        <h1 style={{marginTop:\"0px\"}}>Patient</h1>\r\n        <s__.FeatureArea>\r\n          <s__.FeatureButton onClick={()=>this.setShowPopupByType(\"insert\")}><p>Register Patient</p></s__.FeatureButton>\r\n          <s__.FeatureButton style={{backgroundColor:this.state.updatemode?\"tomato\":\"\"}} onClick={this.setUpdateMode}><p>{this.state.updatemode?\"Cancel\":\"Add Patient To Room\"}</p></s__.FeatureButton>\r\n          <s__.SearchInput\r\n            id=\"maxNumber\"\r\n            type=\"text\"\r\n            value={this.state.valueInputSearch}\r\n            placeholder=\"Search Room By Name\"\r\n            onChange={this.setInputSearch}\r\n          />\r\n          <s__.FeatureButton onClick={this.SearchValueInputSearch}><p>Search</p></s__.FeatureButton>\r\n        </s__.FeatureArea>\r\n        \r\n      </div>\r\n      \r\n    )\r\n  }\r\n\r\n  setIdCurrent = (currentId:string) => {\r\n    this.setState({\r\n      currentId\r\n    })\r\n  }\r\n\r\n  renderChildTableRoom = () => {\r\n    return this.state.patient.map((row) => (\r\n      <s__.TableRowInfo key={row._id} onClick={this.state.updatemode?()=>this.getIdRow(row,\"update\"):()=>this.setIdCurrent(row._id)}\r\n      onFocus={()=>this.setIdCurrent(row._id)}>\r\n        <TableCell>{row.fullName}</TableCell>\r\n        <TableCell>{row.gender}</TableCell>\r\n        <TableCell>{row.identityCard}</TableCell>\r\n        <TableCell >{row.phoneNumber}</TableCell>\r\n        <TableCell >{row.dateOfBirth}</TableCell>\r\n        <TableCell >{row.address}</TableCell>\r\n      </s__.TableRowInfo>\r\n    ))\r\n  }\r\n\r\n  renderGrid = () =>{\r\n    return (\r\n    <div style={{backgroundColor:\"lightcyan\",overflow:\"auto\",height:\"350px\"}}>\r\n      <div >\r\n        <Table size=\"small\">\r\n          <TableHead >\r\n            <s__.TableRowHead style={{height:\"50px\"}}>\r\n              <TableCell>FullName</TableCell>\r\n              <TableCell>Gender</TableCell>\r\n              <TableCell>IdentityCard</TableCell>\r\n              <TableCell>PhoneNumber</TableCell>\r\n              <TableCell>DateOfBirth</TableCell>\r\n              <TableCell>Address</TableCell>\r\n            </s__.TableRowHead>\r\n          </TableHead>\r\n          <TableBody>\r\n            {this.renderChildTableRoom()}\r\n          </TableBody>\r\n        </Table>\r\n      </div>\r\n    </div>\r\n  )\r\n  }\r\n\r\n  renderPaper = () =>{\r\n    return (\r\n      // <s__.PaperDiv>\r\n      //   <s__.PaperDivNumber >\r\n      //     <p style={{margin:\"0px\"}} >1</p>\r\n      //     <p style={{margin:\"0px\"}} >2</p>\r\n      //     <p style={{margin:\"0px\"}} >3</p>\r\n      //   </s__.PaperDivNumber  >\r\n      // </s__.PaperDiv>\r\n        <s__.PaperDiv>\r\n          <s__.PaperDivNumber><p>1</p></s__.PaperDivNumber>\r\n          <s__.PaperDivNumber><p>2</p></s__.PaperDivNumber>\r\n          <s__.PaperDivNumber><p>3</p></s__.PaperDivNumber>\r\n          <s__.PaperDivNumber><p>4</p></s__.PaperDivNumber>\r\n        </s__.PaperDiv>\r\n    )\r\n  }\r\n\r\n  //Main render\r\n  render() {\r\n    return (\r\n      <s__.Container style={{paddingBottom:\"0px\"}}>\r\n        <div>\r\n          {this.state.showPopup?this.showPopup(this.state.featureType):<React.Fragment/>}\r\n          {this.renderButton()}\r\n          {this.renderGrid()}\r\n          {this.renderPaper()}\r\n        </div>\r\n      </s__.Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state:MainState) =>({\r\n  UsersState: state.UsersState\r\n});\r\nexport default connect(mapStateToProps,{})(InfoTablePatient);\r\n\r\n\r\n// demoClickRedirect = () => {\r\n//   this.setState({\r\n//     demo:false\r\n//   })\r\n// }\r\n\r\n// demoRedirect = ()=>{\r\n//   if(this.state.demo){\r\n//     return <React.Fragment/>\r\n//   }else{\r\n//     return <Redirect to=\"/about-us\"/>\r\n//   }\r\n// }"]},"metadata":{},"sourceType":"module"}