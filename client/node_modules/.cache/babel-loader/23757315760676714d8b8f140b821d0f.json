{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HSONNL\\\\Desktop\\\\myProject\\\\NCOV-19\\\\Repo\\\\NCOV-19Manager\\\\client\\\\src\\\\component\\\\RootContainer\\\\index.tsx\";\nimport React, { Component } from \"react\";\nimport * as s__ from \"./style\";\nimport MenuTop from \"./../MenuTop/index\";\nimport { Switch, Route } from \"react-router-dom\";\nimport FormRegister from \"./../FormRegister/index\";\nimport FormSignin from \"./../FormSignIn/index\";\nimport HomeComponent from \"../HomeComponent/index\";\nimport ManagerComponent from '../ManagerComponent/index';\nimport Footer from \"../Footer/index\";\nimport AboutUs from \"../AboutUs/index\";\nimport { connect } from 'react-redux';\nimport { SocketIOClient } from '../../modules/socketio-client/socketio-client';\n\nclass RootContainer extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderSwitch = () => {\n      return React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(Route, {\n        path: \"/manager\",\n        children: React.createElement(ManagerComponent, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/register\",\n        children: React.createElement(FormRegister, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/signin\",\n        children: React.createElement(FormSignin, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/about-us\",\n        children: React.createElement(AboutUs, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/\",\n        children: React.createElement(HomeComponent, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }));\n    };\n  }\n\n  componentDidMount() {\n    window.localStorage.setItem('UsersInfo', JSON.stringify(\"\"));\n    window.sessionStorage.setItem('UsersInfo', JSON.stringify(\"\"));\n    setInterval(() => {\n      //undefine\n      // let str = \n      // let a:object = JSON.parse( String(window.localStorage.getItem('UsersInfo')));\n      // console.log(a)\n      // console.log(window.sessionStorage.accessToken)\n      console.log(new SocketIOClient().demoOn());\n      console.log(new SocketIOClient().demoEmit());\n    }, 30000);\n  }\n\n  render() {\n    return React.createElement(s__.Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(MenuTop, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), this.renderSwitch(), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  UserssignedState: state.UserssignedState\n});\n\nexport default connect(mapStateToProps, {})(RootContainer); // import React from \"react\";\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link,\n//   Redirect,\n//   useHistory,\n//   useLocation\n// } from \"react-router-dom\";\n// This example has 3 pages: a public page, a protected\n// page, and a login screen. In order to see the protected\n// page, you must first login. Pretty standard stuff.\n//\n// First, visit the public page. Then, visit the protected\n// page. You're not yet logged in, so you are redirected\n// to the login page. After you login, you are redirected\n// back to the protected page.\n//\n// Notice the URL change each time. If you click the back\n// button at this point, would you expect to go back to the\n// login page? No! You're already logged in. Try it out,\n// and you'll see you go back to the page you visited\n// just *before* logging in, the public page.\n// export default function AuthExample() {\n//   return (\n//     <Router>\n//       <div>\n//         <AuthButton />\n//         <ul>\n//           <li>\n//             <Link to=\"/public\">Public Page</Link>\n//           </li>\n//           <li>\n//             <Link to=\"/protected\">Protected Page</Link>\n//           </li>\n//         </ul>\n//         <Switch>\n//           <Route path=\"/public\">\n//             <PublicPage />\n//           </Route>\n//           <Route path=\"/login\">\n//             <LoginPage />\n//           </Route>\n//           <PrivateRoute path=\"/protected\">\n//             <ProtectedPage />\n//           </PrivateRoute>\n//         </Switch>\n//       </div>\n//     </Router>\n//   );\n// }\n// const fakeAuth = {\n//   isAuthenticated: false,\n//   authenticate(cb:any) {\n//     fakeAuth.isAuthenticated = true;\n//     setTimeout(cb, 100); // fake async\n//   },\n//   signout(cb:any) {\n//     fakeAuth.isAuthenticated = false;\n//     setTimeout(cb, 100);\n//   }\n// };\n// function AuthButton() {\n//   let history = useHistory();\n//   return fakeAuth.isAuthenticated ? (\n//     <p>\n//       Welcome!{\" \"}\n//       <button\n//         onClick={() => {\n//           fakeAuth.signout(() => history.push(\"/\"));\n//         }}\n//       >\n//         Sign out\n//       </button>\n//     </p>\n//   ) : (\n//     <p>You are not logged in.</p>\n//   );\n// }\n// function PrivateRoute({...rest }) {\n//   return (\n//     <Route\n//       {...rest}\n//       render={({ location }) =>\n//         fakeAuth.isAuthenticated ? (\n//           <></>\n//         ) : (\n//           <Redirect\n//             to={{\n//               pathname: \"/login\",\n//               state: { from: location }\n//             }}\n//           />\n//         )\n//       }\n//     />\n//   );\n// }\n// function PublicPage() {\n//   return <h3>Public</h3>;\n// }\n// function ProtectedPage() {\n//   const history = useHistory();\n//   console.log(useHistory())\n//   let click =()=>{\n//     history.push('/login')\n//   }\n//   return <h3 onClick={click}>Protected</h3>;\n// }\n// function LoginPage() {\n//   const history = useHistory();\n//   let location1 = useLocation();\n//   console.log(\"Location\",useLocation())\n//   console.log(\"Hitory\",useHistory());\n//   console.log(\"Historyy\",window.history);\n//   let { from }:any = location1.state || { from: { pathname: \"/\" } };\n//   // console.log(from);\n//   // history.push(\"/aa\");\n//   // console.log(\"History1\",history);\n//   // history.goBack();\n//   let login = () => {\n//     history.replace(\"/\");\n//   };\n//   const location = {\n//     pathname: '/one-fish',\n//     // search: '?two=fish',\n//     // hash: '#red-fish-blue-fish'\n//   }\n//   const url = history.createHref(location)\n//   return (\n//     <div>\n//       <p>You must log in to view the page at {from.pathname}</p>\n//       <button onClick={login}>Log in</button>\n//       <a href={url}>sdfghjkl;'</a>\n//     </div>\n//   );\n// }","map":{"version":3,"sources":["C:/Users/HSONNL/Desktop/myProject/NCOV-19/Repo/NCOV-19Manager/client/src/component/RootContainer/index.tsx"],"names":["React","Component","s__","MenuTop","Switch","Route","FormRegister","FormSignin","HomeComponent","ManagerComponent","Footer","AboutUs","connect","SocketIOClient","RootContainer","renderSwitch","componentDidMount","window","localStorage","setItem","JSON","stringify","sessionStorage","setInterval","console","log","demoOn","demoEmit","render","mapStateToProps","state","UserssignedState"],"mappings":"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":["import React, { Component } from \"react\";\r\nimport * as s__ from \"./style\";\r\nimport MenuTop from \"./../MenuTop/index\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\n\r\nimport FormRegister from \"./../FormRegister/index\";\r\nimport FormSignin from \"./../FormSignIn/index\";\r\n\r\nimport ChartData from \"../ChartData/index\";\r\nimport HomeComponent from \"../HomeComponent/index\";\r\nimport ManagerComponent from '../ManagerComponent/index';\r\nimport Footer from \"../Footer/index\";\r\nimport AboutUs from \"../AboutUs/index\";\r\nimport { MainState } from '../../store/index';\r\nimport {connect} from 'react-redux';\r\nimport {UserssignedState} from '../../store/UsersSigned/type';\r\nimport {SocketIOClient} from '../../modules/socketio-client/socketio-client';\r\ntype Props = {\r\n  UserssignedState: UserssignedState\r\n}\r\nclass RootContainer extends Component {\r\n  componentDidMount(){\r\n    window.localStorage.setItem('UsersInfo',JSON.stringify(\"\"));\r\n    window.sessionStorage.setItem('UsersInfo',JSON.stringify(\"\"));\r\n    setInterval(()=>{\r\n      //undefine\r\n      // let str = \r\n      // let a:object = JSON.parse( String(window.localStorage.getItem('UsersInfo')));\r\n      // console.log(a)\r\n      // console.log(window.sessionStorage.accessToken)\r\n      console.log(new SocketIOClient().demoOn());\r\n      console.log(new SocketIOClient().demoEmit())\r\n    },30000);\r\n  }\r\n  renderSwitch = () => {\r\n    return (\r\n      <Switch>\r\n        <Route path=\"/manager\" children={<ManagerComponent />}/>\r\n        <Route path=\"/register\" children={<FormRegister />}/>\r\n        <Route path=\"/signin\" children={<FormSignin />}/>\r\n        <Route path=\"/about-us\" children={<AboutUs />}/>\r\n        <Route path=\"/\" children={<HomeComponent />} />\r\n      </Switch>\r\n    );\r\n  };\r\n\r\n\r\n  render() {\r\n    return (\r\n      <s__.Container>\r\n        <MenuTop />\r\n        {this.renderSwitch()}\r\n        <Footer/>\r\n      </s__.Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state:MainState) => ( {\r\n  UserssignedState: state.UserssignedState\r\n\r\n})\r\nexport default connect(mapStateToProps,{})(RootContainer);\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React from \"react\";\r\n// import {\r\n//   BrowserRouter as Router,\r\n//   Switch,\r\n//   Route,\r\n//   Link,\r\n//   Redirect,\r\n//   useHistory,\r\n//   useLocation\r\n// } from \"react-router-dom\";\r\n\r\n// This example has 3 pages: a public page, a protected\r\n// page, and a login screen. In order to see the protected\r\n// page, you must first login. Pretty standard stuff.\r\n//\r\n// First, visit the public page. Then, visit the protected\r\n// page. You're not yet logged in, so you are redirected\r\n// to the login page. After you login, you are redirected\r\n// back to the protected page.\r\n//\r\n// Notice the URL change each time. If you click the back\r\n// button at this point, would you expect to go back to the\r\n// login page? No! You're already logged in. Try it out,\r\n// and you'll see you go back to the page you visited\r\n// just *before* logging in, the public page.\r\n\r\n// export default function AuthExample() {\r\n//   return (\r\n//     <Router>\r\n//       <div>\r\n//         <AuthButton />\r\n//         <ul>\r\n//           <li>\r\n//             <Link to=\"/public\">Public Page</Link>\r\n//           </li>\r\n//           <li>\r\n//             <Link to=\"/protected\">Protected Page</Link>\r\n//           </li>\r\n//         </ul>\r\n//         <Switch>\r\n//           <Route path=\"/public\">\r\n//             <PublicPage />\r\n//           </Route>\r\n//           <Route path=\"/login\">\r\n//             <LoginPage />\r\n//           </Route>\r\n//           <PrivateRoute path=\"/protected\">\r\n//             <ProtectedPage />\r\n//           </PrivateRoute>\r\n//         </Switch>\r\n//       </div>\r\n//     </Router>\r\n//   );\r\n// }\r\n\r\n// const fakeAuth = {\r\n//   isAuthenticated: false,\r\n//   authenticate(cb:any) {\r\n//     fakeAuth.isAuthenticated = true;\r\n//     setTimeout(cb, 100); // fake async\r\n//   },\r\n//   signout(cb:any) {\r\n//     fakeAuth.isAuthenticated = false;\r\n//     setTimeout(cb, 100);\r\n//   }\r\n// };\r\n\r\n// function AuthButton() {\r\n//   let history = useHistory();\r\n//   return fakeAuth.isAuthenticated ? (\r\n//     <p>\r\n//       Welcome!{\" \"}\r\n//       <button\r\n//         onClick={() => {\r\n//           fakeAuth.signout(() => history.push(\"/\"));\r\n//         }}\r\n//       >\r\n//         Sign out\r\n//       </button>\r\n//     </p>\r\n//   ) : (\r\n//     <p>You are not logged in.</p>\r\n//   );\r\n// }\r\n\r\n// function PrivateRoute({...rest }) {\r\n//   return (\r\n//     <Route\r\n//       {...rest}\r\n//       render={({ location }) =>\r\n//         fakeAuth.isAuthenticated ? (\r\n//           <></>\r\n//         ) : (\r\n//           <Redirect\r\n//             to={{\r\n//               pathname: \"/login\",\r\n//               state: { from: location }\r\n//             }}\r\n//           />\r\n//         )\r\n//       }\r\n//     />\r\n//   );\r\n// }\r\n\r\n// function PublicPage() {\r\n//   return <h3>Public</h3>;\r\n// }\r\n\r\n// function ProtectedPage() {\r\n//   const history = useHistory();\r\n//   console.log(useHistory())\r\n//   let click =()=>{\r\n//     history.push('/login')\r\n//   }\r\n//   return <h3 onClick={click}>Protected</h3>;\r\n// }\r\n\r\n// function LoginPage() {\r\n//   const history = useHistory();\r\n//   let location1 = useLocation();\r\n//   console.log(\"Location\",useLocation())\r\n//   console.log(\"Hitory\",useHistory());\r\n//   console.log(\"Historyy\",window.history);\r\n//   let { from }:any = location1.state || { from: { pathname: \"/\" } };\r\n//   // console.log(from);\r\n//   // history.push(\"/aa\");\r\n//   // console.log(\"History1\",history);\r\n//   // history.goBack();\r\n//   let login = () => {\r\n//     history.replace(\"/\");\r\n//   };\r\n//   const location = {\r\n//     pathname: '/one-fish',\r\n//     // search: '?two=fish',\r\n//     // hash: '#red-fish-blue-fish'\r\n//   }\r\n//   const url = history.createHref(location)\r\n\r\n//   return (\r\n//     <div>\r\n//       <p>You must log in to view the page at {from.pathname}</p>\r\n//       <button onClick={login}>Log in</button>\r\n//       <a href={url}>sdfghjkl;'</a>\r\n//     </div>\r\n//   );\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}