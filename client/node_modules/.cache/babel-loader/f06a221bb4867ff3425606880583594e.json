{"ast":null,"code":"import { SET_AVATAR_USERS, SET_DAYOFBIRTH_USERS, SET_FULLNAME_USERS, SET_GMAIL_USERS, SET_TOKEN_USERS } from './type';\nconst initState = Object.freeze({\n  full_name: \"\",\n  avatar: [],\n  token: \"\",\n  dayofbirth: \"\",\n  gmail: \"\"\n});\nexport function dataCheckerReducer(previousState = initState, action) {\n  switch (action.type) {\n    case SET_AVATAR_USERS:\n      return {\n        avatar: action.payload,\n        ...previousState\n      };\n\n    case SET_DAYOFBIRTH_USERS:\n      return { ...previousState,\n        dayofbirth: action.payload\n      };\n\n    case SET_FULLNAME_USERS:\n      return {\n        full_name: action.payload,\n        ...previousState\n      };\n\n    case SET_GMAIL_USERS:\n      return { ...previousState,\n        gmail: action.payload\n      };\n\n    case SET_TOKEN_USERS:\n      return {\n        token: action.payload,\n        ...previousState\n      };\n\n    default:\n      return previousState;\n  }\n}","map":{"version":3,"sources":["C:/Users/HSONNL/Desktop/myProject/NCOV-19/Repo/NCOV-19Manager/client/src/store/UsersComponent/reducer.ts"],"names":["SET_AVATAR_USERS","SET_DAYOFBIRTH_USERS","SET_FULLNAME_USERS","SET_GMAIL_USERS","SET_TOKEN_USERS","initState","Object","freeze","full_name","avatar","token","dayofbirth","gmail","dataCheckerReducer","previousState","action","type","payload"],"mappings":"AAAA,SAGEA,gBAHF,EAIEC,oBAJF,EAKEC,kBALF,EAMEC,eANF,EAOEC,eAPF,QAQO,QARP;AAUA,MAAMC,SAAqB,GAAGC,MAAM,CAACC,MAAP,CAAc;AAC1CC,EAAAA,SAAS,EAAE,EAD+B;AAE1CC,EAAAA,MAAM,EAAE,EAFkC;AAG1CC,EAAAA,KAAK,EAAE,EAHmC;AAI1CC,EAAAA,UAAU,EAAE,EAJ8B;AAK1CC,EAAAA,KAAK,EAAE;AALmC,CAAd,CAA9B;AAQA,OAAO,SAASC,kBAAT,CACLC,aAAa,GAAGT,SADX,EAELU,MAFK,EAGO;AACZ,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKhB,gBAAL;AACE,aAAO;AACLS,QAAAA,MAAM,EAAEM,MAAM,CAACE,OADV;AAEL,WAAGH;AAFE,OAAP;;AAIF,SAAKb,oBAAL;AACE,aAAO,EACL,GAAGa,aADE;AAELH,QAAAA,UAAU,EAACI,MAAM,CAACE;AAFb,OAAP;;AAIF,SAAKf,kBAAL;AACE,aAAO;AACLM,QAAAA,SAAS,EAACO,MAAM,CAACE,OADZ;AAEL,WAAGH;AAFE,OAAP;;AAIF,SAAKX,eAAL;AACE,aAAO,EACL,GAAGW,aADE;AAELF,QAAAA,KAAK,EAACG,MAAM,CAACE;AAFR,OAAP;;AAIF,SAAKb,eAAL;AACE,aAAO;AACLM,QAAAA,KAAK,EAAEK,MAAM,CAACE,OADT;AAEL,WAAGH;AAFE,OAAP;;AAIF;AACE,aAAOA,aAAP;AA3BJ;AA6BD","sourcesContent":["import { \r\n  UsersState,\r\n  UsersTypes,\r\n  SET_AVATAR_USERS,\r\n  SET_DAYOFBIRTH_USERS,\r\n  SET_FULLNAME_USERS,\r\n  SET_GMAIL_USERS,\r\n  SET_TOKEN_USERS\r\n} from './type';\r\n\r\nconst initState: UsersState = Object.freeze({\r\n  full_name: \"\" as string,\r\n  avatar: [] as File[],\r\n  token: \"\" as string,\r\n  dayofbirth: \"\" as string,\r\n  gmail: \"\" as string\r\n})\r\n\r\nexport function dataCheckerReducer(\r\n  previousState = initState,\r\n  action: UsersTypes\r\n): UsersState {\r\n  switch (action.type) {\r\n    case SET_AVATAR_USERS:\r\n      return {\r\n        avatar: action.payload,\r\n        ...previousState\r\n      };\r\n    case SET_DAYOFBIRTH_USERS:\r\n      return {\r\n        ...previousState,\r\n        dayofbirth:action.payload \r\n      };\r\n    case SET_FULLNAME_USERS:\r\n      return {\r\n        full_name:action.payload,\r\n        ...previousState\r\n      };\r\n    case SET_GMAIL_USERS:\r\n      return {\r\n        ...previousState,\r\n        gmail:action.payload\r\n      };\r\n    case SET_TOKEN_USERS:\r\n      return {\r\n        token: action.payload,\r\n        ...previousState\r\n      };\r\n    default:\r\n      return previousState;\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}