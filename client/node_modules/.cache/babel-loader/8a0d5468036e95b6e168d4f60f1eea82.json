{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HSONNL\\\\Desktop\\\\myProject\\\\NCOV-19\\\\Repo\\\\NCOV-19Manager\\\\client\\\\src\\\\component\\\\GoogleMapReact\\\\index.tsx\";\nimport React, { Component } from \"react\";\n\nclass MyComponents extends Component {\n  constructor(...args) {\n    super(...args);\n    this.OlView = require(\"ol/View\");\n  }\n\n  //   this.state = { center: [0, 0], zoom: 1 };\n  //   this.olmap = new OlMap({\n  //     target: null,\n  //     layers: [\n  //       new OlLayerTile({\n  //         source: new OlSourceOSM()\n  //       })\n  //     ],\n  //     view: new OlView({\n  //       center: this.state.center,\n  //       zoom: this.state.zoom\n  //     })\n  //   });\n  // }\n  // updateMap() {\n  //   this.olmap.getView().setCenter(this.state.center);\n  //   this.olmap.getView().setZoom(this.state.zoom);\n  // }\n  // componentDidMount() {\n  //   this.olmap.setTarget(\"map\");\n  //   // Listen to map changes\n  //   this.olmap.on(\"moveend\", () => {\n  //     let center = this.olmap.getView().getCenter();\n  //     let zoom = this.olmap.getView().getZoom();\n  //     this.setState({ center, zoom });\n  //   });\n  // }\n  // shouldComponentUpdate(nextProps, nextState) {\n  //   let center = this.olmap.getView().getCenter();\n  //   let zoom = this.olmap.getView().getZoom();\n  //   if (center === nextState.center && zoom === nextState.zoom) return false;\n  //   return true;\n  // }\n  userAction() {\n    this.setState({\n      center: [546000, 6868000],\n      zoom: 5\n    });\n  }\n\n  render() {\n    // this.updateMap(); // Update map on render?\n    return React.createElement(\"div\", {\n      id: \"map\",\n      style: {\n        width: \"100%\",\n        height: \"360px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: e => this.userAction(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"setState on click\"));\n  }\n\n}\n\nexport default MyComponents;","map":{"version":3,"sources":["C:/Users/HSONNL/Desktop/myProject/NCOV-19/Repo/NCOV-19Manager/client/src/component/GoogleMapReact/index.tsx"],"names":["React","Component","MyComponents","OlView","require","userAction","setState","center","zoom","render","width","height","e"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAMA,MAAMC,YAAN,SAA2BD,SAA3B,CAAqC;AAAA;AAAA;AAAA,SAGnCE,MAHmC,GAG1BC,OAAO,CAAC,SAAD,CAHmB;AAAA;;AAInC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEAC,EAAAA,UAAU,GAAG;AACX,SAAKC,QAAL,CAAc;AAAEC,MAAAA,MAAM,EAAE,CAAC,MAAD,EAAS,OAAT,CAAV;AAA6BC,MAAAA,IAAI,EAAE;AAAnC,KAAd;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP;AACA,WACE;AAAK,MAAA,EAAE,EAAC,KAAR;AAAc,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,MAAM,EAAE;AAAzB,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,OAAO,EAAEC,CAAC,IAAI,KAAKP,UAAL,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,CADF;AAKD;;AAtDkC;;AAyDrC,eAAeH,YAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport OlMap from \"ol/map\";\r\n\r\nimport OlLayerTile from \"ol/layer/tile\";\r\nimport OlSourceOSM from \"ol/source/osm\";\r\n\r\nclass MyComponents extends Component {\r\n  // constructor(props) {\r\n  //   super(props);\r\n  OlView = require(\"ol/View\");\r\n  //   this.state = { center: [0, 0], zoom: 1 };\r\n\r\n  //   this.olmap = new OlMap({\r\n  //     target: null,\r\n  //     layers: [\r\n  //       new OlLayerTile({\r\n  //         source: new OlSourceOSM()\r\n  //       })\r\n  //     ],\r\n  //     view: new OlView({\r\n  //       center: this.state.center,\r\n  //       zoom: this.state.zoom\r\n  //     })\r\n  //   });\r\n  // }\r\n\r\n  // updateMap() {\r\n  //   this.olmap.getView().setCenter(this.state.center);\r\n  //   this.olmap.getView().setZoom(this.state.zoom);\r\n  // }\r\n\r\n  // componentDidMount() {\r\n  //   this.olmap.setTarget(\"map\");\r\n\r\n  //   // Listen to map changes\r\n  //   this.olmap.on(\"moveend\", () => {\r\n  //     let center = this.olmap.getView().getCenter();\r\n  //     let zoom = this.olmap.getView().getZoom();\r\n  //     this.setState({ center, zoom });\r\n  //   });\r\n  // }\r\n\r\n  // shouldComponentUpdate(nextProps, nextState) {\r\n  //   let center = this.olmap.getView().getCenter();\r\n  //   let zoom = this.olmap.getView().getZoom();\r\n  //   if (center === nextState.center && zoom === nextState.zoom) return false;\r\n  //   return true;\r\n  // }\r\n\r\n  userAction() {\r\n    this.setState({ center: [546000, 6868000], zoom: 5 });\r\n  }\r\n\r\n  render() {\r\n    // this.updateMap(); // Update map on render?\r\n    return (\r\n      <div id=\"map\" style={{ width: \"100%\", height: \"360px\" }}>\r\n        <button onClick={e => this.userAction()}>setState on click</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MyComponents;"]},"metadata":{},"sourceType":"module"}