{"ast":null,"code":"import axios from \"axios\";\nconst GETALL = \"/api/admin/all\";\nconst DELETE = \"/api/admin/\";\nconst UPDATE = \"/api/admin/\";\nconst ADDSHIFTTODOCTOR = \"\";\nexport default class AdminAPI {\n  constructor() {\n    this.getAll = (token, response, error) => {\n      axios.get(GETALL, {\n        headers: {\n          Authorization: token\n        }\n      }).then(response).catch(error);\n    };\n\n    this.deleteUser = (token, idUser, response, error) => {\n      axios({\n        method: 'DELETE',\n        url: DELETE + idUser,\n        headers: {\n          Authorization: token\n        }\n      }).then(response).catch(error);\n    };\n\n    this.updateUser = (token, idUser, formData, response, error) => {\n      const data = {\n        \"currentNumber\": formData.get(\"currentNumber\")\n      };\n      axios.put(UPDATE + idUser, data, {\n        headers: {\n          Authorization: token\n        }\n      }).then(response).catch(error);\n    };\n\n    this.addShiftToDoctor = (token, idDoctor, formData, response, error) => {\n      const data = {\n        \"idShift\": formData.get(\"idShift\")\n      };\n      axios.post(ADDSHIFTTODOCTOR + idDoctor, data, {\n        headers: {\n          Authorization: token\n        }\n      }).then(response).catch(error);\n    };\n  }\n\n}","map":{"version":3,"sources":["C:/Users/HSONNL/Desktop/myProject/NCOV-19/Repo/NCOV-19Manager/client/src/modules/api/admin.ts"],"names":["axios","GETALL","DELETE","UPDATE","ADDSHIFTTODOCTOR","AdminAPI","getAll","token","response","error","get","headers","Authorization","then","catch","deleteUser","idUser","method","url","updateUser","formData","data","put","addShiftToDoctor","idDoctor","post"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,MAAc,GAAG,gBAAvB;AACA,MAAMC,MAAc,GAAG,aAAvB;AACA,MAAMC,MAAc,GAAG,aAAvB;AACA,MAAMC,gBAAwB,GAAG,EAAjC;AACA,eAAe,MAAMC,QAAN,CAAe;AAAA;AAAA,SAE5BC,MAF4B,GAEnB,CAACC,KAAD,EAAgBC,QAAhB,EAA+BC,KAA/B,KAA8C;AACrDT,MAAAA,KAAK,CAACU,GAAN,CAAUT,MAAV,EAAkB;AAAEU,QAAAA,OAAO,EAAE;AAAEC,UAAAA,aAAa,EAAEL;AAAjB;AAAX,OAAlB,EACGM,IADH,CACQL,QADR,EAEGM,KAFH,CAESL,KAFT;AAGD,KAN2B;;AAAA,SAQ5BM,UAR4B,GAQf,CAACR,KAAD,EAAgBS,MAAhB,EAAgCR,QAAhC,EAA+CC,KAA/C,KAA8D;AACzET,MAAAA,KAAK,CAAC;AACJiB,QAAAA,MAAM,EAAE,QADJ;AAEJC,QAAAA,GAAG,EAAEhB,MAAM,GAAGc,MAFV;AAGJL,QAAAA,OAAO,EAAE;AACPC,UAAAA,aAAa,EAAEL;AADR;AAHL,OAAD,CAAL,CAQGM,IARH,CAQQL,QARR,EASGM,KATH,CASSL,KATT;AAUD,KAnB2B;;AAAA,SAqB5BU,UArB4B,GAqBf,CAACZ,KAAD,EAAgBS,MAAhB,EAAgCI,QAAhC,EAAoDZ,QAApD,EAAmEC,KAAnE,KAAkF;AAC7F,YAAMY,IAAI,GAAG;AACX,yBAAiBD,QAAQ,CAACV,GAAT,CAAa,eAAb;AADN,OAAb;AAGAV,MAAAA,KAAK,CAACsB,GAAN,CAAUnB,MAAM,GAAGa,MAAnB,EAA2BK,IAA3B,EAAiC;AAAEV,QAAAA,OAAO,EAAE;AAAEC,UAAAA,aAAa,EAAEL;AAAjB;AAAX,OAAjC,EACGM,IADH,CACQL,QADR,EAEGM,KAFH,CAESL,KAFT;AAGD,KA5B2B;;AAAA,SA8B5Bc,gBA9B4B,GA8BT,CAAChB,KAAD,EAAgBiB,QAAhB,EAAkCJ,QAAlC,EAAsDZ,QAAtD,EAAqEC,KAArE,KAAoF;AACrG,YAAMY,IAAI,GAAG;AACX,mBAAWD,QAAQ,CAACV,GAAT,CAAa,SAAb;AADA,OAAb;AAGAV,MAAAA,KAAK,CAACyB,IAAN,CAAWrB,gBAAgB,GAAGoB,QAA9B,EAAwCH,IAAxC,EAA8C;AAAEV,QAAAA,OAAO,EAAE;AAAEC,UAAAA,aAAa,EAAEL;AAAjB;AAAX,OAA9C,EACGM,IADH,CACQL,QADR,EAEGM,KAFH,CAESL,KAFT;AAGD,KArC2B;AAAA;;AAAA","sourcesContent":["import axios from \"axios\";\r\n\r\nconst GETALL: string = \"/api/admin/all\";\r\nconst DELETE: string = \"/api/admin/\";\r\nconst UPDATE: string = \"/api/admin/\";\r\nconst ADDSHIFTTODOCTOR: string = \"\";\r\nexport default class AdminAPI {\r\n\r\n  getAll = (token: string, response: any, error: any) => {\r\n    axios.get(GETALL, { headers: { Authorization: token } })\r\n      .then(response)\r\n      .catch(error);\r\n  };\r\n\r\n  deleteUser = (token: string, idUser: string, response: any, error: any) => {\r\n    axios({\r\n      method: 'DELETE',\r\n      url: DELETE + idUser,\r\n      headers: {\r\n        Authorization: token\r\n      }\r\n    }\r\n    )\r\n      .then(response)\r\n      .catch(error);\r\n  };\r\n\r\n  updateUser = (token: string, idUser: string, formData: FormData, response: any, error: any) => {\r\n    const data = {\r\n      \"currentNumber\": formData.get(\"currentNumber\")\r\n    }\r\n    axios.put(UPDATE + idUser, data, { headers: { Authorization: token } })\r\n      .then(response)\r\n      .catch(error);\r\n  };\r\n\r\n  addShiftToDoctor = (token: string, idDoctor: string, formData: FormData, response: any, error: any) => {\r\n    const data = {\r\n      \"idShift\": formData.get(\"idShift\")\r\n    }\r\n    axios.post(ADDSHIFTTODOCTOR + idDoctor, data, { headers: { Authorization: token } })\r\n      .then(response)\r\n      .catch(error);\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}