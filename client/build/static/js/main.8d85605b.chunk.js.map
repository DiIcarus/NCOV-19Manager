{"version":3,"sources":["component/RootContainer/style.ts","component/MenuTop/style.ts","component/MenuTop/index.tsx","component/FormRegister/style.ts","modules/api/doctor.ts","component/FormRegister/index.tsx","store/RegisterForm/action.ts","store/RegisterForm/type.ts","component/MenuManager/style.ts","component/MenuManager/index.tsx","component/InfoTableRoom/style.ts","modules/api/admin.ts","modules/api/room.ts","modules/api/shift.ts","modules/api/user.ts","component/InfoTableRoom/index.tsx","component/InfoTablePatient/style.ts","component/InfoTablePatient/index.tsx","component/InfoTableShift/style.ts","component/InfoTableShift/index.tsx","component/InfoTableUser/style.ts","component/InfoTableUser/index.tsx","component/RootContainer/index.tsx","App.tsx","serviceWorker.js","store/SignInForm/reducer.ts","store/RegisterForm/reducer.ts","store/User/type.ts","store/User/reducer.ts","store/UsersSigned/type.ts","store/UsersSigned/reducer.ts","store/index.ts","store/SignInForm/type.ts","index.tsx"],"names":["Container","styled","div","MainBlock","LogoArea","UserArea","AvtArea","LogoImg","img","MenuArea","MenuChild","span","MenuLink","a","FeatureHead","p","initState","string","MenuTop","state","name","src","href","style","margin","backgroundImage","this","Component","TextInput","TextField","TextFieldArea","ButtonRegister","Button","DoctorAPI","userRegister","formData","response","error","data","get","axios","post","then","catch","userLogin","registerPatient","token","headers","Authorization","getListPatient","addPatientToRoom","idPatient","FormRegister","module","APIDemo","onchangeAdress","event","props","setAddressRegister","target","value","onchangeDateOfBirth","setDateOfBirthRegister","onchangeEmail","setEmailRegister","onchangeIdentityCard","setIdentityCardRegister","onchangeFullname","setFullnameRegister","onchangePassword","setPasswordRegister","onchangeNumber","setNumberRegister","handleRegister","formdata","FormData","append","RegisterState","address","password","phoneNumber","dateOfBirth","identityCard","fullName","email","console","log","res","err","formRegister","path","variant","label","id","type","placeholder","onChange","color","size","onClick","Fragment","connect","addr","payload","DoB","setDisplaySignIn","status","fullname","indentity","phone","pws","ListMenu","LinkChild","Link","ListItems","ListItem","Particless","Particles","MenuManager","imgArr","renderPatientManager","List","button","ListItemIcon","to","ListItemText","disableTypography","primary","showMSSV","ms","renderImg","i","push","map","renderBackground","params","TableRowInfo","TableRow","TableRowHead","PopupBackground","PopupContainer","PopupInfo","PopupInput","ButtonSubmit","FeatureArea","SearchInput","input","FeatureButton","PaperDiv","PaperDivNumber","AdminAPI","getAll","deleteUser","idUser","method","url","updateUser","put","addShiftToDoctor","idDoctor","RoomAPI","idRoom","upDate","delete","create","ShiftAPI","idShift","UserAPI","uploadAvatar","getProfile","changePassword","room","patient","shift","currentId","currentRoom","currentNumber","_id","maxNumber","__v","demo","deletemode","updatemode","showPopup","numberPaper","featureType","delAll","listDell","valueInputSearch","roomRequest","updateCurrentNumber","insertMaxNumber","insertAddress","insertName","getallpage","getalltypesort","getallsearch","InfoTableRoom","adminApi","doctorApi","roomApi","shiftApi","userApi","InsertCurrent","SearchValueInputSearch","DeleteCurrent","UpdateCurrent","GetUsers","userId","GETAll","setState","getIdRow","saveInsertPopup","obj","cancelPopup","renderInsertForm","onchangMaxNumberRoom","onchangAddressRoom","onchangNameRoom","startIcon","saveUpdatePopup","toString","renderUpdateForm","onchangCurrentNumberRoom","renderPopupInput","renderPopupInfo","setShowPopupByType","setDeleteMode","setUpdateMode","setShowPopup","donotthing","setDelAll","setInputSearch","renderButton","backgroundColor","height","borderTopRightRadius","borderTopLeftRadius","padding","marginTop","display","deleteAllCheckd","setIdCurrent","setListDel","arr","indexOf","splice","renderChildTableRoom","row","key","onFocus","TableCell","align","Checkbox","renderGrid","overflow","Table","TableHead","TableBody","renderPaper","setInterval","paddingBottom","UsersState","patientRequest","insertaddress","insertpassword","insertphonenumber","insertdayofbirth","insertidentitycard","insertfullname","insertemail","insertgender","addPatientToRoomidRoom","currentPatient","avatars","gender","isActive","gps","idRole","__id","InfoTablePatient","GETAllroom","AddPatienToRoom","RegisterPatient","users","onchangAddressPatient","onchangPasswordPatient","onchangPhoneNumberPatient","onchangDateofBirthPatient","onchangIdentityCardPatient","onchangFullNamePatient","onchangEmailPatient","onchangGenderPatient","Autocomplete","width","options","autoHighlight","getOptionLabel","option","renderOption","renderInput","inputProps","autoComplete","reason","onchangidRoomPatient","shiftRequest","updatestartTime","insertstartTime","insertendTime","currentShift","startTime","endTime","InfoTableShift","caTruc","onchangeInsertStartTime","onchangeInsertEndTime","onchangUpdateStartTime","length","insertmode","usersRequest","updateemail","addshiftidShift","currentUsers","InfoTableUser","AddShiftToDoctor","idUsers","GETAllShift","onchangIdShiftAdmin","onchangEmailAdmin","setInsertMode","RootContainer","renderSwitch","children","renderManager","App","React","Boolean","window","location","hostname","match","Object","freeze","full_name","avatar","dayofbirth","gmail","rootReducer","combineReducers","UserssignedState","previousState","action","SignInState","middlewares","thunk","middleWareEnhancer","applyMiddleware","store","createStore","composeWithDevTools","subscribe","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.8d85605b.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  height: auto;\r\n  background-color: white;\r\n  padding-top: 70px;\r\n`;\r\n\r\nexport const MainBlock = styled.div`\r\n\tleft: 10%;\r\n  width: 90%;\r\n  height: 100%;\r\n  /* display: flex; */\r\n  /* align-content: center; */\r\n  /* justify-content: center; */\r\n  /* flex-direction: column; */\r\n  /* align-items: center; */\r\n  overflow: auto;\r\n  position: fixed;\r\n  /* background: linear-gradient(\r\n    155deg,\r\n    rgba(2, 0, 36, 1) 0%,\r\n    rgba(21, 21, 130, 1) 31%,\r\n    rgba(0, 171, 205, 1) 100%\r\n  ); */\r\n  z-index: 1000;\r\n`;\r\n","// import styled from \"styled-components\";\r\n// import AppBar from '@material-ui/core/AppBar';\r\n// import { Link } from \"react-router-dom\";\r\n\r\n// export const Container = styled.div`\r\n//   position:fixed;\r\n//   height: 50px;\r\n//   width: 90%;\r\n//   /* padding: 0px 20px; */\r\n//   display: flex;\r\n//   flex-direction: raw;\r\n//   justify-content: space-evenly;\r\n//   background-color: navy;\r\n//   color:white;\r\n//   align-items:stretch;\r\n//   font-size: 15px;\r\n//   font-weight: 500;\r\n//   line-height: 24px;\r\n//   /* text-shadow: 2px 0px 4px black; */\r\n// `;\r\n\r\n// export const HotLine = styled.div`\r\n//   height: 100%;\r\n//   padding: 0px;\r\n//   /* background-color: blue; */\r\n//   text-align: center;\r\n//   align-content:center;\r\n//   >p{\r\n//     position:relative;\r\n//     top:50%;\r\n//     transform:translateY(-50%);\r\n//     margin:0px;\r\n//     /* background-color: black;\r\n//     color:white; */\r\n//     align-items:stretch;\r\n//   }\r\n// `;\r\n\r\n// export const MiddleMenu = styled.div`\r\n//   height: 100%;\r\n//   /* background-color: yellow; */\r\n// `;\r\n\r\n// export const UsersArea = styled.div`\r\n//   height: 100%;\r\n//   /* background-color: red; */\r\n// `;\r\n// export const ContainerMenu = styled.div`\r\n//   display: flex;\r\n//   flex-direction: raw;\r\n//   align-items: center;\r\n//   flex-wrap: wrap;\r\n//   position:relative;\r\n//   top:50%;\r\n//   transform:translateY(-50%);\r\n// `;\r\n\r\n// export const HotLineMenu = styled.span``;\r\n\r\n// export const MiddleMenuMenu = styled.span``;\r\n\r\n// export const HeaderBtnMenu = styled.div`\r\n//   margin-left: 10px;\r\n//   margin-right: 10px;\r\n// `;\r\n// export const LinkRoute = styled(Link)`\r\n//   color: white;\r\n//   text-decoration: none;\r\n//   font-size:25px;\r\n// `;\r\n\r\nimport styled from \"styled-components\";\r\n\r\n\r\n\r\nexport const Container = styled.div`\r\n\ttop:0px;\r\n\tposition:fixed;\r\n\twidth:100%;\r\n\theight:auto;\r\n\tdisplay:grid;\r\n\tgrid-template-columns: repeat(12,1fr);\r\n\tbox-shadow: 2px 2px 10px black;\r\n\tbackground-color:white;\r\n\tfont-family: \"Quicksand\", sans-serif;\r\n\tfont-weight:600;\r\n\tcolor: #555;\r\n\tz-index:2000;\r\n`;\r\n\r\nexport const LogoArea = styled.div`\r\n\tgrid-column:2/3;\r\n\tdisplay:flex;\r\n`;\r\n\r\nexport const UserArea = styled.div`\r\n\tgrid-column:9/12;\r\n\tdisplay:flex;\r\n\tjustify-content:flex-end;\r\n`;\r\n\r\nexport const AvtArea = styled.div`\r\n\twidth: 50px;\r\n\tmargin:10px;\r\n\tborder-radius:50%;\r\n\tbox-shadow: 0px 0px 5px #777;\r\n\theight: 50px;\r\n\tpadding:0px;\r\n\tbackground-position: center;\r\n\tbackground-repeat: no-repeat;\r\n\tbackground-size: cover;\r\n`\r\nexport const LogoImg = styled.img`\r\n\theight:50px;\r\n\tpadding:10px;\r\n`\r\n\r\nexport const MenuArea = styled.div`\r\n\tgrid-column:3/7;\r\n\tdisplay:flex;\r\n\tflex-flow: wrap;\r\n\tjustify-content:space-around;\r\n`;\r\n\r\nexport const MenuChild = styled.span`\r\n\tdisplay:flex;\r\n\talign-items:stretch;\r\n\t\r\n\tcursor: pointer;\r\n\t:hover{\r\n\t\tcolor: midnightblue;\r\n\t}\r\n`;\r\n\r\nexport const MenuLink = styled.a`\r\n\talign-self:center;\r\n\ttext-decoration: none;\r\n\tcolor: inherit;\r\n`;\r\n\r\nexport const FeatureHead = styled.p`\r\n\tcolor: inherit;\r\n\talign-self:center;\r\n\tmargin:0px;\r\n`","import React, { Component } from \"react\";\r\n//style importer\r\nimport * as s__ from \"./style\";\r\n//component importer\r\nimport ComponentUser from \"../ComponentUser/index\";\r\n//utils importer\r\n//config importer\r\nimport * as config__ from \"../../config/globtype\";\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport ModeCommentIcon from '@material-ui/icons/ModeComment';\r\n\r\ntype State = typeof initState;\r\nconst initState = {\r\n  string: \"Hello my friend\" as string,\r\n};\r\nclass MenuTop extends Component<{}, State> {\r\n  state = initState;\r\n\r\n  img:string = 'https://scontent.fvca1-1.fna.fbcdn.net/v/t1.0-9/89257991_222294712294689_3681975338583195648_n.jpg?_nc_cat=108&_nc_sid=1480c5&_nc_ohc=lzYO_8Zr5pwAX87xxPJ&_nc_ht=scontent.fvca1-1.fna&oh=25695f44f2df2b41f630bf5931749096&oe=5EC84D34';\r\n  name:string = \"ADMIN\";\r\n  render() {\r\n    return (\r\n      <s__.Container>\r\n        <s__.LogoArea>\r\n          <s__.LogoImg src=\"https://deephub.vn/wp-content/uploads/2019/03/logoAsset-5@128.png\" />\r\n        </s__.LogoArea>\r\n        <s__.MenuArea>\r\n          <s__.MenuChild><s__.MenuLink href=\"/\">HOME</s__.MenuLink></s__.MenuChild>\r\n          <s__.MenuChild><s__.MenuLink href=\"/manager/room\">MANAGER</s__.MenuLink></s__.MenuChild>\r\n          <s__.MenuChild><s__.MenuLink href=\"/contact\">CONTACT</s__.MenuLink></s__.MenuChild>\r\n          <s__.MenuChild><s__.MenuLink href=\"/about-us\">ABOUT US</s__.MenuLink></s__.MenuChild>\r\n        </s__.MenuArea>\r\n        <s__.UserArea>\r\n          <s__.MenuChild><s__.FeatureHead><NotificationsIcon style={{margin:\"10px\"}}/></s__.FeatureHead></s__.MenuChild>\r\n          <s__.MenuChild><s__.FeatureHead><ModeCommentIcon style={{margin:\"10px\"}}/></s__.FeatureHead></s__.MenuChild>\r\n          <s__.MenuChild><s__.MenuLink href=\"/info\">\r\n            <s__.AvtArea style={{\tbackgroundImage: \"url('\"+this.img+\"')\"}}/></s__.MenuLink></s__.MenuChild>\r\n          <s__.MenuChild><s__.MenuLink href=\"/info\">{this.name}</s__.MenuLink></s__.MenuChild>\r\n        </s__.UserArea>\r\n      </s__.Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MenuTop;\r\n","import styled from 'styled-components';\r\nimport {TextField, Button} from '@material-ui/core';\r\n\r\nexport const Container = styled.div`\r\n    /* position: absolute; */\r\n    /* top: 50%;\r\n    left: 50%; */\r\n    /* transform: translate(-50%,-50%); */\r\n    display:flex;\r\n    flex-direction:column;\r\n`\r\nexport const TextInput = styled(TextField)`\r\n    width:300px;\r\n`\r\n\r\nexport const TextFieldArea = styled.div`\r\n    margin: 5px 0px;\r\n\r\n`\r\n\r\nexport const ButtonRegister = styled(Button)`\r\n    width:300px;\r\n    /* border-color: #F27ED3;\r\n    color: #F27ED3;\r\n    background-color: #F27ED3;\r\n    &:hover{\r\n        color: white;\r\n        background-color: #F27ED3;\r\n    } */\r\n`\r\n\r\n","import axios from \"axios\";\r\nimport * as config from './../config';\r\n\r\nconst DOCTOR_REGISTER: string = \"/api/doctor/register\";\r\nconst DOCTOR_SIGNIN: string = \"/api/user/login\"\r\nconst DOCTOR_REGISTER_PATIENT: string = \"/api/doctor/register-patient\";\r\nconst DOCTOR_GETLIST_PATIENT: string = \"/api/doctor/all-patient\"\r\nconst DOCTOR_ADDPATIENTOROOM: string = \"/api/doctor/add-patient-to-room/\";\r\n\r\nexport default class DoctorAPI {\r\n\r\n  userRegister = (formData: any, response: any, error: any) => {\r\n    const data = {\r\n      'address': formData.get('address'),\r\n      'password': formData.get('password'),\r\n      'phoneNumber': formData.get('phoneNumber'),\r\n      'dateOfBirth': formData.get('dateOfBirth'),\r\n      'identityCard': formData.get('identityCard'),\r\n      'fullName': formData.get('fullName'),\r\n      'email': formData.get('email'),\r\n    }\r\n    axios.post(DOCTOR_REGISTER, data)\r\n      .then(response)\r\n      .catch(error);\r\n  };\r\n\r\n  userLogin = (formData: any, response: any, error: any) => {\r\n    const data = {\r\n      \"identityCard\": formData.get(\"identityCard\"),\r\n      \"password\": formData.get(\"password\")\r\n    }\r\n    axios.post(DOCTOR_SIGNIN, data)\r\n      .then(response)\r\n      .catch(error);\r\n  };\r\n\r\n  registerPatient = (token: string, formData: any, response: any, error: any) => {\r\n    const data = {\r\n      'address': formData.get('address'),\r\n      'password': formData.get('password'),\r\n      'phoneNumber': formData.get('phoneNumber'),\r\n      'dateOfBirth': formData.get('dateOfBirth'),\r\n      'identityCard': formData.get('identityCard'),\r\n      'fullName': formData.get('fullName'),\r\n      'email': formData.get('email'),\r\n      'gender': formData.get('gender')\r\n    }\r\n    axios.post(DOCTOR_REGISTER_PATIENT, data, { headers: { Authorization: token } })\r\n      .then(response)\r\n      .catch(error);\r\n  };\r\n\r\n  getListPatient = (token: string, response: any, error: any) => {\r\n    axios.get(DOCTOR_GETLIST_PATIENT, { headers: { Authorization: token } })\r\n      .then(response)\r\n      .catch(error);\r\n  };\r\n\r\n  addPatientToRoom = (token: string, idPatient: string, formData: any, response: any, error: any) => {\r\n    const data = {\r\n      \"idRoom\": formData.get(\"idRoom\")\r\n    }\r\n    axios.post(DOCTOR_ADDPATIENTOROOM + idPatient, data, { headers: { Authorization: token } })\r\n      .then(response)\r\n      .catch(error);\r\n  };\r\n}","import React, { Component, ChangeEvent } from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\n//style importer\r\nimport * as style__ from \"./style\";\r\n//component importer\r\n\r\n//import module\r\nimport APIDemo from \"../../modules/api/doctor\";\r\n/////\r\n\r\n\r\n/////\r\n//utils importer\r\n//global store\r\n//init\r\nimport { connect } from \"react-redux\";\r\nimport { MainState } from \"../../store/index\";\r\n//type\r\nimport { RegisterState } from \"../../store/RegisterForm/type\";\r\n//action\r\nimport {\r\n  setAddressRegister,\r\n  setDateOfBirthRegister,\r\n  setDisplaySignIn,\r\n  setEmailRegister,\r\n  setFullnameRegister,\r\n  setIdentityCardRegister,\r\n  setNumberRegister,\r\n  setPasswordRegister,\r\n} from \"../../store/RegisterForm/action\";\r\n\r\ninterface Props {\r\n  RegisterState: RegisterState;\r\n  setAddressRegister: typeof setAddressRegister;\r\n  setDateOfBirthRegister: typeof setDateOfBirthRegister;\r\n  setDisplaySignIn: typeof setDisplaySignIn;\r\n  setEmailRegister: typeof setEmailRegister;\r\n  setFullnameRegister: typeof setFullnameRegister;\r\n  setIdentityCardRegister: typeof setIdentityCardRegister;\r\n  setNumberRegister: typeof setNumberRegister;\r\n  setPasswordRegister: typeof setPasswordRegister;\r\n}\r\n\r\nclass FormRegister extends Component<Props, {}> {\r\n  module = new APIDemo();\r\n\r\n  onchangeAdress = (event: ChangeEvent<HTMLInputElement>) => {\r\n    this.props.setAddressRegister(event.target.value);\r\n  };\r\n\r\n  onchangeDateOfBirth = (event: ChangeEvent<HTMLInputElement>) => {\r\n    this.props.setDateOfBirthRegister(event.target.value);\r\n  };\r\n\r\n  onchangeEmail = (event: ChangeEvent<HTMLInputElement>) => {\r\n    this.props.setEmailRegister(event.target.value);\r\n  };\r\n\r\n  onchangeIdentityCard = (event: ChangeEvent<HTMLInputElement>) => {\r\n    this.props.setIdentityCardRegister(event.target.value);\r\n  };\r\n\r\n  onchangeFullname = (event: ChangeEvent<HTMLInputElement>) => {\r\n    this.props.setFullnameRegister(event.target.value);\r\n  };\r\n\r\n  onchangePassword = (event: ChangeEvent<HTMLInputElement>) => {\r\n    this.props.setPasswordRegister(event.target.value);\r\n  };\r\n\r\n  onchangeNumber = (event: ChangeEvent<HTMLInputElement>) => {\r\n    this.props.setNumberRegister(event.target.value);\r\n  };\r\n\r\n  handleRegister = () => {\r\n    const formdata = new FormData();\r\n    formdata.append(\"address\", this.props.RegisterState.address);\r\n    formdata.append(\"password\", this.props.RegisterState.password);\r\n    formdata.append(\"phoneNumber\", this.props.RegisterState.phoneNumber);\r\n    formdata.append(\"dateOfBirth\", this.props.RegisterState.dateOfBirth);\r\n    formdata.append(\"identityCard\", this.props.RegisterState.identityCard);\r\n    formdata.append(\"fullName\", this.props.RegisterState.fullName);\r\n    formdata.append(\"email\", this.props.RegisterState.email);\r\n    console.log(formdata);\r\n    this.module.userRegister(\r\n      formdata,\r\n      (res: any) => {\r\n        console.log(res);\r\n      },\r\n      (err: any) => {\r\n        console.log(err);\r\n      }\r\n    );\r\n  };\r\n\r\n  formRegister = () => {\r\n    return (\r\n      <Route path=\"/register\">\r\n        <style__.Container>\r\n          <style__.TextFieldArea>\r\n            <style__.TextInput\r\n              variant=\"outlined\"\r\n              label=\"Fullname\"\r\n              id=\"Fullname\"\r\n              type=\"text\"\r\n              value={this.props.RegisterState.fullName}\r\n              placeholder=\"\"\r\n              onChange={this.onchangeFullname}\r\n            />\r\n          </style__.TextFieldArea>\r\n          <style__.TextFieldArea>\r\n            <style__.TextInput\r\n              variant=\"outlined\"\r\n              label=\"IdentityCard\"\r\n              id=\"IdentityCard\"\r\n              type=\"text\"\r\n              value={this.props.RegisterState.identityCard}\r\n              onChange={this.onchangeIdentityCard}\r\n            />\r\n          </style__.TextFieldArea>\r\n          <style__.TextFieldArea>\r\n            <style__.TextInput\r\n              variant=\"outlined\"\r\n              label=\"DateOfBirth\"\r\n              id=\"DateOfBirth\"\r\n              type=\"text\"\r\n              value={this.props.RegisterState.dateOfBirth}\r\n              onChange={this.onchangeDateOfBirth}\r\n            />\r\n          </style__.TextFieldArea>\r\n          <style__.TextFieldArea>\r\n            <style__.TextInput\r\n              variant=\"outlined\"\r\n              label=\"Email\"\r\n              id=\"Email\"\r\n              type=\"text\"\r\n              value={this.props.RegisterState.email}\r\n              onChange={this.onchangeEmail}\r\n            />\r\n          </style__.TextFieldArea>\r\n          <style__.TextFieldArea>\r\n            <style__.TextInput\r\n              variant=\"outlined\"\r\n              label=\"Address\"\r\n              id=\"Address\"\r\n              type=\"text\"\r\n              value={this.props.RegisterState.address}\r\n              onChange={this.onchangeAdress}\r\n            />\r\n          </style__.TextFieldArea>\r\n          <style__.TextFieldArea>\r\n            <style__.TextInput\r\n              variant=\"outlined\"\r\n              label=\"Number\"\r\n              id=\"Number\"\r\n              type=\"text\"\r\n              value={this.props.RegisterState.phoneNumber}\r\n              onChange={this.onchangeNumber}\r\n            />\r\n          </style__.TextFieldArea>\r\n          <style__.TextFieldArea>\r\n            <style__.TextInput\r\n              variant=\"outlined\"\r\n              label=\"Password\"\r\n              id=\"Password\"\r\n              type=\"password\"\r\n              value={this.props.RegisterState.password}\r\n              onChange={this.onchangePassword}\r\n            />\r\n          </style__.TextFieldArea>\r\n          <style__.ButtonRegister\r\n            variant=\"outlined\" \r\n            color=\"primary\"\r\n            size=\"large\"\r\n            onClick={() => this.handleRegister()}\r\n          >Đăng ký\r\n          </style__.ButtonRegister>\r\n        </style__.Container>\r\n      </Route>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return <React.Fragment>{this.formRegister()}</React.Fragment>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: MainState) => ({\r\n  RegisterState: state.RegisterState,\r\n});\r\nexport default connect(mapStateToProps, {\r\n  setAddressRegister,\r\n  setDateOfBirthRegister,\r\n  setDisplaySignIn,\r\n  setEmailRegister,\r\n  setFullnameRegister,\r\n  setIdentityCardRegister,\r\n  setNumberRegister,\r\n  setPasswordRegister,\r\n})(FormRegister);\r\n","import {\r\n    SET_ADDRESS_REGISTER\r\n    ,SET_DATEOFBIRTH_REGISTER\r\n    ,SET_DISPLAY_REGISTER\r\n    ,SET_PHONENUMBER_REGISTER\r\n    ,SET_FULLNAME_REGISTER\r\n    ,SET_PASSWORD_REGISTER\r\n    ,SET_IDENTITYCARD_REGISTER\r\n    ,SET_EMAIL_REGISTER\r\n} from './type';\r\n\r\nexport function setAddressRegister(addr:string){\r\n    return {\r\n        type:SET_ADDRESS_REGISTER,\r\n        payload: addr\r\n    };\r\n}\r\n\r\nexport function setDateOfBirthRegister(DoB:string){\r\n    return {\r\n        type:SET_DATEOFBIRTH_REGISTER,\r\n        payload: DoB\r\n    };\r\n}\r\n\r\nexport function setNumberRegister(phone:string){\r\n    return {\r\n        type:SET_PHONENUMBER_REGISTER,\r\n        payload: phone\r\n    };\r\n}\r\n\r\nexport function setFullnameRegister(fullname:string){\r\n    return {\r\n        type:SET_FULLNAME_REGISTER,\r\n        payload: fullname\r\n    };\r\n}\r\n\r\nexport function setPasswordRegister(pws:string){\r\n    return {\r\n        type:SET_PASSWORD_REGISTER,\r\n        payload: pws\r\n    };\r\n}\r\n\r\nexport function setIdentityCardRegister(indentity:string){\r\n    return {\r\n        type:SET_IDENTITYCARD_REGISTER,\r\n        payload: indentity\r\n    };\r\n}\r\n\r\nexport function setEmailRegister(email:string){\r\n    return {\r\n        type:SET_EMAIL_REGISTER,\r\n        payload: email\r\n    };\r\n}\r\n\r\nexport function setDisplaySignIn(status:boolean){\r\n    return {\r\n        type:SET_DISPLAY_REGISTER,\r\n        payload: status\r\n    };\r\n}","export interface RegisterState {\r\n  identityCard: string;\r\n  email: string;\r\n  fullName: string;\r\n  address: string;\r\n  password: string;\r\n  dateOfBirth: string;\r\n  phoneNumber: string;\r\n  display: boolean;\r\n}\r\n\r\nexport const SET_IDENTITYCARD_REGISTER = \"SET_IDENTITYCARD_REGISTER\";\r\nexport const SET_PASSWORD_REGISTER = \"SET_PASSWORD_REGISTER\";\r\nexport const SET_EMAIL_REGISTER = \"SET_EMAIL_REGISTER\";\r\nexport const SET_FULLNAME_REGISTER = \"SET_FULLNAME_REGISTER\";\r\nexport const SET_ADDRESS_REGISTER = \"SET_ADDRESS_REGISTER\";\r\nexport const SET_DATEOFBIRTH_REGISTER = \"SET_DATEOFBIRTH_REGISTER\";\r\nexport const SET_PHONENUMBER_REGISTER = \"SET_PHONENUMBER_REGISTER\";\r\nexport const SET_DISPLAY_REGISTER = \"SET_DISPLAY_REGISTER\";\r\n\r\ninterface setIdentityCard {\r\n  type: typeof SET_IDENTITYCARD_REGISTER;\r\n  payload: string;\r\n}\r\n\r\ninterface setPassword {\r\n  type: typeof SET_PASSWORD_REGISTER;\r\n  payload: string;\r\n}\r\n\r\ninterface setEmailRegister {\r\n  type: typeof SET_EMAIL_REGISTER;\r\n  payload: string;\r\n}\r\n\r\ninterface setFullnameRegister {\r\n  type: typeof SET_FULLNAME_REGISTER;\r\n  payload: string;\r\n}\r\n\r\ninterface setDateofBirthRegister {\r\n  type: typeof SET_DATEOFBIRTH_REGISTER;\r\n  payload: string;\r\n}\r\n\r\ninterface setPhoneNumberRegister{\r\n  type: typeof SET_PHONENUMBER_REGISTER;\r\n  payload: string;\r\n}\r\n\r\ninterface setDisplay {\r\n  type: typeof SET_DISPLAY_REGISTER;\r\n  payload: boolean;\r\n}\r\n\r\ninterface setAddress {\r\n  type: typeof SET_ADDRESS_REGISTER;\r\n  payload: string;\r\n}\r\n\r\nexport type RegisterActionTypes = \r\n  | setIdentityCard \r\n  | setAddress\r\n  | setPassword \r\n  | setEmailRegister\r\n  | setFullnameRegister\r\n  | setDateofBirthRegister\r\n  | setPhoneNumberRegister\r\n  | setDisplay;\r\n","// import styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport Particles from 'react-particles-js';\r\nimport ListItem from '@material-ui/core/ListItem';\r\n\r\nexport const Container = styled.div`\r\n  width:10%;\r\n  height:100%;\r\n  display: flex;\r\n  align-content:center;\r\n  justify-content:center;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  overflow:auto;\r\n  position:fixed;\r\n  background: linear-gradient(155deg, rgba(2,0,36,1) 0%, rgba(21,21,130,1) 31%, rgba(0,171,205,1) 100%);\r\n  z-index:1000;\r\n\r\n`;\r\n\r\nexport const ListMenu = styled.div`\r\n  width:100%;\r\n  position: absolute;\r\n  top:0%;\r\n  /* opacity: 0.8; */\r\n`;\r\n\r\nexport const LinkChild = styled(Link)`\r\n  text-decoration: none;\r\n  color:white;\r\n`\r\n\r\nexport const ListItems = styled(ListItem)`\r\n  :hover{\r\n    /* background-color:white; */\r\n    opacity: 1;\r\n  }\r\n`\r\nexport const Particless = styled(Particles)`\r\n  position: absolute;\r\n  width:100%;\r\n  height: 100%;\r\n  /* float:right; */\r\n  z-index:-1000;\r\n  ::after{\r\n      clear: both;\r\n  }\r\n`","import React, { Component } from \"react\";\r\n//style importer\r\nimport * as s__ from \"./style\";\r\n\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\nimport WatchLaterIcon from '@material-ui/icons/WatchLater';\r\nimport PermContactCalendarIcon from '@material-ui/icons/PermContactCalendar';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport AddBoxIcon from '@material-ui/icons/AddBox';\r\n//import component\r\nimport NewsCard from '../CardNews/index';\r\nimport { Route, Link } from \"react-router-dom\";\r\nimport { HoverMode } from 'react-particles-js';\r\nimport { List } from \"@material-ui/core\";\r\n\r\nclass MenuManager extends Component<{}, {}> {\r\n\r\n  imgArr:string[] =[];\r\n  renderPatientManager=()=>{\r\n    return (\r\n      <s__.ListMenu>\r\n        <List>\r\n        <s__.ListItems button>\r\n          <ListItemIcon>\r\n            <DashboardIcon style={{color:\"white\"}}/>\r\n          </ListItemIcon>\r\n          <s__.LinkChild to=\"/manager/room\"><ListItemText disableTypography={true} primary=\"Rooms\" /></s__.LinkChild>\r\n        </s__.ListItems>\r\n        <s__.ListItems button>\r\n          <ListItemIcon>\r\n            <WatchLaterIcon style={{color:\"white\"}}/>\r\n          </ListItemIcon>\r\n          <s__.LinkChild to=\"/manager/shift\"><ListItemText primary=\"Shifts\" /></s__.LinkChild>\r\n        </s__.ListItems>\r\n        <s__.ListItems button>\r\n          <ListItemIcon>\r\n            <PermContactCalendarIcon style={{color:\"white\"}}/>\r\n          </ListItemIcon>\r\n          <s__.LinkChild to=\"/manager/patient\"><ListItemText primary=\"Patients\" /></s__.LinkChild>\r\n        </s__.ListItems>\r\n        <s__.ListItems button>\r\n          <ListItemIcon>\r\n            <PeopleIcon style={{color:\"white\"}}/>\r\n          </ListItemIcon>\r\n          <s__.LinkChild to=\"/manager/user\"><ListItemText primary=\"User\" /></s__.LinkChild>\r\n        </s__.ListItems>\r\n        <s__.ListItems button>\r\n          <ListItemIcon>\r\n            <AddBoxIcon style={{color:\"white\"}}/>\r\n          </ListItemIcon>\r\n          <s__.LinkChild to=\"/manager/post\"><ListItemText primary=\"Create Post\" /></s__.LinkChild>\r\n        </s__.ListItems>  \r\n        </List>\r\n      </s__.ListMenu>\r\n    )\r\n  }\r\n\r\n  showMSSV=(ms:string)=>{\r\n    console.log(ms);\r\n  }\r\n  renderImg = () => {\r\n    for(let i =1;i<10;i++){\r\n      this.imgArr.push(\"http://diemtp.ptithcm.edu.vn/images/studen/N19DCMR00\"+i+\".jpg\");\r\n    }\r\n  return <>{this.imgArr.map((value)=>{\r\n    console.log(value);\r\n    return <img src={value}  onClick={()=>this.showMSSV(value)}/>})}</>\r\n  }\r\n\r\n  renderBackground = () => {\r\n    return <s__.Particless params={{\r\n      \"particles\": {\r\n          \"number\": {\r\n              \"value\": 50\r\n          },\r\n          \"size\": {\r\n              \"value\": 1.3,\r\n              \"anim\": {\r\n                \"speed\": 1,\r\n                \"size_min\": 0.8\r\n            }\r\n          },\r\n          \"line_linked\": {\r\n            \"enable\": false,\r\n            \"blink\": true,\r\n            \"width\":1\r\n          },\r\n          \"color\":{\r\n            \"value\":\"#fff\"\r\n          }\r\n      },\r\n      \"interactivity\": {\r\n          \"events\": {\r\n              \"onhover\": {\r\n                  \"enable\": true,\r\n                  \"mode\": \"connect\" as HoverMode\r\n              }\r\n          },\r\n          \"modes\": {\r\n              \"connect\": {\r\n                  \"distance\": 50,\r\n                  \"radius\"\t:\t50,\r\n                  \"lineLinked\":{\r\n                    \"opacity\":0.2\r\n                  }\r\n              }\r\n          }\r\n      }\r\n    }}/>\r\n  }\r\n  render() {\r\n    return  (\r\n      <s__.Container>\r\n        {this.renderBackground()}\r\n        {this.renderPatientManager()}\r\n        {/* {this.renderImg()} */}\r\n      </s__.Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default MenuManager;\r\n","import styled from \"styled-components\";\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport {TextField, Button} from '@material-ui/core';\r\n\r\nexport const Container = styled.div`\r\n  height: auto;\r\n  width: auto;\r\n  background-color: white;\r\n  color:black;\r\n  padding: 20px 10px 10px 10px;\r\n  font-size: 15px;\r\n`;\r\n\r\nexport const TableRowInfo = styled(TableRow)`\r\n  height: 50px;\r\n  &:hover{\r\n    background-color: royalblue;\r\n  }\r\n`\r\nexport const TableRowHead = styled(TableRow)`\r\n  height: 50px;\r\n  width:100%;\r\n  /* top:0px; */\r\n  /* position: absolute; */\r\n  background-color:royalblue;\r\n`\r\nexport const PopupBackground = styled.div`\r\n  background-color:black;\r\n  position: fixed;\r\n  top:0%;\r\n  left:0%;\r\n  width:100%;\r\n  height:100%;\r\n  opacity: .8;\r\n`\r\nexport const PopupContainer = styled.div`\r\n  width:auto;\r\n  height:auto;\r\n  position: fixed;\r\n  top:50%;\r\n  left:50%;\r\n  transform:translate(-50%,-50%);\r\n  background-color:white;\r\n  border-radius:5px;\r\n  display: grid;\r\n  grid-column: repeat(2,1fr);\r\n`\r\n\r\nexport const PopupInfo = styled.div`\r\n  grid-column:1/2;\r\n  /* background-color:yellow; */\r\n  display:flex;\r\n  flex-direction:column;\r\n  align-items:center;\r\n  margin:10px;\r\n`\r\n\r\nexport const PopupInput = styled.div`\r\n  margin:10px;\r\n  grid-column:2/3;\r\n  display:flex;\r\n  flex-direction:column;\r\n  align-items:center;\r\n`\r\n\r\nexport const TextInput = styled(TextField)`\r\n  width:300px;\r\n`\r\n\r\nexport const TextFieldArea = styled.span`\r\n  margin: 5px 0px;\r\n`\r\n\r\nexport const ButtonSubmit = styled(Button)`\r\n  width:300px;\r\n  display:flex;\r\n\r\n`\r\n\r\nexport const FeatureArea = styled.div`\r\n  height: 50px;\r\n  display: flex;\r\n  justify-content:flex-end;\r\n`\r\n\r\nexport const SearchInput = styled.input`\r\n  width:300px;\r\n  height: 100%;\r\n  /* border-top-left-radius:5px; */\r\n  /* border-bottom-left-radius:5px; */\r\n  border:none;\r\n  padding: 0px 20px;\r\n  margin:0px;\r\n  font-size:inherit;\r\n`\r\n\r\nexport const FeatureButton = styled.button`\r\n  height: 100%;\r\n  width:10%;\r\n  /* background-color:gray; */\r\n  border: none;\r\n  text-align:center;\r\n  &:hover{\r\n    background-color: rgba(0,0,0,0.2);\r\n    color:white;\r\n  }\r\n`\r\n\r\nexport const PaperDiv = styled.div`\r\n  background-color: royalblue;\r\n  height: 50px ;\r\n  border-bottom-right-radius: 5px;\r\n  border-bottom-left-radius: 5px;\r\n  display:flex;\r\n  justify-content:flex-end;\r\n  align-items:center;\r\n`\r\n\r\nexport const PaperDivNumber = styled.button`\r\n  height: 100%;\r\n  width:5%;\r\n  background-color:rgba(0,0,0,0.2);\r\n  color:white;\r\n  border: none;\r\n  text-align:center;\r\n  &:hover{\r\n    background-color: rgba(255,255,255,0.2);\r\n    color:black;\r\n  }\r\n`","import axios from \"axios\";\r\n\r\nconst GETALL: string = \"/api/admin/all\";\r\nconst DELETE: string = \"/api/admin/\";\r\nconst UPDATE: string = \"/api/admin/\";\r\nconst ADDSHIFTTODOCTOR: string = \"/api/admin/add-doctor-to-shift/\";\r\nexport default class AdminAPI {\r\n\r\n  getAll = (token: string, response: any, error: any) => {\r\n    axios.get(GETALL, { headers: { Authorization: token } })\r\n      .then(response)\r\n      .catch(error);\r\n  };\r\n\r\n  deleteUser = (token: string, idUser: string, response: any, error: any) => {\r\n    axios({\r\n      method: 'DELETE',\r\n      url: DELETE + idUser,\r\n      headers: {\r\n        Authorization: token\r\n      }\r\n    }\r\n    )\r\n      .then(response)\r\n      .catch(error);\r\n  };\r\n\r\n  updateUser = (token: string, idUser: string, formData: FormData, response: any, error: any) => {\r\n    const data = {\r\n      \"email\": formData.get(\"email\")\r\n    }\r\n    axios.put(UPDATE + idUser, data, { headers: { Authorization: token } })\r\n      .then(response)\r\n      .catch(error);\r\n  };\r\n\r\n  addShiftToDoctor = (token: string, idDoctor: string, formData: FormData, response: any, error: any) => {\r\n    const data = {\r\n      \"idShift\": formData.get(\"idShift\")\r\n    }\r\n    axios.post(ADDSHIFTTODOCTOR + idDoctor, data, { headers: { Authorization: token } })\r\n      .then(response)\r\n      .catch(error);\r\n  };\r\n}\r\n","import axios from 'axios'\r\n\r\nexport default class RoomAPI {\r\n\r\n  getAll = (token: string,formData: FormData, response: any, error: any) => {\r\n    const data = {\r\n      \"page\": formData.get(\"page\"),\r\n      \"typesort\": formData.get(\"typesort\"),\r\n      \"search\": formData.get(\"search\")\r\n    }\r\n    axios.get('/api/room/',{ headers: { Authorization: token },data:data })\r\n    // $.get('/api/room/',{ headers: { Authorization: token },data:data })\r\n    // fetch(\r\n    //   '/api/room/',\r\n    //   {\r\n    //     method:'GET',\r\n    //     headers:{\r\n    //       Authorization: token\r\n    //     },\r\n    //     body:JSON.stringify(data)\r\n    //   }\r\n    // )\r\n    // axios({\r\n    //   method: 'GET',\r\n    //   url: '/api/room/',\r\n    //   data:data,\r\n    //   headers: {\r\n    //     Authorization: token\r\n    //   }\r\n    // })\r\n      .then(response)\r\n      .catch(error);\r\n  };\r\n\r\n  get = (token: string, idRoom: string, response: any, error: any) => {\r\n    axios.get('/api/room/' + idRoom, { headers: { Authorization: token } })\r\n      .then(response)\r\n      .catch(error);\r\n  };\r\n  upDate = (token: string, idRoom: string, formData: FormData, response: any, error: any) => {\r\n    const data = {\r\n      \"currentNumber\": formData.get(\"currentNumber\")\r\n    }\r\n    axios.put('/api/room/' + idRoom, data, { headers: { Authorization: token } })\r\n      .then(response)\r\n      .catch(error);\r\n  };\r\n\r\n  delete = (token: string, idRoom: string, response: any, error: any) => {\r\n    axios({\r\n      method: 'DELETE',\r\n      url: '/api/room/' + idRoom,\r\n      headers: {\r\n        Authorization: token\r\n      }\r\n    }\r\n    )\r\n      .then(response)\r\n      .catch(error);\r\n  };\r\n\r\n  create = (token: string, formData: FormData, response: any, error: any) => {\r\n    const data = {\r\n      \"maxNumber\": formData.get(\"maxNumber\"),\r\n      \"address\": formData.get(\"address\"),\r\n      \"name\": formData.get(\"name\")\r\n    }\r\n    axios.post('/api/room/', data, { headers: { Authorization: token } })\r\n      .then(response)\r\n      .catch(error);\r\n  };\r\n}","import axios from 'axios'\r\n\r\nconst GET: string = \"/api/shift/\";\r\nconst UPDATE: string = \"/api/shift/\"\r\nconst DELETE: string = \"/api/shift/\";\r\nconst GETALL: string = \"/api/shift\";\r\nconst CREATE: string = \"/api/shift\";\r\n\r\nexport default class ShiftAPI {\r\n\r\n  get = (token: string, idShift: string, response: any, error: any) => {\r\n    axios.get(GET + idShift, { headers: { Authorization: token } })\r\n      .then(response)\r\n      .catch(error);\r\n  };\r\n\r\n\r\n  upDate = (token: string, idShift: string, formData: FormData, response: any, error: any) => {\r\n    const data = {\r\n      \"startTime\": formData.get(\"startTime\")\r\n    }\r\n    axios.put(UPDATE + idShift, data, { headers: { Authorization: token } })\r\n      .then(response)\r\n      .catch(error);\r\n  };\r\n\r\n  delete = (token: string, idShift: string, response: any, error: any) => {\r\n    axios({\r\n      method: 'DELETE',\r\n      url: DELETE + idShift,\r\n      headers: {\r\n        Authorization: token\r\n      }\r\n    }\r\n    )\r\n      .then(response)\r\n      .catch(error);\r\n  };\r\n\r\n  getAll = (token: string, response: any, error: any) => {\r\n    axios.get(GETALL, { headers: { Authorization: token } })\r\n      .then(response)\r\n      .catch(error);\r\n  };\r\n\r\n  create = (token: string, formData: FormData, response: any, error: any) => {\r\n    const data = {\r\n      \"startTime\": formData.get(\"startTime\"),\r\n      \"endTime\": formData.get(\"endTime\")\r\n    }\r\n    axios.post(CREATE, data, { headers: { Authorization: token } })\r\n      .then(response)\r\n      .catch(error);\r\n  };\r\n}","import axios from \"axios\";\r\n\r\n\r\nconst USER_SIGNIN: string = \"/api/user/login\";\r\nconst UPLOAD_AVT: string = \"/api/user/upload-avatars\";\r\nconst GET_PROFILE: string = \"/api/user/\";\r\nconst USER_CHANGEPASSWORD:string = \"/api/user/change-password\";\r\nexport default class UserAPI {\r\n\r\n  uploadAvatar = (token: string, formData: any, response: any, error: any) => {\r\n    axios.post(UPLOAD_AVT, formData, { headers: { Authorization: token } })\r\n      .then(response)\r\n      .catch(error);\r\n  };\r\n\r\n  userLogin = (formData: any, response: any, error: any) => {\r\n    const data = {\r\n      \"identityCard\": formData.get(\"identityCard\"),\r\n      \"password\": formData.get(\"password\")\r\n    }\r\n    axios.post(USER_SIGNIN, data)\r\n      .then(response)\r\n      .catch(error);\r\n  };\r\n\r\n  getProfile = (token: string, response: any, error: any) => {\r\n    axios.get(GET_PROFILE, { headers: { Authorization: token } })\r\n      .then(response)\r\n      .catch(error);\r\n  };\r\n\r\n  changePassword = (token: string, formData: any, response: any, error: any) => {\r\n    const data = {\r\n      \"newPassword\": formData.get(\"newPassword\"),\r\n      \"againNewPassword\": formData.get(\"againNewPassword\")\r\n    }\r\n    axios.put(USER_CHANGEPASSWORD, data, { headers: { Authorization: token } })\r\n      .then(response)\r\n      .catch(error);\r\n  };\r\n\r\n}\r\n","import React, { Component, ChangeEvent } from \"react\";\r\n//style importer\r\nimport * as s__ from \"./style\";\r\nimport {Redirect} from 'react-router-dom'\r\n// import Link from '@material-ui/core/Link';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n// import Button from '@material-ui/core/Button';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport ClearAllIcon from '@material-ui/icons/ClearAll';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\n//component importer\r\n// import MainMenu from \"../MainMenu/index\";\r\n//utils importer\r\nimport AdminAPI from \"../../modules/api/admin\";\r\nimport DoctorAPI from \"../../modules/api/doctor\";\r\nimport RoomAPI from \"../../modules/api/room\";\r\nimport ShiftAPI from \"../../modules/api/shift\";\r\nimport UserAPI from \"../../modules/api/user\";\r\n//config importer\r\nimport {AdminRequest,DoctorRequest,RoomRequest,ShiftRequest,UserRequest} from \"../../config/requesttype\";\r\nimport * as api__ from \"../../config/apireturntype\";\r\nimport { Button } from \"@material-ui/core\";\r\n//global store\r\nimport { connect } from 'react-redux';\r\nimport {MainState} from '../../store/index';\r\n//type\r\nimport {UsersState} from '../../store/User/type';\r\n\r\n//typeInput\r\n\r\ninterface Props {\r\n  UsersState: UsersState\r\n}\r\n\r\ntype State =  typeof initState;\r\n\r\nconst initState = {\r\n  room: [] as api__.Room[],\r\n  patient: [] as api__.Patient[],\r\n  shift:[] as any[],\r\n  currentId: '',\r\n  currentRoom: {\r\n    currentNumber: 1,\r\n    idUser: [],\r\n    _id:'',\r\n    maxNumber: 1,\r\n    address: '',\r\n    name: '',\r\n    __v: 1\r\n  } as api__.Room,\r\n  demo:true,\r\n  deletemode:false,\r\n  updatemode:false,\r\n  showPopup:false,\r\n  numberPaper:0,\r\n  featureType:\"get\" as \"update\" | \"delete\" | \"insert\",\r\n  delAll: false,\r\n  listDell:[] as string[],\r\n  valueInputSearch: '' as string,\r\n  roomRequest:{\r\n    updateCurrentNumber:'',\r\n    insertMaxNumber:'',\r\n    insertAddress:'',\r\n    insertName:'',\r\n    getallpage:'0',\r\n    getalltypesort:'1',\r\n    getallsearch:'A200'\r\n  } as RoomRequest\r\n}\r\n\r\nclass InfoTableRoom extends Component<Props, State> {\r\n  token = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjVlYTJjYjEyNzhlN2M0MjExMDc4OWQ0ZiIsImlkUm9sZSI6eyJfaWQiOiI1ZWEyY2IxMDc4ZTdjNDIxMTA3ODlkNGUiLCJuYW1lIjoiU1VQRVJfQURNSU4iLCJfX3YiOjB9LCJpc0FjdGl2ZSI6ZmFsc2UsInJvbGVOYW1lIjoiU1VQRVJfQURNSU4iLCJpYXQiOjE1ODc4MDA5OTQsImV4cCI6MTU4Nzg0NDE5NH0.VrVQz_W0o-04TXdlGD9O2r4AW4ylNJajexWmItWrR0k\";\r\n  state = initState;\r\n  adminApi = new AdminAPI();\r\n  doctorApi = new DoctorAPI();\r\n  roomApi = new RoomAPI();\r\n  shiftApi = new ShiftAPI();\r\n  userApi = new UserAPI();\r\n\r\n  //circle\r\n  componentDidMount(){\r\n    console.log(this.state);\r\n    this.GETAll();\r\n    setInterval(()=>{\r\n      console.log(this.state);\r\n    },2000)\r\n  }\r\n\r\n  //API\r\n  InsertCurrent = (formData:FormData) => {\r\n    if(this.token){\r\n      this.roomApi.create(this.token,formData,(res:any)=>{\r\n        console.log(res.data);\r\n      }, \r\n      (err:string)=>{\r\n        console.log(err);\r\n        console.log(err);\r\n      })\r\n    }\r\n  }\r\n\r\n  SearchValueInputSearch = () => {\r\n    console.log('SearchValueInputSearch')\r\n  }\r\n\r\n  DeleteCurrent = (currentId:string) => {\r\n    if(this.token){\r\n      this.roomApi.delete(this.token,currentId,(res:any)=>{\r\n        console.log(res.data);\r\n      }, \r\n      (err:string)=>{\r\n        console.log(err);\r\n      })\r\n    }\r\n  }\r\n\r\n  UpdateCurrent = (idRoom:string,formData:FormData) => {\r\n    if(this.token){\r\n      this.roomApi.upDate(this.token,idRoom,formData,(res:any)=>{\r\n        console.log(res.data);\r\n      }, \r\n      (err:string)=>{\r\n        console.log(err);\r\n      })\r\n    }\r\n  }\r\n\r\n  GetUsers = (userId:string) => {\r\n    if(this.token){\r\n      this.roomApi.get(this.token,userId,(res:any)=>{\r\n        console.log(res.data);\r\n      },\r\n      (err:string)=>{\r\n        console.log(err);\r\n        console.log(err);\r\n      })\r\n    }\r\n  }\r\n\r\n  GETAll = () =>{\r\n    let formData = new FormData();\r\n    formData.append('page',this.state.roomRequest.getallpage);\r\n    formData.append('typesort',this.state.roomRequest.getalltypesort);\r\n    formData.append('search',this.state.roomRequest.getallsearch);\r\n    if(this.token){\r\n      this.roomApi.getAll(this.token,formData,(res:any)=>{\r\n        console.log(res.data);\r\n        this.setState({\r\n          room:res.data.room\r\n        })\r\n      }, \r\n      (err:string)=>{\r\n        console.log(err);\r\n        console.log(err);\r\n      })\r\n    }\r\n  }\r\n\r\n  ////\r\n  getIdRow=(room:api__.Room,featureType: \"update\" | \"delete\" | \"insert\")=>{\r\n    switch(featureType){\r\n      case \"update\":\r\n        this.setState({\r\n          currentRoom:room,\r\n          currentId:room._id,\r\n          showPopup:true,\r\n          featureType\r\n        })\r\n        break;\r\n    }\r\n  }\r\n\r\n  saveInsertPopup = () => {\r\n    //room\r\n    let formdata = new FormData();\r\n    formdata.append('maxNumber',this.state.roomRequest.insertMaxNumber);\r\n    formdata.append('address',this.state.roomRequest.insertAddress);\r\n    formdata.append('name',this.state.roomRequest.insertName);\r\n    this.InsertCurrent(formdata);\r\n    let obj = this.state.roomRequest;\r\n    obj.insertMaxNumber = \"\";\r\n    obj.insertAddress = \"\";\r\n    obj.insertName = \"\";\r\n    this.setState({\r\n      roomRequest:obj\r\n    })\r\n    this.cancelPopup();\r\n    this.GETAll();\r\n  }\r\n\r\n  renderInsertForm = () => {\r\n    return (\r\n      <React.Fragment>\r\n        <s__.TextFieldArea>\r\n            <s__.TextInput\r\n              variant=\"outlined\"\r\n              label=\"maxNumber\"\r\n              id=\"maxNumber\"\r\n              type=\"text\"\r\n              value={this.state.roomRequest.insertMaxNumber}\r\n              placeholder=\"\"\r\n              onChange={this.onchangMaxNumberRoom}\r\n            />\r\n          </s__.TextFieldArea>\r\n          <s__.TextFieldArea>\r\n            <s__.TextInput\r\n              variant=\"outlined\"\r\n              label=\"address\"\r\n              id=\"address\"\r\n              type=\"text\"\r\n              value={this.state.roomRequest.insertAddress}\r\n              onChange={this.onchangAddressRoom}\r\n            />\r\n          </s__.TextFieldArea>\r\n          <s__.TextFieldArea>\r\n            <s__.TextInput\r\n              variant=\"outlined\"\r\n              label=\"name\"\r\n              id=\"name\"\r\n              type=\"text\"\r\n              value={this.state.roomRequest.insertName}\r\n              onChange={this.onchangNameRoom}\r\n            />\r\n          </s__.TextFieldArea>\r\n          <s__.TextFieldArea>\r\n            <s__.ButtonSubmit\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              size=\"large\"\r\n              startIcon={<SaveIcon />}\r\n              onClick={this.saveInsertPopup}\r\n            >Save</s__.ButtonSubmit>\r\n          </s__.TextFieldArea>\r\n          <s__.TextFieldArea>\r\n            <s__.ButtonSubmit\r\n              variant=\"contained\"\r\n              color=\"default\"\r\n              size=\"large\"\r\n              startIcon={<CloseIcon />}\r\n              onClick={this.cancelPopup}\r\n            >Cancel</s__.ButtonSubmit>\r\n          </s__.TextFieldArea>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n\r\n  saveUpdatePopup = () => {\r\n    let formdata = new FormData();\r\n    formdata.append('currentNumber',this.state.roomRequest.updateCurrentNumber.toString());\r\n    this.UpdateCurrent(this.state.currentId,formdata);\r\n    let obj = this.state.roomRequest;\r\n    obj.updateCurrentNumber = \"\";\r\n    this.setState({\r\n      roomRequest:obj\r\n    })\r\n    this.cancelPopup();\r\n    this.GETAll();\r\n  }\r\n\r\n  renderUpdateForm = () => {\r\n    return (\r\n      <React.Fragment>\r\n          <s__.TextFieldArea>\r\n            <s__.TextInput\r\n              variant=\"outlined\"\r\n              label=\"currentNumber\"\r\n              id=\"currentNumber\"\r\n              type=\"text\"\r\n              value={this.state.roomRequest.updateCurrentNumber}\r\n              onChange={this.onchangCurrentNumberRoom}\r\n            />\r\n          </s__.TextFieldArea>\r\n          <s__.TextFieldArea>\r\n            <s__.ButtonSubmit\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              size=\"large\"\r\n              startIcon={<SaveIcon />}\r\n              onClick={this.saveUpdatePopup}\r\n            >Save</s__.ButtonSubmit>\r\n          </s__.TextFieldArea>\r\n          <s__.TextFieldArea>\r\n            <s__.ButtonSubmit\r\n              variant=\"contained\"\r\n              color=\"default\"\r\n              size=\"large\"\r\n              startIcon={<CloseIcon />}\r\n              onClick={this.cancelPopup}\r\n            >Cancel</s__.ButtonSubmit>\r\n          </s__.TextFieldArea>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n\r\n  renderPopupInput = (type:string) => {\r\n    switch(type){\r\n      case \"get\":\r\n        break;\r\n      case \"update\":\r\n        return (\r\n          <React.Fragment>\r\n            {this.renderUpdateForm()}\r\n          </React.Fragment>\r\n        )\r\n      case \"delete\":\r\n        break;\r\n      case \"insert\":\r\n        return (\r\n          <React.Fragment>\r\n            {this.renderInsertForm()}\r\n          </React.Fragment>\r\n        )\r\n    }\r\n    \r\n  }\r\n\r\n  renderPopupInfo = (type:string) => {\r\n    switch(type){\r\n      case \"get\":\r\n        break;\r\n      case \"update\":\r\n        return (\r\n          <React.Fragment>\r\n            <h1>Update Room {this.state.currentRoom.name}</h1>\r\n            <h4>Input and click on submit button to update number person on room, or click cancel to exist</h4>\r\n            <p>Current number is {this.state.currentRoom.currentNumber}</p>\r\n            <p>Max number is {this.state.currentRoom.maxNumber}</p>\r\n          </React.Fragment>\r\n        )\r\n      case \"delete\":\r\n        break;\r\n      case \"insert\":\r\n        return (\r\n          <React.Fragment>\r\n            <h1>Create Room</h1>\r\n            <h4>Input and click on submit button to create a new one, else click cancel to exist</h4>\r\n          </React.Fragment>\r\n        )\r\n    }\r\n  }\r\n\r\n  showPopup = (type:string) => {\r\n    \r\n    return (\r\n      <>\r\n        <s__.PopupBackground onClick={this.cancelPopup}>\r\n        </s__.PopupBackground>\r\n        <s__.PopupContainer>\r\n          <s__.PopupInfo>\r\n            {this.renderPopupInfo(type)}\r\n          </s__.PopupInfo>\r\n          <s__.PopupInput>\r\n            {this.renderPopupInput(type)}\r\n          </s__.PopupInput>\r\n        </s__.PopupContainer>\r\n      </>\r\n    )\r\n  }\r\n\r\n  cancelPopup=()=>{\r\n    this.setState({\r\n      showPopup:false\r\n    })\r\n  }\r\n\r\n  setShowPopupByType = (type:\"update\" | \"delete\" | \"insert\") => {\r\n    switch(type){\r\n      case \"update\":\r\n        this.setState({\r\n          updatemode:true,\r\n          featureType:type\r\n        })\r\n        break;\r\n      case \"delete\":\r\n        break;\r\n      case \"insert\":\r\n        this.setState({\r\n          featureType:type,\r\n          showPopup: true\r\n        })\r\n    }\r\n    \r\n  }\r\n\r\n  setDeleteMode = () => {\r\n    this.setState({\r\n      deletemode:!this.state.deletemode,\r\n      updatemode:false\r\n    })\r\n  }\r\n\r\n  setUpdateMode = () => {\r\n    this.setState({\r\n      updatemode:!this.state.updatemode,\r\n      deletemode:false\r\n    })\r\n  }\r\n\r\n  setShowPopup = () => {\r\n    this.setState({\r\n      showPopup:!this.state.showPopup\r\n    })\r\n  }\r\n\r\n  donotthing = () => {\r\n    console.log(\"success\");\r\n  }\r\n\r\n  setDelAll = () => {\r\n    this.setState({\r\n      delAll:!this.state.delAll,\r\n    })\r\n    console.log(this.state.delAll);\r\n  }\r\n\r\n  setInputSearch = (event: ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({\r\n      valueInputSearch: event.target.value\r\n    })\r\n  }\r\n\r\n  onchangCurrentNumberRoom = (event: ChangeEvent<HTMLInputElement>) => {\r\n    let obj = this.state.roomRequest;\r\n    obj.updateCurrentNumber = event.target.value;\r\n    this.setState({\r\n      roomRequest:obj\r\n    })\r\n  }\r\n\r\n  onchangMaxNumberRoom = (event: ChangeEvent<HTMLInputElement>) => {\r\n    let obj = this.state.roomRequest;\r\n    obj.insertMaxNumber = event.target.value;\r\n    this.setState({\r\n      roomRequest:obj\r\n    })\r\n  }\r\n\r\n  onchangAddressRoom = (event: ChangeEvent<HTMLInputElement>) => {\r\n    let obj = this.state.roomRequest;\r\n    obj.insertAddress = event.target.value;\r\n    this.setState({\r\n      roomRequest:obj\r\n    })\r\n  }\r\n\r\n  onchangNameRoom = (event: ChangeEvent<HTMLInputElement>) => {\r\n    let obj = this.state.roomRequest;\r\n    obj.insertName = event.target.value;\r\n    this.setState({\r\n      roomRequest:obj\r\n    })\r\n  }\r\n\r\n  //Render\r\n  renderButton= () =>{\r\n    return (\r\n      <div style={{\r\n        backgroundColor:\"darkblue\",\r\n        height:\"auto\",\r\n        borderTopRightRadius:\"5px\", \r\n        borderTopLeftRadius:\"5px\",\r\n        padding:\"20px 0px 0px 20px\",\r\n        color:\"white\"\r\n        }}\r\n      >\r\n        <h1 style={{marginTop:\"0px\"}}>Room</h1>\r\n        <s__.FeatureArea>\r\n          <s__.FeatureButton onClick={()=>this.setShowPopupByType(\"insert\")}><p>Insert</p></s__.FeatureButton>\r\n          <s__.FeatureButton style={{backgroundColor:this.state.updatemode?\"tomato\":\"\"}} onClick={this.setUpdateMode}><p>{this.state.updatemode?\"Cancel\":\"Update\"}</p></s__.FeatureButton>\r\n          <s__.SearchInput\r\n            id=\"maxNumber\"\r\n            type=\"text\"\r\n            value={this.state.valueInputSearch}\r\n            placeholder=\"Search Room By Name\"\r\n            onChange={this.setInputSearch}\r\n          />\r\n          <s__.FeatureButton onClick={this.SearchValueInputSearch}><p>Search</p></s__.FeatureButton>\r\n          <s__.FeatureButton style={{backgroundColor:this.state.deletemode?\"mediumspringgreen\":\"\",display:this.state.deletemode?\"\":\"none\"}} onClick={this.deleteAllCheckd}><p>Save</p></s__.FeatureButton>\r\n          <s__.FeatureButton style={{backgroundColor:this.state.deletemode?\"tomato\":\"\"}} onClick={this.setDeleteMode}><p>{this.state.deletemode?\"Cancel\":\"Delete\"}</p></s__.FeatureButton>\r\n        </s__.FeatureArea>\r\n        \r\n      </div>\r\n      \r\n    )\r\n  }\r\n\r\n  deleteAllCheckd= () =>{\r\n    console.log('deleteAllCheckd');\r\n    this.state.listDell.map(value => {\r\n      this.DeleteCurrent(value);\r\n    })\r\n    this.setState({\r\n      listDell:[],\r\n      deletemode:false\r\n    })\r\n    this.GETAll();\r\n  }\r\n\r\n  setIdCurrent = (currentId:string) => {\r\n    this.setState({\r\n      currentId\r\n    })\r\n  }\r\n\r\n  setListDel = () => {\r\n    let arr = this.state.listDell;\r\n    if(arr.indexOf(this.state.currentId)===-1){\r\n      arr.push(this.state.currentId)\r\n      this.setState({\r\n        listDell:arr\r\n      })\r\n    }else{\r\n      arr.splice(arr.indexOf(this.state.currentId),1)\r\n      this.setState({\r\n        listDell:arr\r\n      })\r\n    }\r\n  }\r\n\r\n  renderChildTableRoom = () => {\r\n    return this.state.room.map((row) => (\r\n      <s__.TableRowInfo key={row._id} onClick={this.state.updatemode?()=>this.getIdRow(row,\"update\"):()=>this.setIdCurrent(row._id)}\r\n      onFocus={()=>this.setIdCurrent(row._id)}>\r\n        <TableCell>{row.name}</TableCell>\r\n        <TableCell>{row.currentNumber}</TableCell>\r\n        <TableCell>{row.maxNumber}</TableCell>\r\n        <TableCell >{row.address}</TableCell>\r\n        <TableCell align=\"right\" style={{display:this.state.deletemode?\"\":\"none\"}} >\r\n          <Checkbox \r\n            size=\"small\"\r\n            onChange={this.setListDel}  \r\n          />\r\n        </TableCell>\r\n      </s__.TableRowInfo>\r\n    ))\r\n  }\r\n\r\n  renderGrid = () =>{\r\n    return (\r\n    <div style={{backgroundColor:\"lightcyan\",overflow:\"auto\",height:\"350px\"}}>\r\n      <div >\r\n        <Table size=\"small\">\r\n          <TableHead >\r\n            <s__.TableRowHead style={{height:\"50px\"}}>\r\n              <TableCell>Name</TableCell>\r\n              <TableCell>Ship To</TableCell>\r\n              <TableCell>Payment Method</TableCell>\r\n              <TableCell>Address</TableCell>\r\n              <TableCell align=\"right\" style={{display:this.state.deletemode?\"\":\"none\"}}>\r\n                <Checkbox \r\n                  size=\"small\"\r\n                  onChange={this.setDelAll}/>\r\n              </TableCell>\r\n            </s__.TableRowHead>\r\n          </TableHead>\r\n          <TableBody>\r\n            {this.renderChildTableRoom()}\r\n          </TableBody>\r\n        </Table>\r\n      </div>\r\n    </div>\r\n  )\r\n  }\r\n\r\n  renderPaper = () =>{\r\n    return (\r\n      // <s__.PaperDiv>\r\n      //   <s__.PaperDivNumber >\r\n      //     <p style={{margin:\"0px\"}} >1</p>\r\n      //     <p style={{margin:\"0px\"}} >2</p>\r\n      //     <p style={{margin:\"0px\"}} >3</p>\r\n      //   </s__.PaperDivNumber  >\r\n      // </s__.PaperDiv>\r\n        <s__.PaperDiv>\r\n          <s__.PaperDivNumber><p>1</p></s__.PaperDivNumber>\r\n          <s__.PaperDivNumber><p>2</p></s__.PaperDivNumber>\r\n          <s__.PaperDivNumber><p>3</p></s__.PaperDivNumber>\r\n          <s__.PaperDivNumber><p>4</p></s__.PaperDivNumber>\r\n        </s__.PaperDiv>\r\n    )\r\n  }\r\n\r\n  //Main render\r\n  render() {\r\n    return (\r\n      <s__.Container style={{paddingBottom:\"0px\"}}>\r\n        <div>\r\n          {this.state.showPopup?this.showPopup(this.state.featureType):<React.Fragment/>}\r\n          {this.renderButton()}\r\n          {this.renderGrid()}\r\n          {this.renderPaper()}\r\n        </div>\r\n      </s__.Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state:MainState) =>({\r\n  UsersState: state.UsersState\r\n});\r\nexport default connect(mapStateToProps,{})(InfoTableRoom);\r\n\r\n\r\n// demoClickRedirect = () => {\r\n//   this.setState({\r\n//     demo:false\r\n//   })\r\n// }\r\n\r\n// demoRedirect = ()=>{\r\n//   if(this.state.demo){\r\n//     return <React.Fragment/>\r\n//   }else{\r\n//     return <Redirect to=\"/about-us\"/>\r\n//   }\r\n// }","import styled from \"styled-components\";\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport {TextField, Button} from '@material-ui/core';\r\n\r\nexport const Container = styled.div`\r\n  height: auto;\r\n  width: auto;\r\n  background-color: white;\r\n  color:black;\r\n  padding: 20px 10px 10px 10px;\r\n  font-size: 15px;\r\n`;\r\n\r\nexport const TableRowInfo = styled(TableRow)`\r\n  height: 50px;\r\n  &:hover{\r\n    background-color: royalblue;\r\n  }\r\n`\r\nexport const TableRowHead = styled(TableRow)`\r\n  height: 50px;\r\n  width:100%;\r\n  /* top:0px; */\r\n  /* position: absolute; */\r\n  background-color:royalblue;\r\n`\r\nexport const PopupBackground = styled.div`\r\n  background-color:black;\r\n  position: fixed;\r\n  top:0%;\r\n  left:0%;\r\n  width:100%;\r\n  height:100%;\r\n  opacity: .8;\r\n`\r\nexport const PopupContainer = styled.div`\r\n  width:auto;\r\n  height:auto;\r\n  position: fixed;\r\n  top:50%;\r\n  left:50%;\r\n  transform:translate(-50%,-50%);\r\n  background-color:white;\r\n  border-radius:5px;\r\n  display: grid;\r\n  grid-column: repeat(2,1fr);\r\n`\r\n\r\nexport const PopupInfo = styled.div`\r\n  grid-column:1/2;\r\n  /* background-color:yellow; */\r\n  display:flex;\r\n  flex-direction:column;\r\n  align-items:center;\r\n  margin:10px;\r\n`\r\n\r\nexport const PopupInput = styled.div`\r\n  margin:10px;\r\n  grid-column:2/3;\r\n  display:flex;\r\n  flex-direction:column;\r\n  align-items:center;\r\n`\r\n\r\nexport const TextInput = styled(TextField)`\r\n  width:300px;\r\n`\r\n\r\nexport const TextFieldArea = styled.span`\r\n  margin: 5px 0px;\r\n`\r\n\r\nexport const ButtonSubmit = styled(Button)`\r\n  width:300px;\r\n  display:flex;\r\n\r\n`\r\n\r\nexport const FeatureArea = styled.div`\r\n  height: 50px;\r\n  display: flex;\r\n  justify-content:flex-end;\r\n`\r\n\r\nexport const SearchInput = styled.input`\r\n  width:300px;\r\n  height: 100%;\r\n  /* border-top-left-radius:5px; */\r\n  /* border-bottom-left-radius:5px; */\r\n  border:none;\r\n  padding: 0px 20px;\r\n  margin:0px;\r\n  font-size:inherit;\r\n`\r\n\r\nexport const FeatureButton = styled.button`\r\n  height: 100%;\r\n  width:10%;\r\n  /* background-color:gray; */\r\n  border: none;\r\n  text-align:center;\r\n  &:hover{\r\n    background-color: rgba(0,0,0,0.2);\r\n    color:white;\r\n  }\r\n`\r\n\r\nexport const PaperDiv = styled.div`\r\n  background-color: royalblue;\r\n  height: 50px ;\r\n  border-bottom-right-radius: 5px;\r\n  border-bottom-left-radius: 5px;\r\n  display:flex;\r\n  justify-content:flex-end;\r\n  align-items:center;\r\n`\r\n\r\nexport const PaperDivNumber = styled.button`\r\n  height: 100%;\r\n  width:5%;\r\n  background-color:rgba(0,0,0,0.2);\r\n  color:white;\r\n  border: none;\r\n  text-align:center;\r\n  &:hover{\r\n    background-color: rgba(255,255,255,0.2);\r\n    color:black;\r\n  }\r\n`","import React, { Component, ChangeEvent } from \"react\";\r\n//style importer\r\nimport * as s__ from \"./style\";\r\nimport {Redirect} from 'react-router-dom'\r\n// import Link from '@material-ui/core/Link';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n// import Button from '@material-ui/core/Button';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport ClearAllIcon from '@material-ui/icons/ClearAll';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\n//component importer\r\n// import MainMenu from \"../MainMenu/index\";\r\n//utils importer\r\nimport AdminAPI from \"../../modules/api/admin\";\r\nimport DoctorAPI from \"../../modules/api/doctor\";\r\nimport RoomAPI from \"../../modules/api/room\";\r\nimport ShiftAPI from \"../../modules/api/shift\";\r\nimport UserAPI from \"../../modules/api/user\";\r\n//config importer\r\nimport {AdminRequest,DoctorRequest,RoomRequest,ShiftRequest,UserRequest} from \"../../config/requesttype\";\r\nimport * as api__ from \"../../config/apireturntype\";\r\nimport { Button } from \"@material-ui/core\";\r\n//global store\r\nimport { connect } from 'react-redux';\r\nimport {MainState} from '../../store/index';\r\n//type\r\nimport {UsersState} from '../../store/User/type';\r\n\r\ninterface Props {\r\n  UsersState: UsersState\r\n}\r\n\r\ntype State =  typeof initState;\r\n\r\nconst initState = {\r\n  room: [] as api__.Room[],\r\n  patient: [] as api__.Patient[],\r\n  shift:[] as any[],\r\n  \r\n  demo:true,\r\n  deletemode:false,\r\n  updatemode:false,\r\n  showPopup:false,\r\n  numberPaper:0,\r\n  featureType:\"get\" as \"update\" | \"delete\" | \"insert\",\r\n  valueInputSearch: '' as string,\r\n  patientRequest:{\r\n    insertaddress:'' as string,\r\n    insertpassword:'' as string,\r\n    insertphonenumber:'' as string,\r\n    insertdayofbirth:'' as string,\r\n    insertidentitycard:'' as string,\r\n    insertfullname:'' as string,\r\n    insertemail:'' as string,\r\n    insertgender:'' as string,\r\n    getallpage:'' as string,\r\n    getalltypesort:'' as string,\r\n    getallsearch:'' as string,\r\n    addPatientToRoomidRoom:'' as string\r\n  } as DoctorRequest,\r\n  currentId: '',\r\n  currentPatient: {\r\n    avatars: [] as any[],\r\n    gender: -1 as number,\r\n    isActive: true as boolean,\r\n    gps:[] as number[],\r\n    _id:'' as string,\r\n    address:''as string,\r\n    password:'' as string,\r\n    phoneNumber:'' as string,\r\n    dateOfBirth:'' as string,\r\n    identityCard:'' as string,\r\n    fullName:'' as string,\r\n    email:'' as string,\r\n    idRole:{\r\n      __id:'' as string,\r\n      name:'' as string,\r\n      __v:-1 as number\r\n    },\r\n    __v:-1 as number\r\n  } as api__.Patient\r\n}\r\n\r\nclass InfoTablePatient extends Component<Props, State> {\r\n  token = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjVlYTJjYjEyNzhlN2M0MjExMDc4OWQ0ZiIsImlkUm9sZSI6eyJfaWQiOiI1ZWEyY2IxMDc4ZTdjNDIxMTA3ODlkNGUiLCJuYW1lIjoiU1VQRVJfQURNSU4iLCJfX3YiOjB9LCJpc0FjdGl2ZSI6ZmFsc2UsInJvbGVOYW1lIjoiU1VQRVJfQURNSU4iLCJpYXQiOjE1ODc4NjgwNDQsImV4cCI6MTU4NzkxMTI0NH0.Yc93r0R4HKGQK71_kTaBPSDrt-3B_epZ1MrCrw4CTuw\";\r\n  state = initState;\r\n  adminApi = new AdminAPI();\r\n  doctorApi = new DoctorAPI();\r\n  roomApi = new RoomAPI();\r\n  shiftApi = new ShiftAPI();\r\n  userApi = new UserAPI();\r\n\r\n  //circle\r\n  componentDidMount(){\r\n    console.log(this.state);\r\n    this.GETAll();\r\n    this.GETAllroom();\r\n    setInterval(()=>{\r\n      console.log(this.state);\r\n    },2000)\r\n  }\r\n\r\n  GETAllroom = () =>{\r\n    let formData = new FormData();\r\n    if(this.token){\r\n      this.roomApi.getAll(this.token,formData,(res:any)=>{\r\n        console.log('getallroom');\r\n        this.setState({\r\n          room:res.data.room\r\n        })\r\n      }, \r\n      (err:string)=>{\r\n        console.log(err);\r\n        console.log(err);\r\n      })\r\n    }\r\n  }\r\n  //API\r\n  AddPatienToRoom = (formData:FormData,idPatient:string) => {\r\n    if(this.token){\r\n      this.doctorApi.addPatientToRoom(this.token,idPatient,formData,(res:any)=>{\r\n        console.log(res.data);\r\n      }, \r\n      (err:string)=>{\r\n        console.log(err);\r\n        console.log(err);\r\n      })\r\n    }\r\n  }\r\n\r\n  RegisterPatient = (formData:FormData) => {\r\n    if(this.token){\r\n      this.doctorApi.registerPatient(this.token,formData,(res:any)=>{\r\n        console.log(res.data);\r\n      }, \r\n      (err:string)=>{\r\n        console.log(err);\r\n        console.log(err);\r\n      })\r\n    }\r\n  }\r\n\r\n  SearchValueInputSearch = () => {\r\n    console.log('SearchValueInputSearch')\r\n  }\r\n\r\n  GetUsers = (userId:string) => {\r\n    // if(this.token){\r\n    //   this.doctorApi.get(this.token,userId,(res:any)=>{\r\n    //     console.log(res.data);\r\n    //   },\r\n    //   (err:string)=>{\r\n    //     console.log(err);\r\n    //     console.log(err);\r\n    //   })\r\n    // }\r\n  }\r\n\r\n  GETAll = () =>{\r\n    let formData = new FormData();\r\n    formData.append('page',this.state.patientRequest.getallpage);\r\n    formData.append('typesort',this.state.patientRequest.getalltypesort);\r\n    formData.append('search',this.state.patientRequest.getallsearch);\r\n    if(this.token){\r\n      this.doctorApi.getListPatient(this.token,(res:any)=>{\r\n        console.log(res.data);\r\n        this.setState({\r\n          patient:res.data.users\r\n        })\r\n      }, \r\n      (err:string)=>{\r\n        console.log(err);\r\n        console.log(err);\r\n      })\r\n    }\r\n  }\r\n\r\n  ////\r\n  getIdRow=(room:api__.Patient,featureType: \"update\" | \"delete\" | \"insert\")=>{\r\n    switch(featureType){\r\n      case \"update\":\r\n        this.setState({\r\n          currentPatient:room,\r\n          currentId:room._id,\r\n          showPopup:true,\r\n          featureType\r\n        })\r\n        break;\r\n    }\r\n  }\r\n\r\n  saveInsertPopup = () => {\r\n    let formdata = new FormData();\r\n    formdata.append('address',this.state.patientRequest.insertaddress);\r\n    formdata.append('password',this.state.patientRequest.insertpassword);\r\n    formdata.append('phoneNumber',this.state.patientRequest.insertphonenumber);\r\n    formdata.append('dateOfBirth',this.state.patientRequest.insertdayofbirth);\r\n    formdata.append('identityCard',this.state.patientRequest.insertidentitycard);\r\n    formdata.append('fullName',this.state.patientRequest.insertfullname);\r\n    formdata.append('email',this.state.patientRequest.insertemail);\r\n    formdata.append('gender',this.state.patientRequest.insertgender);\r\n    this.RegisterPatient(formdata);\r\n    let obj = this.state.patientRequest;\r\n    obj.insertaddress = \"\";\r\n    obj.insertpassword = \"\";\r\n    obj.insertphonenumber = \"\";\r\n    obj.insertdayofbirth = \"\";\r\n    obj.insertidentitycard = \"\";\r\n    obj.insertfullname = \"\";\r\n    obj.insertemail = \"\";\r\n    obj.insertgender = \"\";\r\n    this.setState({\r\n      patientRequest:obj\r\n    })\r\n    this.cancelPopup();\r\n    this.GETAll();\r\n  }\r\n\r\n  renderInsertForm = () => {\r\n    return (\r\n      <React.Fragment>\r\n        <s__.TextFieldArea>\r\n            <s__.TextInput\r\n              variant=\"outlined\"\r\n              label=\"Address\"\r\n              id=\"Address\"\r\n              type=\"text\"\r\n              value={this.state.patientRequest.insertaddress}\r\n              placeholder=\"\"\r\n              onChange={this.onchangAddressPatient}\r\n            />\r\n          </s__.TextFieldArea>\r\n          <s__.TextFieldArea>\r\n            <s__.TextInput\r\n              variant=\"outlined\"\r\n              label=\"Password\"\r\n              id=\"Password\"\r\n              type=\"text\"\r\n              value={this.state.patientRequest.insertpassword}\r\n              placeholder=\"\"\r\n              onChange={this.onchangPasswordPatient}\r\n            />\r\n          </s__.TextFieldArea>\r\n          <s__.TextFieldArea>\r\n            <s__.TextInput\r\n              variant=\"outlined\"\r\n              label=\"PhoneNumber\"\r\n              id=\"PhoneNumber\"\r\n              type=\"text\"\r\n              value={this.state.patientRequest.insertphonenumber}\r\n              placeholder=\"\"\r\n              onChange={this.onchangPhoneNumberPatient}\r\n            />\r\n          </s__.TextFieldArea>\r\n          <s__.TextFieldArea>\r\n            <s__.TextInput\r\n              variant=\"outlined\"\r\n              label=\"Date of Birth\"\r\n              id=\"Date of Birth\"\r\n              type=\"text\"\r\n              value={this.state.patientRequest.insertdayofbirth}\r\n              placeholder=\"\"\r\n              onChange={this.onchangDateofBirthPatient}\r\n            />\r\n          </s__.TextFieldArea>\r\n          <s__.TextFieldArea>\r\n            <s__.TextInput\r\n              variant=\"outlined\"\r\n              label=\"Identity Card\"\r\n              id=\"Identity Card\"\r\n              type=\"text\"\r\n              value={this.state.patientRequest.insertidentitycard}\r\n              placeholder=\"\"\r\n              onChange={this.onchangIdentityCardPatient}\r\n            />\r\n          </s__.TextFieldArea>\r\n          <s__.TextFieldArea>\r\n            <s__.TextInput\r\n              variant=\"outlined\"\r\n              label=\"Full Name\"\r\n              id=\"Full Name\"\r\n              type=\"text\"\r\n              value={this.state.patientRequest.insertfullname}\r\n              placeholder=\"\"\r\n              onChange={this.onchangFullNamePatient}\r\n            />\r\n          </s__.TextFieldArea>\r\n          <s__.TextFieldArea>\r\n            <s__.TextInput\r\n              variant=\"outlined\"\r\n              label=\"Email\"\r\n              id=\"Email\"\r\n              type=\"text\"\r\n              value={this.state.patientRequest.insertemail}\r\n              placeholder=\"\"\r\n              onChange={this.onchangEmailPatient}\r\n            />\r\n          </s__.TextFieldArea>\r\n          <s__.TextFieldArea>\r\n            <s__.TextInput\r\n              variant=\"outlined\"\r\n              label=\"Gender\"\r\n              id=\"Gender\"\r\n              type=\"text\"\r\n              value={this.state.patientRequest.insertgender}\r\n              placeholder=\"\"\r\n              onChange={this.onchangGenderPatient}\r\n            />\r\n          </s__.TextFieldArea>\r\n          <s__.TextFieldArea>\r\n            <s__.ButtonSubmit\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              size=\"large\"\r\n              startIcon={<SaveIcon />}\r\n              onClick={this.saveInsertPopup}\r\n            >Save</s__.ButtonSubmit>\r\n          </s__.TextFieldArea>\r\n          <s__.TextFieldArea>\r\n            <s__.ButtonSubmit\r\n              variant=\"contained\"\r\n              color=\"default\"\r\n              size=\"large\"\r\n              startIcon={<CloseIcon />}\r\n              onClick={this.cancelPopup}\r\n            >Cancel</s__.ButtonSubmit>\r\n          </s__.TextFieldArea>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n\r\n  saveUpdatePopup = () => {\r\n    let formdata = new FormData();\r\n    formdata.append('idRoom',this.state.patientRequest.addPatientToRoomidRoom.toString());\r\n    this.AddPatienToRoom(formdata,this.state.currentId);\r\n    let obj = this.state.patientRequest;\r\n    obj.addPatientToRoomidRoom = \"\";\r\n    this.setState({\r\n      patientRequest:obj\r\n    })\r\n    this.cancelPopup();\r\n    this.GETAll();\r\n  }\r\n\r\n  renderUpdateForm = () => {\r\n    return (\r\n      <React.Fragment>\r\n          <Autocomplete\r\n            id=\"country-select-demo\"\r\n            style={{ width: 300 }}\r\n            options={this.state.room}\r\n            autoHighlight\r\n            getOptionLabel={(option:api__.Room) => option.name}\r\n            renderOption={(option:api__.Room) => (\r\n              <React.Fragment>\r\n                {option.name} ({option.currentNumber}) ({option.maxNumber})\r\n              </React.Fragment>\r\n            )}\r\n            renderInput={(params:any) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Choose a Room\"\r\n                variant=\"outlined\"\r\n                inputProps={{\r\n                  ...params.inputProps,\r\n                  autoComplete: 'new-password',\r\n                }}\r\n                // value={this.state.patientRequest.addPatientToRoomidRoom}\r\n                // onChange={this.onchangidRoomPatient}\r\n              />\r\n            )}\r\n            onChange={(event:any, value: any, reason: string) => {\r\n              console.log(\"need\",value);\r\n              this.onchangidRoomPatient(value._id);\r\n            }}\r\n          />\r\n          <s__.TextFieldArea>\r\n            <s__.ButtonSubmit\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              size=\"large\"\r\n              startIcon={<SaveIcon />}\r\n              onClick={this.saveUpdatePopup}\r\n            >Save</s__.ButtonSubmit>\r\n          </s__.TextFieldArea>\r\n          <s__.TextFieldArea>\r\n            <s__.ButtonSubmit\r\n              variant=\"contained\"\r\n              color=\"default\"\r\n              size=\"large\"\r\n              startIcon={<CloseIcon />}\r\n              onClick={this.cancelPopup}\r\n            >Cancel</s__.ButtonSubmit>\r\n          </s__.TextFieldArea>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n\r\n  renderPopupInput = (type:string) => {\r\n    switch(type){\r\n      case \"get\":\r\n        break;\r\n      case \"update\":\r\n        return (\r\n          <React.Fragment>\r\n            {this.renderUpdateForm()}\r\n          </React.Fragment>\r\n        )\r\n      case \"delete\":\r\n        break;\r\n      case \"insert\":\r\n        return (\r\n          <React.Fragment>\r\n            {this.renderInsertForm()}\r\n          </React.Fragment>\r\n        )\r\n    }\r\n    \r\n  }\r\n\r\n  renderPopupInfo = (type:string) => {\r\n    switch(type){\r\n      case \"get\":\r\n        break;\r\n      case \"update\":\r\n        return (\r\n          <React.Fragment>\r\n            <h1>Add Patient {this.state.currentPatient.fullName} to room</h1>\r\n            <h4>Input and click on submit button to update number person on room, or click cancel to exist</h4>\r\n            <p>Date of birth: {this.state.currentPatient.dateOfBirth}</p>\r\n            <p>Email: {this.state.currentPatient.email}</p>\r\n            <p>Indentity Card: {this.state.currentPatient.identityCard}</p>\r\n          </React.Fragment>\r\n        )\r\n      case \"delete\":\r\n        break;\r\n      case \"insert\":\r\n        return (\r\n          <React.Fragment>\r\n            <h1>Regiter Patient</h1>\r\n            <h4>Input and click on submit button to create a new one, else click cancel to exist</h4>\r\n          </React.Fragment>\r\n        )\r\n    }\r\n  }\r\n\r\n  showPopup = (type:string) => {\r\n    \r\n    return (\r\n      <>\r\n        <s__.PopupBackground onClick={this.cancelPopup}>\r\n        </s__.PopupBackground>\r\n        <s__.PopupContainer>\r\n          <s__.PopupInfo>\r\n            {this.renderPopupInfo(type)}\r\n          </s__.PopupInfo>\r\n          <s__.PopupInput>\r\n            {this.renderPopupInput(type)}\r\n          </s__.PopupInput>\r\n        </s__.PopupContainer>\r\n      </>\r\n    )\r\n  }\r\n\r\n  cancelPopup=()=>{\r\n    this.setState({\r\n      showPopup:false\r\n    })\r\n  }\r\n\r\n  setShowPopupByType = (type:\"update\" | \"delete\" | \"insert\") => {\r\n    switch(type){\r\n      case \"update\":\r\n        this.setState({\r\n          updatemode:true,\r\n          featureType:type\r\n        })\r\n        break;\r\n      case \"delete\":\r\n        break;\r\n      case \"insert\":\r\n        this.setState({\r\n          featureType:type,\r\n          showPopup: true\r\n        })\r\n    }\r\n    \r\n  }\r\n\r\n  setDeleteMode = () => {\r\n    this.setState({\r\n      deletemode:!this.state.deletemode\r\n    })\r\n  }\r\n\r\n  setUpdateMode = () => {\r\n    this.setState({\r\n      updatemode:!this.state.updatemode\r\n    })\r\n  }\r\n\r\n  setShowPopup = () => {\r\n    this.setState({\r\n      showPopup:!this.state.showPopup\r\n    })\r\n  }\r\n\r\n  donotthing = () => {\r\n    console.log(\"success\");\r\n  }\r\n\r\n  setInputSearch = (event: ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({\r\n      valueInputSearch: event.target.value\r\n    })\r\n  }\r\n\r\n  onchangAddressPatient = (event: ChangeEvent<HTMLInputElement>) => {\r\n    let obj = this.state.patientRequest;\r\n    obj.insertaddress = event.target.value;\r\n    this.setState({\r\n      patientRequest:obj\r\n    })\r\n  }\r\n\r\n  onchangPasswordPatient = (event: ChangeEvent<HTMLInputElement>) => {\r\n    let obj = this.state.patientRequest;\r\n    obj.insertpassword = event.target.value;\r\n    this.setState({\r\n      patientRequest:obj\r\n    })\r\n  }\r\n\r\n  onchangPhoneNumberPatient = (event: ChangeEvent<HTMLInputElement>) => {\r\n    let obj = this.state.patientRequest;\r\n    obj.insertphonenumber = event.target.value;\r\n    this.setState({\r\n      patientRequest:obj\r\n    })\r\n  }\r\n  onchangDateofBirthPatient = (event: ChangeEvent<HTMLInputElement>) => {\r\n    let obj = this.state.patientRequest;\r\n    obj.insertdayofbirth = event.target.value;\r\n    this.setState({\r\n      patientRequest:obj\r\n    })\r\n  }\r\n  onchangIdentityCardPatient = (event: ChangeEvent<HTMLInputElement>) => {\r\n    let obj = this.state.patientRequest;\r\n    obj.insertidentitycard = event.target.value;\r\n    this.setState({\r\n      patientRequest:obj\r\n    })\r\n  }\r\n  onchangFullNamePatient = (event: ChangeEvent<HTMLInputElement>) => {\r\n    let obj = this.state.patientRequest;\r\n    obj.insertfullname = event.target.value;\r\n    this.setState({\r\n      patientRequest:obj\r\n    })\r\n  }\r\n  onchangEmailPatient = (event: ChangeEvent<HTMLInputElement>) => {\r\n    let obj = this.state.patientRequest;\r\n    obj.insertemail = event.target.value;\r\n    this.setState({\r\n      patientRequest:obj\r\n    })\r\n  }\r\n  onchangGenderPatient = (event: ChangeEvent<HTMLInputElement>) => {\r\n    let obj = this.state.patientRequest;\r\n    obj.insertgender = event.target.value;\r\n    this.setState({\r\n      patientRequest:obj\r\n    })\r\n  }\r\n  onchangidRoomPatient = (idRoom: any) => {\r\n    let obj = this.state.patientRequest;\r\n    obj.addPatientToRoomidRoom = idRoom;\r\n    console.log(idRoom);\r\n    this.setState({\r\n      patientRequest:obj\r\n    })\r\n  }\r\n\r\n\r\n  //Render\r\n  renderButton= () =>{\r\n    return (\r\n      <div style={{\r\n        backgroundColor:\"darkblue\",\r\n        height:\"auto\",\r\n        borderTopRightRadius:\"5px\", \r\n        borderTopLeftRadius:\"5px\",\r\n        padding:\"20px 0px 0px 20px\",\r\n        color:\"white\"\r\n        }}\r\n      >\r\n        <h1 style={{marginTop:\"0px\"}}>Patient</h1>\r\n        <s__.FeatureArea>\r\n          <s__.FeatureButton onClick={()=>this.setShowPopupByType(\"insert\")}><p>Register Patient</p></s__.FeatureButton>\r\n          <s__.FeatureButton style={{backgroundColor:this.state.updatemode?\"tomato\":\"\"}} onClick={this.setUpdateMode}><p>{this.state.updatemode?\"Cancel\":\"Add Patient To Room\"}</p></s__.FeatureButton>\r\n          <s__.SearchInput\r\n            id=\"maxNumber\"\r\n            type=\"text\"\r\n            value={this.state.valueInputSearch}\r\n            placeholder=\"Search Room By Name\"\r\n            onChange={this.setInputSearch}\r\n          />\r\n          <s__.FeatureButton onClick={this.SearchValueInputSearch}><p>Search</p></s__.FeatureButton>\r\n        </s__.FeatureArea>\r\n        \r\n      </div>\r\n      \r\n    )\r\n  }\r\n\r\n  setIdCurrent = (currentId:string) => {\r\n    this.setState({\r\n      currentId\r\n    })\r\n  }\r\n\r\n  renderChildTableRoom = () => {\r\n    return this.state.patient.map((row) => (\r\n      <s__.TableRowInfo key={row._id} onClick={this.state.updatemode?()=>this.getIdRow(row,\"update\"):()=>this.setIdCurrent(row._id)}\r\n      onFocus={()=>this.setIdCurrent(row._id)}>\r\n        <TableCell>{row.fullName}</TableCell>\r\n        <TableCell>{row.gender}</TableCell>\r\n        <TableCell>{row.identityCard}</TableCell>\r\n        <TableCell >{row.phoneNumber}</TableCell>\r\n        <TableCell >{row.dateOfBirth}</TableCell>\r\n        <TableCell >{row.address}</TableCell>\r\n      </s__.TableRowInfo>\r\n    ))\r\n  }\r\n\r\n  renderGrid = () =>{\r\n    return (\r\n    <div style={{backgroundColor:\"lightcyan\",overflow:\"auto\",height:\"350px\"}}>\r\n      <div >\r\n        <Table size=\"small\">\r\n          <TableHead >\r\n            <s__.TableRowHead style={{height:\"50px\"}}>\r\n              <TableCell>FullName</TableCell>\r\n              <TableCell>Gender</TableCell>\r\n              <TableCell>IdentityCard</TableCell>\r\n              <TableCell>PhoneNumber</TableCell>\r\n              <TableCell>DateOfBirth</TableCell>\r\n              <TableCell>Address</TableCell>\r\n            </s__.TableRowHead>\r\n          </TableHead>\r\n          <TableBody>\r\n            {this.renderChildTableRoom()}\r\n          </TableBody>\r\n        </Table>\r\n      </div>\r\n    </div>\r\n  )\r\n  }\r\n\r\n  renderPaper = () =>{\r\n    return (\r\n      // <s__.PaperDiv>\r\n      //   <s__.PaperDivNumber >\r\n      //     <p style={{margin:\"0px\"}} >1</p>\r\n      //     <p style={{margin:\"0px\"}} >2</p>\r\n      //     <p style={{margin:\"0px\"}} >3</p>\r\n      //   </s__.PaperDivNumber  >\r\n      // </s__.PaperDiv>\r\n        <s__.PaperDiv>\r\n          <s__.PaperDivNumber><p>1</p></s__.PaperDivNumber>\r\n          <s__.PaperDivNumber><p>2</p></s__.PaperDivNumber>\r\n          <s__.PaperDivNumber><p>3</p></s__.PaperDivNumber>\r\n          <s__.PaperDivNumber><p>4</p></s__.PaperDivNumber>\r\n        </s__.PaperDiv>\r\n    )\r\n  }\r\n\r\n  //Main render\r\n  render() {\r\n    return (\r\n      <s__.Container style={{paddingBottom:\"0px\"}}>\r\n        <div>\r\n          {this.state.showPopup?this.showPopup(this.state.featureType):<React.Fragment/>}\r\n          {this.renderButton()}\r\n          {this.renderGrid()}\r\n          {this.renderPaper()}\r\n        </div>\r\n      </s__.Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state:MainState) =>({\r\n  UsersState: state.UsersState\r\n});\r\nexport default connect(mapStateToProps,{})(InfoTablePatient);\r\n\r\n\r\n// demoClickRedirect = () => {\r\n//   this.setState({\r\n//     demo:false\r\n//   })\r\n// }\r\n\r\n// demoRedirect = ()=>{\r\n//   if(this.state.demo){\r\n//     return <React.Fragment/>\r\n//   }else{\r\n//     return <Redirect to=\"/about-us\"/>\r\n//   }\r\n// }","import styled from \"styled-components\";\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport {TextField, Button} from '@material-ui/core';\r\n\r\nexport const Container = styled.div`\r\n  height: auto;\r\n  width: auto;\r\n  background-color: white;\r\n  color:black;\r\n  padding: 20px 10px 10px 10px;\r\n  font-size: 15px;\r\n`;\r\n\r\nexport const TableRowInfo = styled(TableRow)`\r\n  height: 50px;\r\n  &:hover{\r\n    background-color: royalblue;\r\n  }\r\n`\r\nexport const TableRowHead = styled(TableRow)`\r\n  height: 50px;\r\n  width:100%;\r\n  /* top:0px; */\r\n  /* position: absolute; */\r\n  background-color:royalblue;\r\n`\r\nexport const PopupBackground = styled.div`\r\n  background-color:black;\r\n  position: fixed;\r\n  top:0%;\r\n  left:0%;\r\n  width:100%;\r\n  height:100%;\r\n  opacity: .8;\r\n`\r\nexport const PopupContainer = styled.div`\r\n  width:auto;\r\n  height:auto;\r\n  position: fixed;\r\n  top:50%;\r\n  left:50%;\r\n  transform:translate(-50%,-50%);\r\n  background-color:white;\r\n  border-radius:5px;\r\n  display: grid;\r\n  grid-column: repeat(2,1fr);\r\n`\r\n\r\nexport const PopupInfo = styled.div`\r\n  grid-column:1/2;\r\n  /* background-color:yellow; */\r\n  display:flex;\r\n  flex-direction:column;\r\n  align-items:center;\r\n  margin:10px;\r\n`\r\n\r\nexport const PopupInput = styled.div`\r\n  margin:10px;\r\n  grid-column:2/3;\r\n  display:flex;\r\n  flex-direction:column;\r\n  align-items:center;\r\n`\r\n\r\nexport const TextInput = styled(TextField)`\r\n  width:300px;\r\n`\r\n\r\nexport const TextFieldArea = styled.span`\r\n  margin: 5px 0px;\r\n`\r\n\r\nexport const ButtonSubmit = styled(Button)`\r\n  width:300px;\r\n  display:flex;\r\n\r\n`\r\n\r\nexport const FeatureArea = styled.div`\r\n  height: 50px;\r\n  display: flex;\r\n  justify-content:flex-end;\r\n`\r\n\r\nexport const SearchInput = styled.input`\r\n  width:300px;\r\n  height: 100%;\r\n  /* border-top-left-radius:5px; */\r\n  /* border-bottom-left-radius:5px; */\r\n  border:none;\r\n  padding: 0px 20px;\r\n  margin:0px;\r\n  font-size:inherit;\r\n`\r\n\r\nexport const FeatureButton = styled.button`\r\n  height: 100%;\r\n  width:10%;\r\n  /* background-color:gray; */\r\n  border: none;\r\n  text-align:center;\r\n  &:hover{\r\n    background-color: rgba(0,0,0,0.2);\r\n    color:white;\r\n  }\r\n`\r\n\r\nexport const PaperDiv = styled.div`\r\n  background-color: royalblue;\r\n  height: 50px ;\r\n  border-bottom-right-radius: 5px;\r\n  border-bottom-left-radius: 5px;\r\n  display:flex;\r\n  justify-content:flex-end;\r\n  align-items:center;\r\n`\r\n\r\nexport const PaperDivNumber = styled.button`\r\n  height: 100%;\r\n  width:5%;\r\n  background-color:rgba(0,0,0,0.2);\r\n  color:white;\r\n  border: none;\r\n  text-align:center;\r\n  &:hover{\r\n    background-color: rgba(255,255,255,0.2);\r\n    color:black;\r\n  }\r\n`","import React, { Component, ChangeEvent } from \"react\";\r\n//style importer\r\nimport * as s__ from \"./style\";\r\nimport {Redirect} from 'react-router-dom'\r\n// import Link from '@material-ui/core/Link';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n// import Button from '@material-ui/core/Button';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport ClearAllIcon from '@material-ui/icons/ClearAll';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\n//component importer\r\n// import MainMenu from \"../MainMenu/index\";\r\n//utils importer\r\nimport AdminAPI from \"../../modules/api/admin\";\r\nimport DoctorAPI from \"../../modules/api/doctor\";\r\nimport RoomAPI from \"../../modules/api/room\";\r\nimport ShiftAPI from \"../../modules/api/shift\";\r\nimport UserAPI from \"../../modules/api/user\";\r\n//config importer\r\nimport {AdminRequest,DoctorRequest,RoomRequest,ShiftRequest,UserRequest} from \"../../config/requesttype\";\r\nimport * as api__ from \"../../config/apireturntype\";\r\nimport { Button } from \"@material-ui/core\";\r\n//global store\r\nimport { connect } from 'react-redux';\r\nimport {MainState} from '../../store/index';\r\n//type\r\nimport {UsersState} from '../../store/User/type';\r\n\r\n//typeInput\r\n\r\ninterface Props {\r\n  UsersState: UsersState\r\n}\r\n\r\ntype State =  typeof initState;\r\n\r\nconst initState = {\r\n  // room: [] as api__.Room[],\r\n  patient: [] as api__.Patient[],\r\n  shift:[] as api__.Shift[],\r\n\r\n  deletemode:false,\r\n  updatemode:false,\r\n  showPopup:false,\r\n  numberPaper:0,\r\n  featureType:\"get\" as \"update\" | \"delete\" | \"insert\",\r\n  delAll: false,\r\n  listDell:[] as string[],\r\n  valueInputSearch: '' as string,\r\n\r\n  shiftRequest:{\r\n    updatestartTime:'',\r\n    insertstartTime:'',\r\n    insertendTime:'',\r\n    getallpage:'0',\r\n    getalltypesort:'1',\r\n    getallsearch:'A200'\r\n  } as ShiftRequest,\r\n  currentId: '',\r\n  currentShift: {\r\n    idUser: [],\r\n    _id:'',\r\n    startTime: '',\r\n    endTime: '',\r\n    __v: 1\r\n  } as api__.Shift,\r\n}\r\n\r\nclass InfoTableShift extends Component<Props, State> {\r\n  token = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjVlYTJjYjEyNzhlN2M0MjExMDc4OWQ0ZiIsImlkUm9sZSI6eyJfaWQiOiI1ZWEyY2IxMDc4ZTdjNDIxMTA3ODlkNGUiLCJuYW1lIjoiU1VQRVJfQURNSU4iLCJfX3YiOjB9LCJpc0FjdGl2ZSI6ZmFsc2UsInJvbGVOYW1lIjoiU1VQRVJfQURNSU4iLCJpYXQiOjE1ODc4MDA5OTQsImV4cCI6MTU4Nzg0NDE5NH0.VrVQz_W0o-04TXdlGD9O2r4AW4ylNJajexWmItWrR0k\";\r\n  state = initState;\r\n  adminApi = new AdminAPI();\r\n  doctorApi = new DoctorAPI();\r\n  // roomApi = new RoomAPI();\r\n  shiftApi = new ShiftAPI();\r\n  userApi = new UserAPI();\r\n\r\n  //circle\r\n  componentDidMount(){\r\n    console.log(this.state);\r\n    this.GETAll();\r\n    setInterval(()=>{\r\n      console.log(this.state);\r\n    },2000)\r\n  }\r\n\r\n  //API\r\n  InsertCurrent = (formData:FormData) => {\r\n    if(this.token){\r\n      this.shiftApi.create(this.token,formData,(res:any)=>{\r\n        console.log(res.data);\r\n      }, \r\n      (err:string)=>{\r\n        console.log(err);\r\n        console.log(err);\r\n      })\r\n    }\r\n  }\r\n\r\n  SearchValueInputSearch = () => {\r\n    console.log('SearchValueInputSearch')\r\n  }\r\n\r\n  DeleteCurrent = (currentId:string) => {\r\n    if(this.token){\r\n      this.shiftApi.delete(this.token,currentId,(res:any)=>{\r\n        console.log(res.data);\r\n      }, \r\n      (err:string)=>{\r\n        console.log(err);\r\n      })\r\n    }\r\n  }\r\n\r\n  UpdateCurrent = (idRoom:string,formData:FormData) => {\r\n    if(this.token){\r\n      this.shiftApi.upDate(this.token,idRoom,formData,(res:any)=>{\r\n        console.log(\"success update\",res.data);\r\n      }, \r\n      (err:string)=>{\r\n        console.log(err);\r\n      })\r\n    }\r\n  }\r\n\r\n  GetUsers = (userId:string) => {\r\n    if(this.token){\r\n      this.shiftApi.get(this.token,userId,(res:any)=>{\r\n        console.log(res.data);\r\n      },\r\n      (err:string)=>{\r\n        console.log(err);\r\n        console.log(err);\r\n      })\r\n    }\r\n  }\r\n\r\n  GETAll = () =>{\r\n    let formData = new FormData();\r\n    formData.append('page',this.state.shiftRequest.getallpage);\r\n    formData.append('typesort',this.state.shiftRequest.getalltypesort);\r\n    formData.append('search',this.state.shiftRequest.getallsearch);\r\n    if(this.token){\r\n      this.shiftApi.getAll(this.token,(res:any)=>{\r\n        console.log(\"catruc\",res.data.caTruc);\r\n        this.setState({\r\n          shift:res.data.caTruc\r\n        })\r\n      }, \r\n      (err:string)=>{\r\n        console.log(err);\r\n        console.log(err);\r\n      })\r\n    }\r\n  }\r\n\r\n  ////\r\n  getIdRow=(shift:api__.Shift,featureType: \"update\" | \"delete\" | \"insert\")=>{\r\n    switch(featureType){\r\n      case \"update\":\r\n        this.setState({\r\n          currentShift:shift,\r\n          currentId:shift._id,\r\n          showPopup:true,\r\n          featureType\r\n        })\r\n        break;\r\n    }\r\n  }\r\n\r\n  saveInsertPopup = () => {\r\n    //room\r\n    let formdata = new FormData();\r\n    formdata.append('startTime',this.state.shiftRequest.insertstartTime);\r\n    formdata.append('endTime',this.state.shiftRequest.insertendTime);\r\n    this.InsertCurrent(formdata);\r\n    let obj = this.state.shiftRequest;\r\n    obj.insertstartTime = \"\";\r\n    obj.insertendTime = \"\";\r\n    this.setState({\r\n      shiftRequest:obj\r\n    })\r\n    this.GETAll();\r\n    this.cancelPopup();\r\n  }\r\n\r\n  renderInsertForm = () => {\r\n    return (\r\n      <React.Fragment>\r\n        <s__.TextFieldArea>\r\n            <s__.TextInput\r\n              variant=\"outlined\"\r\n              label=\"startTime\"\r\n              id=\"startTime\"\r\n              type=\"text\"\r\n              value={this.state.shiftRequest.insertstartTime}\r\n              placeholder=\"\"\r\n              onChange={this.onchangeInsertStartTime}\r\n            />\r\n          </s__.TextFieldArea>\r\n          <s__.TextFieldArea>\r\n            <s__.TextInput\r\n              variant=\"outlined\"\r\n              label=\"endTime\"\r\n              id=\"endTime\"\r\n              type=\"text\"\r\n              value={this.state.shiftRequest.insertendTime}\r\n              onChange={this.onchangeInsertEndTime}\r\n            />\r\n          </s__.TextFieldArea>\r\n          <s__.TextFieldArea>\r\n            <s__.ButtonSubmit\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              size=\"large\"\r\n              startIcon={<SaveIcon />}\r\n              onClick={this.saveInsertPopup}\r\n            >Save</s__.ButtonSubmit>\r\n          </s__.TextFieldArea>\r\n          <s__.TextFieldArea>\r\n            <s__.ButtonSubmit\r\n              variant=\"contained\"\r\n              color=\"default\"\r\n              size=\"large\"\r\n              startIcon={<CloseIcon />}\r\n              onClick={this.cancelPopup}\r\n            >Cancel</s__.ButtonSubmit>\r\n          </s__.TextFieldArea>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n\r\n  saveUpdatePopup = () => {\r\n    let formdata = new FormData();\r\n    formdata.append('startTime',this.state.shiftRequest.updatestartTime.toString());\r\n    this.UpdateCurrent(this.state.currentId,formdata);\r\n    let obj = this.state.shiftRequest;\r\n    obj.updatestartTime = \"\";\r\n    this.setState({\r\n      shiftRequest:obj\r\n    })\r\n    this.cancelPopup();\r\n    this.GETAll();\r\n  }\r\n\r\n  renderUpdateForm = () => {\r\n    return (\r\n      <React.Fragment>\r\n          <s__.TextFieldArea>\r\n            <s__.TextInput\r\n              variant=\"outlined\"\r\n              label=\"currentNumber\"\r\n              id=\"currentNumber\"\r\n              type=\"text\"\r\n              value={this.state.shiftRequest.updatestartTime}\r\n              onChange={this.onchangUpdateStartTime}\r\n            />\r\n          </s__.TextFieldArea>\r\n          <s__.TextFieldArea>\r\n            <s__.ButtonSubmit\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              size=\"large\"\r\n              startIcon={<SaveIcon />}\r\n              onClick={this.saveUpdatePopup}\r\n            >Save</s__.ButtonSubmit>\r\n          </s__.TextFieldArea>\r\n          <s__.TextFieldArea>\r\n            <s__.ButtonSubmit\r\n              variant=\"contained\"\r\n              color=\"default\"\r\n              size=\"large\"\r\n              startIcon={<CloseIcon />}\r\n              onClick={this.cancelPopup}\r\n            >Cancel</s__.ButtonSubmit>\r\n          </s__.TextFieldArea>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n\r\n  renderPopupInput = (type:string) => {\r\n    switch(type){\r\n      case \"get\":\r\n        break;\r\n      case \"update\":\r\n        return (\r\n          <React.Fragment>\r\n            {this.renderUpdateForm()}\r\n          </React.Fragment>\r\n        )\r\n      case \"delete\":\r\n        break;\r\n      case \"insert\":\r\n        return (\r\n          <React.Fragment>\r\n            {this.renderInsertForm()}\r\n          </React.Fragment>\r\n        )\r\n    }\r\n    \r\n  }\r\n\r\n  renderPopupInfo = (type:string) => {\r\n    switch(type){\r\n      case \"get\":\r\n        break;\r\n      case \"update\":\r\n        return (\r\n          <React.Fragment>\r\n            <h1>This Shift now have {this.state.currentShift.idUser.length} person</h1>\r\n            <h4>Input and click on submit button to update number person on room, or click cancel to exist</h4>\r\n            <p>Start time: {this.state.currentShift.startTime}</p>\r\n            <p>End time: {this.state.currentShift.endTime}</p>\r\n          </React.Fragment>\r\n        )\r\n      case \"delete\":\r\n        break;\r\n      case \"insert\":\r\n        return (\r\n          <React.Fragment>\r\n            <h1>Create Shift</h1>\r\n            <h4>Input Shift time and click on submit button to create a new one, else click cancel to exist</h4>\r\n          </React.Fragment>\r\n        )\r\n    }\r\n  }\r\n\r\n  showPopup = (type:string) => {\r\n    \r\n    return (\r\n      <>\r\n        <s__.PopupBackground onClick={this.cancelPopup}>\r\n        </s__.PopupBackground>\r\n        <s__.PopupContainer>\r\n          <s__.PopupInfo>\r\n            {this.renderPopupInfo(type)}\r\n          </s__.PopupInfo>\r\n          <s__.PopupInput>\r\n            {this.renderPopupInput(type)}\r\n          </s__.PopupInput>\r\n        </s__.PopupContainer>\r\n      </>\r\n    )\r\n  }\r\n\r\n  cancelPopup=()=>{\r\n    this.setState({\r\n      showPopup:false\r\n    })\r\n  }\r\n\r\n  setShowPopupByType = (type:\"update\" | \"delete\" | \"insert\") => {\r\n    switch(type){\r\n      case \"update\":\r\n        this.setState({\r\n          updatemode:true,\r\n          featureType:type\r\n        })\r\n        break;\r\n      case \"delete\":\r\n        break;\r\n      case \"insert\":\r\n        this.setState({\r\n          featureType:type,\r\n          showPopup: true\r\n        })\r\n    }\r\n    \r\n  }\r\n\r\n  setDeleteMode = () => {\r\n    this.setState({\r\n      deletemode:!this.state.deletemode,\r\n      updatemode:false\r\n    })\r\n  }\r\n\r\n  setUpdateMode = () => {\r\n    this.setState({\r\n      updatemode:!this.state.updatemode,\r\n      deletemode:false\r\n    })\r\n  }\r\n\r\n  setShowPopup = () => {\r\n    this.setState({\r\n      showPopup:!this.state.showPopup\r\n    })\r\n  }\r\n\r\n  donotthing = () => {\r\n    console.log(\"success\");\r\n  }\r\n\r\n  setDelAll = () => {\r\n    this.setState({\r\n      delAll:!this.state.delAll,\r\n    })\r\n    console.log(this.state.delAll);\r\n  }\r\n\r\n  setInputSearch = (event: ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({\r\n      valueInputSearch: event.target.value\r\n    })\r\n  }\r\n\r\n  onchangUpdateStartTime = (event: ChangeEvent<HTMLInputElement>) => {\r\n    let obj = this.state.shiftRequest;\r\n    obj.updatestartTime = event.target.value;\r\n    this.setState({\r\n      shiftRequest:obj\r\n    })\r\n  }\r\n\r\n  onchangeInsertStartTime = (event: ChangeEvent<HTMLInputElement>) => {\r\n    let obj = this.state.shiftRequest;\r\n    obj.insertstartTime = event.target.value;\r\n    this.setState({\r\n      shiftRequest:obj\r\n    })\r\n  }\r\n\r\n  onchangeInsertEndTime = (event: ChangeEvent<HTMLInputElement>) => {\r\n    let obj = this.state.shiftRequest;\r\n    obj.insertendTime = event.target.value;\r\n    this.setState({\r\n      shiftRequest:obj\r\n    })\r\n  }\r\n\r\n  //Render\r\n  renderButton= () =>{\r\n    return (\r\n      <div style={{\r\n        backgroundColor:\"darkblue\",\r\n        height:\"auto\",\r\n        borderTopRightRadius:\"5px\", \r\n        borderTopLeftRadius:\"5px\",\r\n        padding:\"20px 0px 0px 20px\",\r\n        color:\"white\"\r\n        }}\r\n      >\r\n        <h1 style={{marginTop:\"0px\"}}>Shift</h1>\r\n        <s__.FeatureArea>\r\n          <s__.FeatureButton onClick={()=>this.setShowPopupByType(\"insert\")}><p>Insert</p></s__.FeatureButton>\r\n          <s__.FeatureButton style={{backgroundColor:this.state.updatemode?\"tomato\":\"\"}} onClick={this.setUpdateMode}><p>{this.state.updatemode?\"Cancel\":\"Update\"}</p></s__.FeatureButton>\r\n          <s__.SearchInput\r\n            id=\"maxNumber\"\r\n            type=\"text\"\r\n            value={this.state.valueInputSearch}\r\n            placeholder=\"Search Room By Name\"\r\n            onChange={this.setInputSearch}\r\n          />\r\n          <s__.FeatureButton onClick={this.SearchValueInputSearch}><p>Search</p></s__.FeatureButton>\r\n          <s__.FeatureButton style={{backgroundColor:this.state.deletemode?\"mediumspringgreen\":\"\",display:this.state.deletemode?\"\":\"none\"}} onClick={this.deleteAllCheckd}><p>Save</p></s__.FeatureButton>\r\n          <s__.FeatureButton style={{backgroundColor:this.state.deletemode?\"tomato\":\"\"}} onClick={this.setDeleteMode}><p>{this.state.deletemode?\"Cancel\":\"Delete\"}</p></s__.FeatureButton>\r\n        </s__.FeatureArea>\r\n        \r\n      </div>\r\n      \r\n    )\r\n  }\r\n\r\n  deleteAllCheckd= () =>{\r\n    console.log('deleteAllCheckd');\r\n    this.state.listDell.map(value => {\r\n      this.DeleteCurrent(value);\r\n    })\r\n    this.setState({\r\n      listDell:[],\r\n      deletemode:false\r\n    })\r\n    this.GETAll();\r\n  }\r\n\r\n  setIdCurrent = (currentId:string) => {\r\n    this.setState({\r\n      currentId\r\n    })\r\n  }\r\n\r\n  setListDel = () => {\r\n    let arr = this.state.listDell;\r\n    if(arr.indexOf(this.state.currentId)===-1){\r\n      arr.push(this.state.currentId)\r\n      this.setState({\r\n        listDell:arr\r\n      })\r\n    }else{\r\n      arr.splice(arr.indexOf(this.state.currentId),1)\r\n      this.setState({\r\n        listDell:arr\r\n      })\r\n    }\r\n  }\r\n\r\n  renderChildTableRoom = () => {\r\n    return this.state.shift.map((row) => (\r\n      <s__.TableRowInfo key={row._id} onClick={this.state.updatemode?()=>this.getIdRow(row,\"update\"):()=>this.setIdCurrent(row._id)}\r\n      onFocus={()=>this.setIdCurrent(row._id)}>\r\n        <TableCell>{row.idUser.length}</TableCell>\r\n        <TableCell>{row.startTime}</TableCell>\r\n        <TableCell>{row.endTime}</TableCell>\r\n        <TableCell align=\"right\" style={{display:this.state.deletemode?\"\":\"none\"}} >\r\n          <Checkbox \r\n            size=\"small\"\r\n            onChange={this.setListDel}  \r\n          />\r\n        </TableCell>\r\n      </s__.TableRowInfo>\r\n    ))\r\n  }\r\n\r\n  renderGrid = () =>{\r\n    return (\r\n    <div style={{backgroundColor:\"lightcyan\",overflow:\"auto\",height:\"350px\"}}>\r\n      <div >\r\n        <Table size=\"small\">\r\n          <TableHead >\r\n            <s__.TableRowHead style={{height:\"50px\"}}>\r\n              <TableCell>Number person</TableCell>\r\n              <TableCell>Start time</TableCell>\r\n              <TableCell>End time</TableCell>\r\n              <TableCell align=\"right\" style={{display:this.state.deletemode?\"\":\"none\"}}>\r\n                <Checkbox \r\n                  size=\"small\"\r\n                  onChange={this.setDelAll}/>\r\n              </TableCell>\r\n            </s__.TableRowHead>\r\n          </TableHead>\r\n          <TableBody>\r\n            {this.renderChildTableRoom()}\r\n          </TableBody>\r\n        </Table>\r\n      </div>\r\n    </div>\r\n  )\r\n  }\r\n\r\n  renderPaper = () =>{\r\n    return (\r\n      // <s__.PaperDiv>\r\n      //   <s__.PaperDivNumber >\r\n      //     <p style={{margin:\"0px\"}} >1</p>\r\n      //     <p style={{margin:\"0px\"}} >2</p>\r\n      //     <p style={{margin:\"0px\"}} >3</p>\r\n      //   </s__.PaperDivNumber  >\r\n      // </s__.PaperDiv>\r\n        <s__.PaperDiv>\r\n          <s__.PaperDivNumber><p>1</p></s__.PaperDivNumber>\r\n          <s__.PaperDivNumber><p>2</p></s__.PaperDivNumber>\r\n          <s__.PaperDivNumber><p>3</p></s__.PaperDivNumber>\r\n          <s__.PaperDivNumber><p>4</p></s__.PaperDivNumber>\r\n        </s__.PaperDiv>\r\n    )\r\n  }\r\n\r\n  //Main render\r\n  render() {\r\n    return (\r\n      <s__.Container style={{paddingBottom:\"0px\"}}>\r\n        <div>\r\n          {this.state.showPopup?this.showPopup(this.state.featureType):<React.Fragment/>}\r\n          {this.renderButton()}\r\n          {this.renderGrid()}\r\n          {this.renderPaper()}\r\n        </div>\r\n      </s__.Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state:MainState) =>({\r\n  UsersState: state.UsersState\r\n});\r\nexport default connect(mapStateToProps,{})(InfoTableShift);\r\n\r\n\r\n// demoClickRedirect = () => {\r\n//   this.setState({\r\n//     demo:false\r\n//   })\r\n// }\r\n\r\n// demoRedirect = ()=>{\r\n//   if(this.state.demo){\r\n//     return <React.Fragment/>\r\n//   }else{\r\n//     return <Redirect to=\"/about-us\"/>\r\n//   }\r\n// }","import styled from \"styled-components\";\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport {TextField, Button} from '@material-ui/core';\r\n\r\nexport const Container = styled.div`\r\n  height: auto;\r\n  width: auto;\r\n  background-color: white;\r\n  color:black;\r\n  padding: 20px 10px 10px 10px;\r\n  font-size: 15px;\r\n`;\r\n\r\nexport const TableRowInfo = styled(TableRow)`\r\n  height: 50px;\r\n  &:hover{\r\n    background-color: royalblue;\r\n  }\r\n`\r\nexport const TableRowHead = styled(TableRow)`\r\n  height: 50px;\r\n  width:100%;\r\n  /* top:0px; */\r\n  /* position: absolute; */\r\n  background-color:royalblue;\r\n`\r\nexport const PopupBackground = styled.div`\r\n  background-color:black;\r\n  position: fixed;\r\n  top:0%;\r\n  left:0%;\r\n  width:100%;\r\n  height:100%;\r\n  opacity: .8;\r\n`\r\nexport const PopupContainer = styled.div`\r\n  width:auto;\r\n  height:auto;\r\n  position: fixed;\r\n  top:50%;\r\n  left:50%;\r\n  transform:translate(-50%,-50%);\r\n  background-color:white;\r\n  border-radius:5px;\r\n  display: grid;\r\n  grid-column: repeat(2,1fr);\r\n`\r\n\r\nexport const PopupInfo = styled.div`\r\n  grid-column:1/2;\r\n  /* background-color:yellow; */\r\n  display:flex;\r\n  flex-direction:column;\r\n  align-items:center;\r\n  margin:10px;\r\n`\r\n\r\nexport const PopupInput = styled.div`\r\n  margin:10px;\r\n  grid-column:2/3;\r\n  display:flex;\r\n  flex-direction:column;\r\n  align-items:center;\r\n`\r\n\r\nexport const TextInput = styled(TextField)`\r\n  width:300px;\r\n`\r\n\r\nexport const TextFieldArea = styled.span`\r\n  margin: 5px 0px;\r\n`\r\n\r\nexport const ButtonSubmit = styled(Button)`\r\n  width:300px;\r\n  display:flex;\r\n\r\n`\r\n\r\nexport const FeatureArea = styled.div`\r\n  height: 50px;\r\n  display: flex;\r\n  justify-content:flex-end;\r\n`\r\n\r\nexport const SearchInput = styled.input`\r\n  width:300px;\r\n  height: 100%;\r\n  /* border-top-left-radius:5px; */\r\n  /* border-bottom-left-radius:5px; */\r\n  border:none;\r\n  padding: 0px 20px;\r\n  margin:0px;\r\n  font-size:inherit;\r\n`\r\n\r\nexport const FeatureButton = styled.button`\r\n  height: 100%;\r\n  width:10%;\r\n  /* background-color:gray; */\r\n  border: none;\r\n  text-align:center;\r\n  &:hover{\r\n    background-color: rgba(0,0,0,0.2);\r\n    color:white;\r\n  }\r\n`\r\n\r\nexport const PaperDiv = styled.div`\r\n  background-color: royalblue;\r\n  height: 50px ;\r\n  border-bottom-right-radius: 5px;\r\n  border-bottom-left-radius: 5px;\r\n  display:flex;\r\n  justify-content:flex-end;\r\n  align-items:center;\r\n`\r\n\r\nexport const PaperDivNumber = styled.button`\r\n  height: 100%;\r\n  width:5%;\r\n  background-color:rgba(0,0,0,0.2);\r\n  color:white;\r\n  border: none;\r\n  text-align:center;\r\n  &:hover{\r\n    background-color: rgba(255,255,255,0.2);\r\n    color:black;\r\n  }\r\n`","import React, { Component, ChangeEvent } from \"react\";\r\n//style importer\r\nimport * as s__ from \"./style\";\r\nimport {Redirect} from 'react-router-dom'\r\n// import Link from '@material-ui/core/Link';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n// import Button from '@material-ui/core/Button';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport ClearAllIcon from '@material-ui/icons/ClearAll';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n//component importer\r\n// import MainMenu from \"../MainMenu/index\";\r\n//utils importer\r\nimport AdminAPI from \"../../modules/api/admin\";\r\nimport DoctorAPI from \"../../modules/api/doctor\";\r\nimport RoomAPI from \"../../modules/api/room\";\r\nimport ShiftAPI from \"../../modules/api/shift\";\r\nimport UserAPI from \"../../modules/api/user\";\r\n//config importer\r\nimport {AdminRequest,DoctorRequest,RoomRequest,ShiftRequest,UserRequest} from \"../../config/requesttype\";\r\nimport * as api__ from \"../../config/apireturntype\";\r\nimport { Button } from \"@material-ui/core\";\r\n//global store\r\nimport { connect } from 'react-redux';\r\nimport {MainState} from '../../store/index';\r\n//type\r\nimport {UsersState} from '../../store/User/type';\r\n\r\n//typeInput\r\n\r\ninterface Props {\r\n  UsersState: UsersState\r\n}\r\n\r\ntype State =  typeof initState;\r\n\r\nconst initState = {\r\n  shift: [] as api__.Shift[],\r\n  patient: [] as api__.Patient[],\r\n  users:[] as api__.Users[],\r\n\r\n  deletemode:false,\r\n  updatemode:false,\r\n  insertmode:false,\r\n  showPopup:false,\r\n  numberPaper:0,\r\n  featureType:\"get\" as \"update\" | \"delete\" | \"insert\",\r\n  delAll: false,\r\n  listDell:[] as string[],\r\n  valueInputSearch: '' as string,\r\n  usersRequest:{\r\n    updateemail:'' as string,\r\n    addshiftidShift:'' as string\r\n  } as AdminRequest,\r\n  currentId: '',\r\n  currentUsers: {\r\n    avatars: [] as any[],\r\n    gender: -1 as number,\r\n    isActive: true as boolean,\r\n    gps:[] as number[],\r\n    _id:'' as string,\r\n    address:''as string,\r\n    password:'' as string,\r\n    phoneNumber:'' as string,\r\n    dateOfBirth:'' as string,\r\n    identityCard:'' as string,\r\n    fullName:'' as string,\r\n    email:'' as string,\r\n    idRole:{\r\n      __id:'' as string,\r\n      name:'' as string,\r\n      __v:-1 as number\r\n    },\r\n    __v:-1 as number\r\n  } as api__.Users\r\n}\r\n\r\nclass InfoTableUser extends Component<Props, State> {\r\n  token = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjVlYTJjYjEyNzhlN2M0MjExMDc4OWQ0ZiIsImlkUm9sZSI6eyJfaWQiOiI1ZWEyY2IxMDc4ZTdjNDIxMTA3ODlkNGUiLCJuYW1lIjoiU1VQRVJfQURNSU4iLCJfX3YiOjB9LCJpc0FjdGl2ZSI6ZmFsc2UsInJvbGVOYW1lIjoiU1VQRVJfQURNSU4iLCJpYXQiOjE1ODc4MzgyNTEsImV4cCI6MTU4Nzg4MTQ1MX0.SoFJYxLZ_zt_7NmHtWzjEpC5T7iAOY5UtX81Nv8zbp8\";\r\n  state = initState;\r\n  adminApi = new AdminAPI();\r\n  doctorApi = new DoctorAPI();\r\n  roomApi = new RoomAPI();\r\n  shiftApi = new ShiftAPI();\r\n  userApi = new UserAPI();\r\n\r\n  //circle\r\n  componentDidMount(){\r\n    console.log(this.state);\r\n    this.GETAll();\r\n    this.GETAllShift();\r\n    setInterval(()=>{\r\n      console.log(this.state);\r\n    },2000)\r\n  }\r\n\r\n  \r\n\r\n  //API\r\n  AddShiftToDoctor = (formData:FormData,idDoctor:string) => {\r\n    if(this.token){\r\n      this.adminApi.addShiftToDoctor(this.token,idDoctor,formData,(res:any)=>{\r\n        console.log(res.data);\r\n      }, \r\n      (err:string)=>{\r\n        console.log(err);\r\n        console.log(err);\r\n      })\r\n    }\r\n  }\r\n\r\n  SearchValueInputSearch = () => {\r\n    console.log('SearchValueInputSearch')\r\n  }\r\n\r\n  DeleteCurrent = (currentId:string) => {\r\n    if(this.token){\r\n      this.adminApi.deleteUser(this.token,currentId,(res:any)=>{\r\n        console.log(res.data);\r\n      }, \r\n      (err:string)=>{\r\n        console.log(err);\r\n      })\r\n    }\r\n  }\r\n\r\n  UpdateCurrent = (idUsers:string,formData:FormData) => {\r\n    if(this.token){\r\n      this.adminApi.updateUser(this.token,idUsers,formData,(res:any)=>{\r\n        console.log(\"Successful\");\r\n      }, \r\n      (err:string)=>{\r\n        console.log(err);\r\n      })\r\n    }\r\n  }\r\n\r\n  GETAll = () =>{\r\n    if(this.token){\r\n      this.adminApi.getAll(this.token,(res:any)=>{\r\n        console.log(res.data);\r\n        this.setState({\r\n          users:res.data.users\r\n        })\r\n      }, \r\n      (err:string)=>{\r\n        console.log(err);\r\n        console.log(err);\r\n      })\r\n    }\r\n  }\r\n\r\n  GETAllShift = () =>{\r\n    if(this.token){\r\n      this.shiftApi.getAll(this.token,(res:any)=>{\r\n        console.log(\"catruc\",res.data.caTruc);\r\n        this.setState({\r\n          shift:res.data.caTruc\r\n        })\r\n      }, \r\n      (err:string)=>{\r\n        console.log(err);\r\n        console.log(err);\r\n      })\r\n    }\r\n  }\r\n\r\n  ////\r\n  getIdRow=(users:api__.Users,featureType: \"update\" | \"delete\" | \"insert\")=>{\r\n    switch(featureType){\r\n      case \"update\":\r\n        this.setState({\r\n          currentUsers:users,\r\n          currentId:users._id,\r\n          showPopup:true,\r\n          featureType\r\n        })\r\n        break;\r\n      case \"insert\":\r\n        this.setState({\r\n          currentUsers:users,\r\n          currentId:users._id,\r\n          showPopup:true,\r\n          featureType\r\n        })\r\n        break;\r\n    }\r\n  }\r\n\r\n\r\n\r\n  addShiftToDoctor = () => {\r\n    let formdata = new FormData();\r\n    formdata.append('idShift',this.state.usersRequest.addshiftidShift);\r\n    this.AddShiftToDoctor(formdata,this.state.currentId);\r\n    let obj = this.state.usersRequest;\r\n    obj.addshiftidShift = \"\";\r\n    this.setState({\r\n      usersRequest:obj\r\n    })\r\n    this.cancelPopup();\r\n    this.GETAll();\r\n  }\r\n\r\n  renderInsertForm = () => {\r\n    return (\r\n      <React.Fragment>\r\n        <Autocomplete\r\n            id=\"country-select-demo\"\r\n            style={{ width: 300 }}\r\n            options={this.state.shift}\r\n            autoHighlight\r\n            getOptionLabel={(option:api__.Shift) => \"Start:\"+(option.startTime)+\"- End:\"+ (option.endTime)}\r\n            renderOption={(option:api__.Shift) => (\r\n              <React.Fragment>\r\n                Start:({option.startTime}) - End:({option.endTime})\r\n              </React.Fragment>\r\n            )}\r\n            renderInput={(params:any) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Choose a Room\"\r\n                variant=\"outlined\"\r\n                inputProps={{\r\n                  ...params.inputProps,\r\n                  autoComplete: 'new-password',\r\n                }}\r\n              />\r\n            )}\r\n            onChange={(event:any, value: any, reason: string) => {\r\n              console.log(\"need\",value);\r\n              this.onchangIdShiftAdmin(value._id);\r\n            }}\r\n          />\r\n          <s__.TextFieldArea>\r\n            <s__.ButtonSubmit\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              size=\"large\"\r\n              startIcon={<SaveIcon />}\r\n              onClick={this.addShiftToDoctor}\r\n            >Save</s__.ButtonSubmit>\r\n          </s__.TextFieldArea>\r\n          <s__.TextFieldArea>\r\n            <s__.ButtonSubmit\r\n              variant=\"contained\"\r\n              color=\"default\"\r\n              size=\"large\"\r\n              startIcon={<CloseIcon />}\r\n              onClick={this.cancelPopup}\r\n            >Cancel</s__.ButtonSubmit>\r\n          </s__.TextFieldArea>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n\r\n  saveUpdatePopup = () => {\r\n    let formdata = new FormData();\r\n    formdata.append('email',this.state.usersRequest.updateemail.toString());\r\n    console.log(this.state.currentId);\r\n    this.UpdateCurrent(this.state.currentId,formdata);\r\n    let obj = this.state.usersRequest;\r\n    obj.updateemail = \"\";\r\n    this.setState({\r\n      usersRequest:obj\r\n    })\r\n    this.cancelPopup();\r\n    this.GETAll();\r\n  }\r\n\r\n  renderUpdateForm = () => {\r\n    return (\r\n      <React.Fragment>\r\n          <s__.TextFieldArea>\r\n            <s__.TextInput\r\n              variant=\"outlined\"\r\n              label=\"Email\"\r\n              id=\"Email\"\r\n              type=\"text\"\r\n              value={this.state.usersRequest.updateemail}\r\n              onChange={this.onchangEmailAdmin}\r\n            />\r\n          </s__.TextFieldArea>\r\n          <s__.TextFieldArea>\r\n            <s__.ButtonSubmit\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              size=\"large\"\r\n              startIcon={<SaveIcon />}\r\n              onClick={this.saveUpdatePopup}\r\n            >Save</s__.ButtonSubmit>\r\n          </s__.TextFieldArea>\r\n          <s__.TextFieldArea>\r\n            <s__.ButtonSubmit\r\n              variant=\"contained\"\r\n              color=\"default\"\r\n              size=\"large\"\r\n              startIcon={<CloseIcon />}\r\n              onClick={this.cancelPopup}\r\n            >Cancel</s__.ButtonSubmit>\r\n          </s__.TextFieldArea>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n\r\n  renderPopupInput = (type:string) => {\r\n    switch(type){\r\n      case \"get\":\r\n        break;\r\n      case \"update\":\r\n        return (\r\n          <React.Fragment>\r\n            {this.renderUpdateForm()}\r\n          </React.Fragment>\r\n        )\r\n      case \"delete\":\r\n        break;\r\n      case \"insert\":\r\n        return (\r\n          <React.Fragment>\r\n            {this.renderInsertForm()}\r\n          </React.Fragment>\r\n        )\r\n    }\r\n    \r\n  }\r\n\r\n  renderPopupInfo = (type:string) => {\r\n    switch(type){\r\n      case \"get\":\r\n        break;\r\n      case \"update\":\r\n        return (\r\n          <React.Fragment>\r\n            <h1>Update Room {this.state.currentUsers.fullName}</h1>\r\n            <h4>Input and click on submit button to update number person on room, or click cancel to exist</h4>\r\n            <p>Current number is {this.state.currentUsers.email}</p>\r\n            <p>Max number is {this.state.currentUsers.fullName}</p>\r\n          </React.Fragment>\r\n        )\r\n      case \"delete\":\r\n        break;\r\n      case \"insert\":\r\n        return (\r\n          <React.Fragment>\r\n            <h1>Create Room</h1>\r\n            <h4>Input and click on submit button to create a new one, else click cancel to exist</h4>\r\n          </React.Fragment>\r\n        )\r\n    }\r\n  }\r\n\r\n  showPopup = (type:string) => {\r\n    \r\n    return (\r\n      <>\r\n        <s__.PopupBackground onClick={this.cancelPopup}>\r\n        </s__.PopupBackground>\r\n        <s__.PopupContainer>\r\n          <s__.PopupInfo>\r\n            {this.renderPopupInfo(type)}\r\n          </s__.PopupInfo>\r\n          <s__.PopupInput>\r\n            {this.renderPopupInput(type)}\r\n          </s__.PopupInput>\r\n        </s__.PopupContainer>\r\n      </>\r\n    )\r\n  }\r\n\r\n  cancelPopup=()=>{\r\n    this.setState({\r\n      showPopup:false\r\n    })\r\n  }\r\n\r\n  setShowPopupByType = (type:\"update\" | \"delete\" | \"insert\") => {\r\n    switch(type){\r\n      case \"update\":\r\n        this.setState({\r\n          updatemode:true,\r\n          featureType:type\r\n        })\r\n        break;\r\n      case \"delete\":\r\n        break;\r\n      case \"insert\":\r\n        this.setState({\r\n          featureType:type,\r\n          showPopup: true\r\n        })\r\n    }\r\n    \r\n  }\r\n\r\n  setInsertMode = () =>{\r\n    this.setState({\r\n      insertmode:!this.state.insertmode,\r\n      featureType: 'insert',\r\n      deletemode: false,\r\n      updatemode:false\r\n    })\r\n  }\r\n  setDeleteMode = () => {\r\n    this.setState({\r\n      deletemode:!this.state.deletemode,\r\n      featureType: 'delete',\r\n      insertmode:false,\r\n      updatemode:false\r\n    })\r\n  }\r\n\r\n  setUpdateMode = () => {\r\n    this.setState({\r\n      updatemode:!this.state.updatemode,\r\n      featureType:'update',\r\n      deletemode:false,\r\n      insertmode:false\r\n    })\r\n  }\r\n\r\n  setShowPopup = () => {\r\n    this.setState({\r\n      showPopup:!this.state.showPopup\r\n    })\r\n  }\r\n\r\n  donotthing = () => {\r\n    console.log(\"success\");\r\n  }\r\n\r\n  setDelAll = () => {\r\n    this.setState({\r\n      delAll:!this.state.delAll,\r\n    })\r\n    console.log(this.state.delAll);\r\n  }\r\n\r\n  setInputSearch = (event: ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({\r\n      valueInputSearch: event.target.value\r\n    })\r\n  }\r\n\r\n  onchangEmailAdmin = (event: ChangeEvent<HTMLInputElement>) => {\r\n    let obj = this.state.usersRequest;\r\n    obj.updateemail = event.target.value;\r\n    this.setState({\r\n      usersRequest:obj\r\n    })\r\n  }\r\n\r\n  onchangIdShiftAdmin = (idShift:string) => {\r\n    let obj = this.state.usersRequest;\r\n    obj.addshiftidShift = idShift;\r\n    this.setState({\r\n      usersRequest:obj\r\n    })\r\n  }\r\n\r\n  //Render\r\n  renderButton= () =>{\r\n    return (\r\n      <div style={{\r\n        backgroundColor:\"darkblue\",\r\n        height:\"auto\",\r\n        borderTopRightRadius:\"5px\", \r\n        borderTopLeftRadius:\"5px\",\r\n        padding:\"20px 0px 0px 20px\",\r\n        color:\"white\"\r\n        }}\r\n      >\r\n        <h1 style={{marginTop:\"0px\"}}>User Manager</h1>\r\n        <s__.FeatureArea>\r\n          {/* <s__.FeatureButton onClick={()=>this.setShowPopupByType(\"insert\")}><p>Add Shift To Doctor</p></s__.FeatureButton> */}\r\n          <s__.FeatureButton style={{backgroundColor:this.state.insertmode?\"tomato\":\"\"}} onClick={this.setInsertMode}><p>{this.state.insertmode?\"Cancel\":\"Add Shift To Doctor\"}</p></s__.FeatureButton>\r\n          <s__.FeatureButton style={{backgroundColor:this.state.updatemode?\"tomato\":\"\"}} onClick={this.setUpdateMode}><p>{this.state.updatemode?\"Cancel\":\"Update User\"}</p></s__.FeatureButton>\r\n          <s__.SearchInput\r\n            id=\"maxNumber\"\r\n            type=\"text\"\r\n            value={this.state.valueInputSearch}\r\n            placeholder=\"Search Room By Name\"\r\n            onChange={this.setInputSearch}\r\n          />\r\n          <s__.FeatureButton onClick={this.SearchValueInputSearch}><p>Search</p></s__.FeatureButton>\r\n          <s__.FeatureButton style={{backgroundColor:this.state.deletemode?\"mediumspringgreen\":\"\",display:this.state.deletemode?\"\":\"none\"}} onClick={this.deleteAllCheckd}><p>Save</p></s__.FeatureButton>\r\n          <s__.FeatureButton style={{backgroundColor:this.state.deletemode?\"tomato\":\"\"}} onClick={this.setDeleteMode}><p>{this.state.deletemode?\"Cancel\":\"Delete\"}</p></s__.FeatureButton>\r\n        </s__.FeatureArea>\r\n        \r\n      </div>\r\n      \r\n    )\r\n  }\r\n\r\n  deleteAllCheckd= () =>{\r\n    console.log('deleteAllCheckd');\r\n    this.state.listDell.map(value => {\r\n      this.DeleteCurrent(value);\r\n    })\r\n    this.setState({\r\n      listDell:[],\r\n      deletemode:false\r\n    })\r\n    this.GETAll();\r\n  }\r\n\r\n  setIdCurrent = (currentId:string) => {\r\n    this.setState({\r\n      currentId\r\n    })\r\n  }\r\n\r\n  setListDel = () => {\r\n    let arr = this.state.listDell;\r\n    if(arr.indexOf(this.state.currentId)===-1){\r\n      arr.push(this.state.currentId)\r\n      this.setState({\r\n        listDell:arr\r\n      })\r\n    }else{\r\n      arr.splice(arr.indexOf(this.state.currentId),1)\r\n      this.setState({\r\n        listDell:arr\r\n      })\r\n    }\r\n  }\r\n\r\n  renderChildTableRoom = () => {\r\n    return this.state.users.map((row) => (\r\n      <s__.TableRowInfo key={row._id} onClick={(this.state.updatemode || this.state.insertmode)?()=>this.getIdRow(row,this.state.featureType):()=>this.setIdCurrent(row._id)}\r\n      onFocus={()=>this.setIdCurrent(row._id)}>\r\n        <TableCell>{row.fullName}</TableCell>\r\n        <TableCell>{row.idRole.name}</TableCell>\r\n        <TableCell>{row.identityCard}</TableCell>\r\n        <TableCell >{row.isActive.toString()}</TableCell>\r\n        <TableCell >{row.phoneNumber}</TableCell>\r\n        <TableCell >{row.dateOfBirth}</TableCell>\r\n        <TableCell >{row.email}</TableCell>\r\n        <TableCell align=\"right\" style={{display:this.state.deletemode?\"\":\"none\"}} >\r\n          <Checkbox \r\n            size=\"small\"\r\n            onChange={this.setListDel}  \r\n          />\r\n        </TableCell>\r\n      </s__.TableRowInfo>\r\n    ))\r\n  }\r\n\r\n  renderGrid = () =>{\r\n    return (\r\n    <div style={{backgroundColor:\"lightcyan\",overflow:\"auto\",height:\"350px\"}}>\r\n      <div >\r\n        <Table size=\"small\">\r\n          <TableHead >\r\n            <s__.TableRowHead style={{height:\"50px\"}}>\r\n              <TableCell>Full Name</TableCell>\r\n              <TableCell>Role</TableCell>\r\n              <TableCell>IdentityCard</TableCell>\r\n              <TableCell>Active</TableCell>\r\n              <TableCell>PhoneNumber</TableCell>\r\n              <TableCell>DateOfBirth</TableCell>\r\n              <TableCell>Email</TableCell>\r\n              <TableCell align=\"right\" style={{display:this.state.deletemode?\"\":\"none\"}}>\r\n                <Checkbox \r\n                  size=\"small\"\r\n                  onChange={this.setDelAll}/>\r\n              </TableCell>\r\n            </s__.TableRowHead>\r\n          </TableHead>\r\n          <TableBody>\r\n            {this.renderChildTableRoom()}\r\n          </TableBody>\r\n        </Table>\r\n      </div>\r\n    </div>\r\n  )\r\n  }\r\n\r\n  renderPaper = () =>{\r\n    return (\r\n      // <s__.PaperDiv>\r\n      //   <s__.PaperDivNumber >\r\n      //     <p style={{margin:\"0px\"}} >1</p>\r\n      //     <p style={{margin:\"0px\"}} >2</p>\r\n      //     <p style={{margin:\"0px\"}} >3</p>\r\n      //   </s__.PaperDivNumber  >\r\n      // </s__.PaperDiv>\r\n        <s__.PaperDiv>\r\n          <s__.PaperDivNumber><p>1</p></s__.PaperDivNumber>\r\n          <s__.PaperDivNumber><p>2</p></s__.PaperDivNumber>\r\n          <s__.PaperDivNumber><p>3</p></s__.PaperDivNumber>\r\n          <s__.PaperDivNumber><p>4</p></s__.PaperDivNumber>\r\n        </s__.PaperDiv>\r\n    )\r\n  }\r\n\r\n  //Main render\r\n  render() {\r\n    return (\r\n      <s__.Container style={{paddingBottom:\"0px\"}}>\r\n        <div>\r\n          {this.state.showPopup?this.showPopup(this.state.featureType):<React.Fragment/>}\r\n          {this.renderButton()}\r\n          {this.renderGrid()}\r\n          {this.renderPaper()}\r\n        </div>\r\n      </s__.Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state:MainState) =>({\r\n  UsersState: state.UsersState\r\n});\r\nexport default connect(mapStateToProps,{})(InfoTableUser);\r\n\r\n\r\n// demoClickRedirect = () => {\r\n//   this.setState({\r\n//     demo:false\r\n//   })\r\n// }\r\n\r\n// demoRedirect = ()=>{\r\n//   if(this.state.demo){\r\n//     return <React.Fragment/>\r\n//   }else{\r\n//     return <Redirect to=\"/about-us\"/>\r\n//   }\r\n// }","import React, { Component } from \"react\";\r\nimport * as s__ from \"./style\";\r\nimport MenuTop from \"./../MenuTop/index\";\r\nimport {\r\n  BrowserRouter,\r\n  Switch,\r\n  Route\r\n} from \"react-router-dom\";\r\n\r\nimport FormRegister from './../FormRegister/index';\r\nimport MenuManager from './../MenuManager/index';\r\nimport InfoTableRoom from './../InfoTableRoom/index';\r\nimport InfoTablePatient from '../InfoTablePatient/index';\r\nimport InfoTableShift from './../InfoTableShift/index';\r\nimport InfoTableUser from '../InfoTableUser/index';\r\nclass RootContainer extends Component {\r\n\r\n  \r\n  renderSwitch = () => {\r\n    return  <Switch>\r\n              <Route path=\"/manager/room\" children={<div><InfoTableRoom/></div>}/>\r\n              <Route path=\"/manager/shift\" children={<div><InfoTableShift/></div>}/>\r\n              <Route path=\"/manager/patient\" children={<div><InfoTablePatient/></div>}/>\r\n              <Route path=\"/manager/user\" children={<div><InfoTableUser/></div>}/>\r\n              <Route path=\"/register\" children={<FormRegister />} />\r\n            </Switch>\r\n  }\r\n\r\n  renderManager = () => {\r\n    return <Route path=\"/manager\" children={<MenuManager/>} />\r\n  }\r\n\r\n  imgArr:string[] =[];\r\n  showMSSV=(ms:string)=>{\r\n    console.log(ms);\r\n  }\r\n  renderImg = () => {\r\n    const classs = \"N18DCMR\";\r\n    for(let i =1;i<10;i++){\r\n      this.imgArr.push(\"http://diemtp.ptithcm.edu.vn/images/studen/\"+classs+\"00\"+i+\".jpg\");\r\n    }\r\n    for(let i =10;i<100;i++){\r\n      this.imgArr.push(\"http://diemtp.ptithcm.edu.vn/images/studen/\"+classs+\"0\"+i+\".jpg\");\r\n    }\r\n    for(let i =100;i<300;i++){\r\n      this.imgArr.push(\"http://diemtp.ptithcm.edu.vn/images/studen/\"+classs+i+\".jpg\");\r\n    }\r\n    return <React.Fragment>{this.imgArr.map((value)=>{\r\n      console.log(value);\r\n      return <img src={value} style={{width:\"20%\"}} onClick={()=>this.showMSSV(value)}/>})}</React.Fragment>\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <s__.Container>\r\n        <MenuTop />\r\n        {this.renderManager()}\r\n        <s__.MainBlock>\r\n          {this.renderSwitch()}\r\n        </s__.MainBlock>\r\n        {/* {this.renderImg()} */}\r\n      </s__.Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RootContainer;\r\n","import React from 'react';\nimport './App.css';\nimport {\n  BrowserRouter,\n} from \"react-router-dom\";\n\nimport RootContainer from './component/RootContainer/index';\n\n\nclass App extends React.Component{\n  render(){\n    return (\n      <BrowserRouter>\n        <RootContainer/>\n      </BrowserRouter>\n    )\n  }\n}\n\nexport default App; \n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {SignInState,SET_IDENTITYCARD_SIGNIN,SET_PASSWORD_SIGNIN,SET_DISPLAY_SIGNIN,SignInActionTypes} from './type';\r\n\r\nconst initState:SignInState = Object.freeze({\r\n  identityCard:'' as string,\r\n  password: '' as string,\r\n  display: false\r\n})\r\n\r\nexport function SignInReducer(\r\n  previousState = initState,\r\n  action:SignInActionTypes\r\n):SignInState{\r\n  switch (action.type) {\r\n    case SET_IDENTITYCARD_SIGNIN:\r\n      return {\r\n        identityCard: action.payload,\r\n        password: previousState.password,\r\n        display: previousState.display\r\n      };\r\n    case SET_PASSWORD_SIGNIN:\r\n      return{\r\n        identityCard: previousState.identityCard ,\r\n        password: action.payload,\r\n        display: previousState.display\r\n      };\r\n    case SET_DISPLAY_SIGNIN:\r\n      return{\r\n        identityCard: previousState.identityCard ,\r\n        password: previousState.password,\r\n        display: action.payload\r\n      };\r\n    default:\r\n      return previousState;\r\n  }\r\n}","import {\r\n  RegisterState,\r\n  SET_ADDRESS_REGISTER,\r\n  SET_EMAIL_REGISTER,\r\n  SET_IDENTITYCARD_REGISTER,\r\n  SET_PASSWORD_REGISTER,\r\n  SET_FULLNAME_REGISTER,\r\n  SET_PHONENUMBER_REGISTER,\r\n  SET_DISPLAY_REGISTER,\r\n  SET_DATEOFBIRTH_REGISTER,\r\n  RegisterActionTypes,\r\n} from \"./type\";\r\n\r\nconst initState: RegisterState = Object.freeze({\r\n  identityCard: \"\",\r\n  email: \"\",\r\n  fullName: \"\",\r\n  address: \"\",\r\n  password: \"\",\r\n  dateOfBirth: \"\",\r\n  phoneNumber: \"\",\r\n  display: true,\r\n});\r\n\r\nexport function RegisterReducer(\r\n  previousState = initState,\r\n  action: RegisterActionTypes\r\n): RegisterState {\r\n  switch (action.type) {\r\n    case SET_ADDRESS_REGISTER:\r\n      return {\r\n        ...previousState,\r\n        address: action.payload\r\n      };\r\n    case SET_EMAIL_REGISTER:\r\n      return {\r\n        ...previousState,\r\n        email: action.payload\r\n      };\r\n    case SET_IDENTITYCARD_REGISTER:\r\n      return {\r\n        ...previousState,\r\n        identityCard: action.payload\r\n      };\r\n    case SET_PASSWORD_REGISTER:\r\n      return {\r\n        ...previousState,\r\n        password: action.payload\r\n      };\r\n    case SET_FULLNAME_REGISTER:\r\n      return {\r\n        ...previousState,\r\n        fullName: action.payload\r\n      };\r\n    case SET_PHONENUMBER_REGISTER:\r\n      return {\r\n        ...previousState,\r\n        phoneNumber: action.payload\r\n      };\r\n    case SET_DATEOFBIRTH_REGISTER:\r\n      return {\r\n        ...previousState,\r\n        dateOfBirth: action.payload\r\n      };\r\n    case SET_DISPLAY_REGISTER:\r\n      return {\r\n        ...previousState,\r\n        display: action.payload\r\n      };\r\n    default:\r\n      return previousState;\r\n  }\r\n}\r\n","export interface UsersState {\r\n    full_name: string;\r\n    avatar : File[];\r\n    token: string;\r\n    dayofbirth: string;\r\n    gmail: string;\r\n}\r\n\r\nexport const SET_FULLNAME_USERS = 'SET_FULLNAME_USERS';\r\nexport const SET_AVATAR_USERS = 'SET_AVATAR_USERS';\r\nexport const SET_TOKEN_USERS = 'SET_TOKEN_USERS';\r\nexport const SET_DAYOFBIRTH_USERS = 'SET_REALLY2CHECKSTATUS_CHECKER';\r\nexport const SET_GMAIL_USERS = 'SET_CHECKTYPESTATUS_CHECKER';\r\n\r\ninterface setFullName {\r\n    type: typeof SET_FULLNAME_USERS;\r\n    payload: string;\r\n}\r\n\r\ninterface setAvatar {\r\n    type: typeof SET_AVATAR_USERS;\r\n    payload: File[];\r\n}\r\n\r\ninterface setToken {\r\n    type: typeof SET_TOKEN_USERS;\r\n    payload: string;\r\n}\r\n\r\ninterface setDayofbirth {\r\n    type: typeof SET_DAYOFBIRTH_USERS;\r\n    payload: string;\r\n}\r\n\r\ninterface setGmail {\r\n    type: typeof SET_GMAIL_USERS;\r\n    payload: string;\r\n}\r\n\r\nexport type UsersTypes = \r\n    | setFullName \r\n    | setAvatar\r\n    | setToken\r\n    | setDayofbirth\r\n    | setGmail;","import { \r\n  UsersState,\r\n  UsersTypes,\r\n  SET_AVATAR_USERS,\r\n  SET_DAYOFBIRTH_USERS,\r\n  SET_FULLNAME_USERS,\r\n  SET_GMAIL_USERS,\r\n  SET_TOKEN_USERS\r\n} from './type';\r\n\r\nconst initState: UsersState = Object.freeze({\r\n  full_name: \"\" as string,\r\n  avatar: [] as File[],\r\n  token: \"\" as string,\r\n  dayofbirth: \"\" as string,\r\n  gmail: \"\" as string\r\n})\r\n\r\nexport function UsersReducer(\r\n  previousState = initState,\r\n  action: UsersTypes\r\n): UsersState {\r\n  switch (action.type) {\r\n    case SET_AVATAR_USERS:\r\n      return {\r\n        avatar: action.payload,\r\n        ...previousState\r\n      };\r\n    case SET_DAYOFBIRTH_USERS:\r\n      return {\r\n        ...previousState,\r\n        dayofbirth:action.payload \r\n      };\r\n    case SET_FULLNAME_USERS:\r\n      return {\r\n        full_name:action.payload,\r\n        ...previousState\r\n      };\r\n    case SET_GMAIL_USERS:\r\n      return {\r\n        ...previousState,\r\n        gmail:action.payload\r\n      };\r\n    case SET_TOKEN_USERS:\r\n      return {\r\n        token: action.payload,\r\n        ...previousState\r\n      };\r\n    default:\r\n      return previousState;\r\n  }\r\n}","import * as api__ from \"../../config/apireturntype\";\r\nexport type idRole = typeof idrole\r\n\r\nconst idrole = {\r\n    __id:'' as string,\r\n    name: '' as string,\r\n    __v: '' as string\r\n}\r\n\r\nexport interface UserssignedState {\r\n    avatar : File[];\r\n    gender :string;\r\n    isActive: boolean;\r\n    gps: string[];\r\n    idRole : typeof idrole;\r\n    _id: string;\r\n    fullName: string;\r\n    email: string;\r\n    identityCard: string;\r\n    password: string;\r\n    phoneNumber: string;\r\n    dateOfBirth: string;\r\n    address: string;\r\n    __v: string;\r\n}\r\n\r\nexport const SET_AVATAR_USERSSIGNED = 'SET_AVATAR_USERSSIGNED';\r\nexport const SET_GENDER_USERSSIGNED = 'SET_GENDER_USERSSIGNED';\r\nexport const SET_ISACTIVE_USERSSIGNED = 'SET_ISACTIVE_USERSSIGNED';\r\nexport const SET_GPS_USERSSIGNED= 'SET_GPS_USERSSIGNED';\r\nexport const SET_IDROLE_USERSSIGNED = 'SET_IDROLE_USERSSIGNED';\r\nexport const SET_ID_USERSSIGNED = 'SET_FULLNAME_USERS';\r\nexport const SET_FULLNAME_USERSSIGNED = 'SET_FULLNAME_USERSSIGNED';\r\nexport const SET_EMAIL_USERSSIGNED = 'SET_EMAIL_USERSSIGNED';\r\nexport const SET_IDENTITYCARD_USERSSIGNED = 'SET_REALLY2CHECKSTATUS_CHECKER';\r\nexport const SET_PASSWORD_USERSSIGNED = 'SET_PASSWORD_USERSSIGNED';\r\nexport const SET_PHONENUMBER_USERSSIGNED = 'SET_PHONENUMBER_USERSSIGNED';\r\nexport const SET_DATEOFBIRTH_USERSSIGNED = 'SET_DATEOFBIRTH_USERSSIGNED';\r\nexport const SET_ADDRESS_USERSSIGNED = 'SET_ADDRESS_USERSSIGNED';\r\nexport const SET_V_USERSSIGNED = 'SET_V_USERSSIGNED';\r\n\r\n\r\n\r\ninterface setAvatar {\r\n    type: typeof SET_AVATAR_USERSSIGNED;\r\n    payload: File[];\r\n}\r\n\r\ninterface setGender {\r\n    type: typeof SET_GENDER_USERSSIGNED;\r\n    payload: string;\r\n}\r\n\r\ninterface setIsActive {\r\n    type: typeof SET_ISACTIVE_USERSSIGNED;\r\n    payload: boolean;\r\n}\r\n\r\ninterface setGPS {\r\n    type: typeof SET_GPS_USERSSIGNED;\r\n    payload: string[];\r\n}\r\n\r\ninterface setIdrole {\r\n    type: typeof SET_IDROLE_USERSSIGNED;\r\n    payload: typeof idrole;\r\n}\r\n\r\ninterface setId {\r\n    type: typeof SET_ID_USERSSIGNED;\r\n    payload: string;\r\n}\r\n\r\ninterface setFullname {\r\n    type: typeof SET_FULLNAME_USERSSIGNED;\r\n    payload: string;\r\n}\r\n\r\ninterface setEmail {\r\n    type: typeof SET_EMAIL_USERSSIGNED;\r\n    payload: string;\r\n}\r\n\r\ninterface setIdentityCard {\r\n    type: typeof SET_IDENTITYCARD_USERSSIGNED;\r\n    payload: string;\r\n}\r\n\r\ninterface setPassword {\r\n    type: typeof SET_PASSWORD_USERSSIGNED;\r\n    payload: string;\r\n}\r\n\r\ninterface setPhoneNumber {\r\n    type: typeof SET_PHONENUMBER_USERSSIGNED;\r\n    payload: string;\r\n}\r\n\r\ninterface setDateOfBirth {\r\n    type: typeof SET_DATEOFBIRTH_USERSSIGNED;\r\n    payload: string;\r\n}\r\n\r\ninterface setAddress {\r\n    type: typeof SET_ADDRESS_USERSSIGNED;\r\n    payload: string;\r\n}\r\n\r\ninterface setV {\r\n    type: typeof SET_V_USERSSIGNED;\r\n    payload: string;\r\n}\r\n\r\nexport type UserssignedTypes = \r\n    | setAvatar\r\n    | setGender\r\n    | setIsActive\r\n    | setGPS\r\n    | setId\r\n    | setAddress\r\n    | setPassword\r\n    | setPhoneNumber\r\n    | setDateOfBirth\r\n    | setIdentityCard\r\n    | setFullname\r\n    | setEmail\r\n    | setIdrole\r\n    | setV\r\n    ;","import { \r\n  UserssignedState,\r\n  UserssignedTypes,\r\n  SET_AVATAR_USERSSIGNED,\r\n  SET_GENDER_USERSSIGNED,\r\n  SET_ISACTIVE_USERSSIGNED,\r\n  SET_GPS_USERSSIGNED,\r\n  SET_IDROLE_USERSSIGNED,\r\n  SET_ID_USERSSIGNED,\r\n  SET_FULLNAME_USERSSIGNED,\r\n  SET_EMAIL_USERSSIGNED,\r\n  SET_IDENTITYCARD_USERSSIGNED,\r\n  SET_PASSWORD_USERSSIGNED,\r\n  SET_PHONENUMBER_USERSSIGNED,\r\n  SET_DATEOFBIRTH_USERSSIGNED,\r\n  SET_ADDRESS_USERSSIGNED,\r\n  SET_V_USERSSIGNED\r\n} from './type';\r\n\r\nconst initState: UserssignedState = Object.freeze({\r\n  avatar :[] as File[],\r\n  gender :'' as string,\r\n  isActive:false as boolean,\r\n  gps:[] as string[],\r\n  idRole :{\r\n    __id:'',\r\n    name:'',\r\n    __v: '',\r\n  },\r\n  _id:'' as string,\r\n  fullName:'' as string,\r\n  email:'' as string,\r\n  identityCard:'' as string,\r\n  password:'' as string,\r\n  phoneNumber:'' as string,\r\n  dateOfBirth:'' as string,\r\n  address:'' as string,\r\n  __v:'' as string,\r\n})\r\n\r\nexport function UserssignedReducer(\r\n  previousState = initState,\r\n  action: UserssignedTypes\r\n): UserssignedState {\r\n  switch (action.type) {\r\n    case SET_AVATAR_USERSSIGNED:\r\n      return {\r\n        avatar: action.payload,\r\n        ...previousState\r\n      };\r\n    case SET_GENDER_USERSSIGNED:\r\n      return {\r\n        ...previousState,\r\n        gender:action.payload \r\n      };\r\n    case SET_ISACTIVE_USERSSIGNED:\r\n      return {\r\n        isActive:action.payload,\r\n        ...previousState\r\n      };\r\n    case SET_GPS_USERSSIGNED:\r\n      return {\r\n        ...previousState,\r\n        gps:action.payload\r\n      };\r\n    case SET_IDROLE_USERSSIGNED:\r\n      return {\r\n        idRole: action.payload,\r\n        ...previousState\r\n      };\r\n      case SET_ID_USERSSIGNED:\r\n      return {\r\n        _id: action.payload,\r\n        ...previousState\r\n      };\r\n    case SET_FULLNAME_USERSSIGNED:\r\n      return {\r\n        ...previousState,\r\n        fullName:action.payload \r\n      };\r\n    case SET_EMAIL_USERSSIGNED:\r\n      return {\r\n        email:action.payload,\r\n        ...previousState\r\n      };\r\n    case SET_IDENTITYCARD_USERSSIGNED:\r\n      return {\r\n        ...previousState,\r\n        identityCard:action.payload\r\n      };\r\n    case SET_PASSWORD_USERSSIGNED:\r\n      return {\r\n        password: action.payload,\r\n        ...previousState\r\n      };\r\n      case SET_PHONENUMBER_USERSSIGNED:\r\n      return {\r\n        phoneNumber: action.payload,\r\n        ...previousState\r\n      };\r\n    case SET_DATEOFBIRTH_USERSSIGNED:\r\n      return {\r\n        ...previousState,\r\n        dateOfBirth:action.payload \r\n      };\r\n    case SET_ADDRESS_USERSSIGNED:\r\n      return {\r\n        address:action.payload,\r\n        ...previousState\r\n      };\r\n    case SET_V_USERSSIGNED:\r\n      return {\r\n        ...previousState,\r\n        __v:action.payload\r\n      };\r\n    default:\r\n      return previousState;\r\n  }\r\n}","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nimport { combineReducers } from \"redux\";\r\n\r\n//reducer import\r\n// import {appReducer} from './App/reducer';\r\nimport {SignInReducer} from './SignInForm/reducer';\r\nimport {RegisterReducer} from './RegisterForm/reducer';\r\nimport {UsersReducer} from './User/reducer';\r\nimport {UserssignedReducer} from './UsersSigned/reducer';\r\n//combine reducer\r\nconst rootReducer = combineReducers({\r\n  UserssignedState:UserssignedReducer,\r\n  SignInState:SignInReducer,\r\n  RegisterState:RegisterReducer,\r\n  UsersState:UsersReducer\r\n});\r\n\r\nexport type MainState = ReturnType<typeof rootReducer>;\r\n\r\nconst middlewares = [thunk];\r\nconst middleWareEnhancer = applyMiddleware(...middlewares);\r\nconst store = createStore(\r\n  rootReducer,\r\n  {},\r\n  composeWithDevTools(middleWareEnhancer)\r\n);\r\nstore.subscribe(() => {});\r\nexport default store;\r\n","export interface SignInState {\r\n  identityCard: string;\r\n  password: string;\r\n  display: boolean;\r\n}\r\n\r\nexport const SET_IDENTITYCARD_SIGNIN = \"SET_IDENTITYCARD_SIGNIN\";\r\nexport const SET_PASSWORD_SIGNIN = \"SET_PASSWORD_SIGNIN\";\r\nexport const SET_DISPLAY_SIGNIN = \"SET_DISPLAY_SIGNIN\";\r\n\r\ninterface setIdentityCard {\r\n  type: typeof SET_IDENTITYCARD_SIGNIN;\r\n  payload: string;\r\n}\r\n\r\ninterface setPassword {\r\n  type: typeof SET_PASSWORD_SIGNIN;\r\n  payload: string;\r\n}\r\n\r\ninterface setDisplay {\r\n  type: typeof SET_DISPLAY_SIGNIN;\r\n  payload: boolean;\r\n}\r\n\r\nexport type SignInActionTypes = setIdentityCard | setPassword | setDisplay;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n//redux\nimport store from './store';\nimport { Provider } from \"react-redux\";\n\nconst Root = ():any =>{\n\treturn (\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>\n\t)\n}\n\nReactDOM.render(<Root />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}